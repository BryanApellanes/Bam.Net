using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

using Bam.Net.Services;
using Bam.Net.CoreServices;
using Bam.Net.Configuration;

namespace {{BaseNamespace}}
{
    public class Startup
    {
        public Startup(IConfiguration configuration)
        {
            ConfigurationResolver.Startup(configuration);
            Configuration = configuration;
        }

        public IConfiguration Configuration { get; }

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.Configure<CookiePolicyOptions>(options =>
            {
                // This lambda determines whether user consent for non-essential cookies is needed for a given request.
                options.CheckConsentNeeded = context => true;
                options.MinimumSameSitePolicy = SameSiteMode.None;
            });

            services.AddSingleton(ApplicationServiceRegistry.Configure((appRegistry) =>
            {                
                // Configure the Bam appRegistry here
                appRegistry
                    .For<IConfiguration>().Use(Configuration)
                    .For<ConfigurationResolver>().Use(new ConfigurationResolver(Configuration))
                    .For<ProxyAssemblyGeneratorService>().Use<ProxyAssemblyGeneratorServiceProxy>();

                appRegistry
                    .RegisterAppModules();

                appRegistry
                    .For<WebServiceRegistry>().Use(WebServiceRegistry.FromRegistry(appRegistry));

                appRegistry.AddServices(services);
            }));

            services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app, IHostingEnvironment env)
        {
            if (env.IsDevelopment())
            {
                app.UseDeveloperExceptionPage();
            }
            else
            {
                app.UseExceptionHandler("/Error");
                app.UseHsts();
            }

            app.UseHttpsRedirection();
            app.UseStaticFiles();
            app.UseCookiePolicy();

            app.UseMvc();
        }
    }
}
