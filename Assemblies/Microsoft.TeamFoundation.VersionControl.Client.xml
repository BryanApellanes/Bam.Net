<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.TeamFoundation.VersionControl.Client</name>
  </assembly>
  <members>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AcceptMergeNamespaceConflictRequiresDestinationException">
      <summary>Describes an AcceptMergeNamespaceConflictRequiresDestinationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptMergeNamespaceConflictRequiresDestinationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptMergeNamespaceConflictRequiresDestinationException.#ctor(System.String)">
      <summary>Encapsulates a message string into an AcceptMergeNamespaceConflictRequiresDestinationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptMergeNamespaceConflictRequiresDestinationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an AcceptMergeNamespaceConflictRequiresDestinationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AcceptMergeVersionConflictRequiresDestinationException">
      <summary>Describes an AcceptMergeVersionConflictRequiresDestinationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptMergeVersionConflictRequiresDestinationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptMergeVersionConflictRequiresDestinationException.#ctor(System.String)">
      <summary>Encapsulates a message string into an AcceptMergeVersionConflictRequiresDestinationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptMergeVersionConflictRequiresDestinationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an AcceptMergeVersionConflictRequiresDestinationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AcceptYoursRenameTheirsRequiresDestinationException">
      <summary>Describes an AcceptYoursRenameTheirsRequiresDestinationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptYoursRenameTheirsRequiresDestinationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptYoursRenameTheirsRequiresDestinationException.#ctor(System.String)">
      <summary>Encapsulates a message string into an AcceptYoursRenameTheirsRequiresDestinationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AcceptYoursRenameTheirsRequiresDestinationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an AcceptYoursRenameTheirsRequiresDestinationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AccessControlEntryFromVersionControl">
      <summary>Represents an AccessControlEntry object from version control.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AccessControlEntryFromVersionControl.#ctor(Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity,System.Int32,System.Int32)">
      <summary>Initializes a new AccessControlEntryFromVersionControl instance.</summary>
      <param name="identity">The identity to which this AccessControlEntry applies.</param>
      <param name="allow">Allow permissions.</param>
      <param name="deny">Deny permissions.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AccessControlEntryFromVersionControl.Identity">
      <summary>Gets the identity to which this AccessControlEntry applies.</summary>
      <returns>The identity to which this AccessControlEntry applies.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AccessEntry">
      <summary>Describes an Access Control List permission entry.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AccessEntry.Allow">
      <summary>Gets or sets the array of permission names that is allowed to this user or group.</summary>
      <returns>The array of permission names that is allowed to this user or group.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AccessEntry.AllowInherited">
      <summary>Gets or sets the array of allowed permission names that was inherited from the parent.</summary>
      <returns>The array of allowed permission names that was inherited from the parent.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AccessEntry.CompareIdentity(Microsoft.TeamFoundation.VersionControl.Client.AccessEntry,Microsoft.TeamFoundation.VersionControl.Client.AccessEntry)">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AccessEntry.Deny">
      <summary>Gets or sets the array of permission names that is denied to this user or group.</summary>
      <returns>The array of permission names that is denied to this user or group.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AccessEntry.DenyInherited">
      <summary>Gets or sets the array of denied permission names that was inherited from the parent.</summary>
      <returns>The array of denied permission names that was inherited from the parent.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AccessEntry.IdentityName">
      <summary>Gets or sets the name of the user or group to which this permission gives access.</summary>
      <returns>The name of the user or group to which this permission gives access.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AccessEntry.ToString">
      <summary>Creates a user-readable string that describes the properties of the AccessEntry object.</summary>
      <returns>A user-readable string that describes the properties of the AccessEntry object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo">
      <summary>Data structure returned by the QueryRepositoryInformation method.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.FileCount"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.FolderCount"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.FromXml(System.IServiceProvider,System.Xml.XmlReader)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.GroupCount"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.MaxChangesetID"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.PendingChangeCount"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.ShelvesetCount"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.ShelvesetDeletedCount"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.ToString"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.ToXml(System.Xml.XmlWriter,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.ToXml(System.Xml.XmlWriter,System.String,Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.UserCount"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdminRepositoryInfo.WorkspaceCount"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters">
      <summary>Class used to pass advanced parameters to the tool execution implementors</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters.CompareIsSourceReadOnly">
      <summary>Is the source file read only</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters.CompareIsTargetReadOnly">
      <summary>Is the destination file read only</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters.IsModalDialog">
      <summary>Whether the operation was invoked from a modal dialog inside VS or not</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters.MergeServerGuid">
      <summary>The server guid</summary>
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters.MergeSourceFileSpec">
      <summary>The file spec of the source file</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters.MergeTargetFileSpec">
      <summary>The file spec of the destination file</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters.ShouldWaitForExit">
      <summary>Whether the tool should wait for exit before returing control to the OM or not</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjects">
      <summary>Represents the team projects that are affected by a set of pending changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjects.#ctor">
      <summary>Initializes a new AffectedTeamProjects instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjects.#ctor(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
      <summary>Initializes a new AffectedTeamProjects instance.</summary>
      <param name="changes">The array of pending changes for which affected team projects is desired.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjects.#ctor(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.PendingChange})">
      <summary>Initializes a new AffectedTeamProjects instance.</summary>
      <param name="changes">The collection of pending changes for which affected team projects is desired.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjects.TeamProjectPaths">
      <summary>Gets an array of the team projects that are affected by a set of pending changes.</summary>
      <returns>An array of the team projects that are affected by a set of pending changes.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjects.Update(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
      <summary>Updates the set of affected team projects that is based on the specified array of pending changes.</summary>
      <returns>True if the set of affected team projects has changed; otherwise, false.</returns>
      <param name="changes">PendingChanges that are used to determine the team projects that are affected.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjects.Update(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.PendingChange})">
      <summary>Updates the set of affected team projects that is based on the specified array of pending changes.</summary>
      <returns>True if the set of affected team projects has changed; otherwise, false.</returns>
      <param name="changes">PendingChanges that are used to determine the team projects that are affected.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjectsEventArgs">
      <summary>The event that describes a list of team projects.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjectsEventArgs.#ctor(System.String[])">
      <summary>Initializes the event arguments to contain the specified array of team projects.</summary>
      <param name="teamProjects">The array of team projects.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjectsEventArgs.TeamProjectPaths">
      <summary>Gets the array of team projects that is affected by this event.</summary>
      <returns>The array of team projects that is affected by this event.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AffectedTeamProjectsEventHandler">
      <summary>The event that describes a list of team projects.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AfterWorkItemsUpdatedEventHandler">
      <summary>Handler used to signal the end of a work item update.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ArtifactIdentifierRequiredException">
      <summary>Describes an ArtifactIdentifierRequiredException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ArtifactIdentifierRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ArtifactIdentifierRequiredException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ArtifactIdentifierRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ArtifactIdentifierRequiredException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ArtifactIdentifierRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ArtifactNotFoundException">
      <summary>Exception to indicate an artifact was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ArtifactNotFoundException.#ctor(System.Uri)">
      <summary>Initializes a new ArtifactNotFoundException instance.</summary>
      <param name="artifactUri">The URI of the artifact that was not found.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AssociatedWorkItemInfo"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AssociatedWorkItemInfo.AssignedTo">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AssociatedWorkItemInfo.Id">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AssociatedWorkItemInfo.State">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AssociatedWorkItemInfo.Title">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.AssociatedWorkItemInfo.WorkItemType">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AuthorizationException">
      <summary>Describes an AutorizationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AuthorizationException.#ctor(System.String)">
      <summary>Encapsulates a message string into an AuthorizationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AuthorizationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an AuthorizationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AutoMergeDisallowedException">
      <summary>Exception that is thrown when an automerge is attempted on a conflict for which automerge is disallowed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AutoMergeDisallowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AutoMergeDisallowedException.#ctor(System.String)">
      <summary>Initializes a new AutoMergeDisallowedException instance.</summary>
      <param name="message">The path of the conflict that has automerge disallowed.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.AutoMergeDisallowedException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions">
      <summary>Enum specifying which conflicts will be resolved as automerge</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.None">
      <summary>Does nothing</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.OnlyLocalTarget">
      <summary>Only conflicts with ChangeSummary.TotalConflicting = 0 and TotalLatest = 0 will be resolved.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.OnlyServerSource">
      <summary>Only conflicts with ChangeSummary.TotalConflicting = 0 and TotalModified = 0 will be resolved.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.BothLocalTargetAndServerSource">
      <summary>All conflicts with ChangeSummary.TotalConflict = 0 will be resolved.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.IncomingRename">
      <summary>Conflict that include source/server rename, but not local/target rename will be resolved.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.Redundant">
      <summary>Behavior intended for Gated Checkin: - only version Get/Checkin - if Your and Their change is identical, content, encoding and path are identical resolves conflicts as TakeTheirs Content is compared for Edit and Branch changes.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.Silent">
      <summary>Conflicts that require name or encoding parameters are not reported to the user.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.AllContent">
      <summary>All conflicts will be resolved and conflict that require name or encoding will be reported to the user.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.All">
      <summary>All content and redundant conflicts will be resolved.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions.AllSilent">
      <summary>All conflicts will be resolved, conflict that require name or encoding will be ignored.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BadChecksumException">
      <summary>Describes a BadChecksumException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BadChecksumException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BadChecksumException.#ctor(System.String)">
      <summary>Encapsulates a message string into a BadChecksumException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BadChecksumException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a BadChecksumException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BaselineUnavailableException">
      <summary>Thrown by the client when an undo wanted to put content on disk, but could not because a baseline was not available offline.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BaselineUnavailableException.#ctor(System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BeforeWorkItemsUpdateEventHandler">
      <summary>Handler used to signal the start of a work item update.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem">
      <summary>The branch history tree item node type that represents an individual node in a branch topology tree.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.#ctor">
      <summary>Initializes a new branch history tree item instance.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.Children">
      <summary>Gets the child branch topology nodes of the current node.</summary>
      <returns>The child branch topology nodes of the current node.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.GetRequestedItem">
      <summary>Searches for the specified item in the tree starting from the root.</summary>
      <returns>The requested history tree item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.Level">
      <summary>Gets the depth of this node in the branch topology tree.</summary>
      <returns>The depth of this node in the branch topology tree.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.Microsoft#TeamFoundation#VersionControl#Common#IBranchHistoryTreeItem#Children"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.Microsoft#TeamFoundation#VersionControl#Common#IBranchHistoryTreeItem#Level"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.Microsoft#TeamFoundation#VersionControl#Common#IBranchHistoryTreeItem#Parent"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.Microsoft#TeamFoundation#VersionControl#Common#IBranchHistoryTreeItem#Relative"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.Parent">
      <summary>Gets the parent branch topology tree node.</summary>
      <returns>The parent branch topology tree node.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem.Relative">
      <summary>Gets the edge of the branch topology tree where this node exists.</summary>
      <returns>The edge of the branch topology tree where this node exists.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject">
      <summary>Describes properties of a BranchObject class that are relevant to the repository.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObject.ChildBranches">
      <summary>Gets the child branches of this branch.</summary>
      <returns>The child branches of this branch.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObject.DateCreated">
      <summary>Gets the time and date that the branch was created.</summary>
      <returns>The time and date that the branch was created.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObject.Properties">
      <summary>Gets the properties of the branch.</summary>
      <returns>The properties of the branch.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObject.RelatedBranches">
      <summary>Gets the branches that are related to this branch.</summary>
      <returns>The branches that are related to this branch.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchObject.ToString">
      <summary>Creates a user-readable string that describes the properties of this branch.</summary>
      <returns>A user-readable string that describes the properties of this branch.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectCreatedEventArgs">
      <summary>Argument for the branch object created event.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectCreatedEventArgs.#ctor(Microsoft.TeamFoundation.VersionControl.Client.BranchProperties)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectCreatedEventArgs.Properties"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectCreatedEventHandler">
      <summary>Handler for branch object created.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectDeletedEventArgs">
      <summary>Argument for the branch object deleted event.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectDeletedEventArgs.#ctor(Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectDeletedEventArgs.RootItem"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectDeletedEventHandler">
      <summary>Handler for branch object deleted.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectOwnership">
      <summary>Used to return branch root information from the repository.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectOwnership.RootItem">
      <summary>Gets or sets the root item of this branch.</summary>
      <returns>The root item of this branch.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectOwnership.ToString">
      <summary>Creates a user-readable string that describes properties of this branch.</summary>
      <returns>A user-readable string that describes properties of this branch.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectOwnership.VersionedItemCount">
      <summary>Gets or sets the number of version items in this branch.</summary>
      <returns>The number of version items in this branch.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectUpdatedEventArgs">
      <summary>Event arguments for branch object updated.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectUpdatedEventArgs.#ctor(Microsoft.TeamFoundation.VersionControl.Client.BranchProperties)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectUpdatedEventArgs.Properties"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectUpdatedEventHandler">
      <summary>Handler for branch object updated.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties">
      <summary>Describes properties of a branch object.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties.#ctor(Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier)">
      <summary>$#$ Initializes a new BranchProperties instance from a root item. $#$</summary>
      <param name="rootItem">The root item of the branch.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties.BranchMappings">
      <summary>Gets or sets the mappings of this branch.</summary>
      <returns>The mappings of this branch.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties.Description">
      <summary>Gets or sets the description of this branch.</summary>
      <returns>The description of this branch.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties.Owner">
      <summary>Gets or sets the owner of this branch.</summary>
      <returns>The owner of this branch.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties.OwnerDisplayName"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties.ParentBranch">
      <summary>Gets or sets the parent of this branch.</summary>
      <returns>The parent of this branch.  Null if there is no parent.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties.RootItem">
      <summary>Gets the root item of this branch.</summary>
      <returns>The root item of this branch.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchProperties.ToString">
      <summary>Creates a user-readable string that describes the properties of this BranchProperties object.</summary>
      <returns>A user-readable string that describes the properties of this BranchProperties object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative">
      <summary>Represents a row from the QueryBranches object.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.BranchFromItem">
      <summary>Gets the BranchedFrom item.</summary>
      <returns>The BranchedFrom item, or null if the user does not have read permissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.BranchToChangeType">
      <summary>Gets a ChangeType object that represents how this branch was created.</summary>
      <returns>A ChangeType object that represents how this branch was created.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.BranchToItem">
      <summary>Gets the BranchedTo item.</summary>
      <returns>The BranchedTo item.  Null if the user does not have read permissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.IsRequestedItem">
      <summary>Gets a flag that describes whether this item was requested.</summary>
      <returns>True if this item was requested; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.Microsoft#TeamFoundation#VersionControl#Common#IBranchRelative#BranchFromItem"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.Microsoft#TeamFoundation#VersionControl#Common#IBranchRelative#BranchToItem"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.Microsoft#TeamFoundation#VersionControl#Common#IBranchRelative#IsRequestedItem"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.Microsoft#TeamFoundation#VersionControl#Common#IBranchRelative#RelativeFromItemId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.Microsoft#TeamFoundation#VersionControl#Common#IBranchRelative#RelativeToItemId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.RelativeFromItemId">
      <summary>Gets the relative ID of the BranchedFrom item.</summary>
      <returns>The relative ID of the BranchedFrom item.  0 if this is the root of the branch topology graph.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.RelativeToItemId">
      <summary>Gets the relative ID of the BranchedTo item.</summary>
      <returns>The relative ID of the BranchedTo item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchRelative.ToString">
      <summary>Creates a user-readable string that describes the properties of a BranchRelative object.</summary>
      <returns>A user-readable string that describes the properties of a BranchRelative object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.BranchSourceNotCommittedException">
      <summary>Describes a BranchSourceNotCommittedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchSourceNotCommittedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchSourceNotCommittedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a BranchSourceNotCommittedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.BranchSourceNotCommittedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a BranchSourceNotCommittedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CancelException">
      <summary>Exception for user-requested cancellation of the actions of the client.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CancelException.#ctor">
      <summary>Initializes a new CancelException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CancelException.#ctor(System.Exception)">
      <summary>Initializes a new CancelException instance.</summary>
      <param name="cancelledInnerException">An exception object from which to create a CancelException instance.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CancelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CancelException.#ctor(System.String)">
      <summary>Initializes a new CancelException instance.</summary>
      <param name="message">Describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CancelException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new CancelException instance.</summary>
      <param name="message">Describes the exception.</param>
      <param name="cancelledInnerException">An exception object from which to create a CancelException instance.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotBranchDestroyedContentException">
      <summary>Describes a CannotBranchDestroyedContentException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotBranchDestroyedContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotBranchDestroyedContentException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotBranchDestroyedContentException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotBranchDestroyedContentException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotBranchDestroyedContentException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotChangeRootFolderException">
      <summary>Describes a CannotChangeRootFolderException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotChangeRootFolderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotChangeRootFolderException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotChangeRootFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotChangeRootFolderException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotChangeRootFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotChangeWorkspaceOwnerException">
      <summary>Describes a CannotChangeWorkspaceOwnerException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotChangeWorkspaceOwnerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotChangeWorkspaceOwnerException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotChangeWorkspaceOwnerException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotChangeWorkspaceOwnerException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotChangeWorkspaceOwnerException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinAllWithEditException">
      <summary>Describes a CannotCheckinAllWithEditException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinAllWithEditException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinAllWithEditException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotCheckinAllWithEditException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinAllWithEditException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotCheckinAllWithEditException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinDependantRenameException">
      <summary>Describes a CannotCheckinDependantRenameException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinDependantRenameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinDependantRenameException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotCheckinDependantRenameException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinDependantRenameException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotCheckinDependantRenameException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinPartialUndeleteException">
      <summary>Describes a CannotCheckinPartialUndeleteException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinPartialUndeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinPartialUndeleteException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotCheckinPartialUndeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinPartialUndeleteException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotCheckinPartialUndeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinRenameAsPendingAddConflictsException">
      <summary>Describes a CannotCheckinRenameAsPendingAddConflictsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinRenameAsPendingAddConflictsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinRenameAsPendingAddConflictsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotCheckinRenameAsPendingAddConflictsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinRenameAsPendingAddConflictsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotCheckinRenameAsPendingAddConflictsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinRenameDueToChildConflictException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinRenameDueToChildConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinRenameDueToChildConflictException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCheckinRenameDueToChildConflictException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotCreateFilesInRootException">
      <summary>Describes a CannotCreateFilesInRootException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCreateFilesInRootException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCreateFilesInRootException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotCreateFilesInRootException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCreateFilesInRootException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotCreateFilesInRootException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotCreateParentFolderException">
      <summary>Describes a CannotCreateParentFolderException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCreateParentFolderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCreateParentFolderException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotCreateParentFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotCreateParentFolderException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotCreateParentFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotDeleteTeamProjectFolderException">
      <summary>Describes a CannotDeleteTeamProjectFolderException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotDeleteTeamProjectFolderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotDeleteTeamProjectFolderException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotDeleteTeamProjectFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotDeleteTeamProjectFolderException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotDeleteTeamProjectFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotDestroyRootException">
      <summary>Describes a CannotDestroyRootException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotDestroyRootException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotDestroyRootException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotDestroyRootException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotDestroyRootException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotDestroyRootException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotFindLatestChangesetException">
      <summary>Describes a CannotFindLatestChangesetException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotFindLatestChangesetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotFindLatestChangesetException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotFindLatestChangesetException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotFindLatestChangesetException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotFindLatestChangesetException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotLockException">
      <summary>Describes a CannotLockException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotLockException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotLockException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotLockException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotLockException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeDestroyedFileException">
      <summary>Describes a CannotMergeDestroyedFileException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeDestroyedFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeDestroyedFileException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotMergeDestroyedFileException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeDestroyedFileException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotMergeDestroyedFileException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeUnderSourceException">
      <summary>Describes a CannotMergeUnderSourceException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeUnderSourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeUnderSourceException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotMergeUnderSourceException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeUnderSourceException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotMergeUnderSourceException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeWithExistingConflictException">
      <summary>Describes a CannotMergeWithExistingConflictException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeWithExistingConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeWithExistingConflictException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotMergeWithExistingConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeWithExistingConflictException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotMergeWithExistingConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeWithWorkspaceSpecAndPendingDeleteException">
      <summary>Describes a CannotMergeWithWorkspaceSpecAndPendingDeleteException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeWithWorkspaceSpecAndPendingDeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeWithWorkspaceSpecAndPendingDeleteException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotMergeWithWorkspaceSpecAndPendingDeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMergeWithWorkspaceSpecAndPendingDeleteException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotMergeWithWorkspaceSpecAndPendingDeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotMoveToRootException">
      <summary>Describes a CannotMoveToRootException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMoveToRootException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMoveToRootException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotMoveToRootException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotMoveToRootException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotMoveToRootException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotPendChangeOnDestroyedFileException">
      <summary>Describes a CannotPendChangeOnDestroyedFileException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendChangeOnDestroyedFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendChangeOnDestroyedFileException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotPendChangeOnDestroyedFileException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendChangeOnDestroyedFileException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotPendChangeOnDestroyedFileException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotPendEditOnDeletedFileWithGetLatestException">
      <summary>Describes a CannotPendEditOnDeletedFileWithGetLatestException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendEditOnDeletedFileWithGetLatestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendEditOnDeletedFileWithGetLatestException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotPendEditOnDeletedFileWithGetLatestException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendEditOnDeletedFileWithGetLatestException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotPendEditOnDeletedFileWithGetLatestException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotPendEditOnRenamedFileWithGetLatestException">
      <summary>Describes a CannotPendEditOnRenamedFileWithGetLatestException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendEditOnRenamedFileWithGetLatestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendEditOnRenamedFileWithGetLatestException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotPendEditOnRenamedFileWithGetLatestException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotPendEditOnRenamedFileWithGetLatestException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotPendEditOnRenamedFileWithGetLatestException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameBackToOriginalSourceException">
      <summary>Describes a CannotRenameBackToOriginalSourceException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameBackToOriginalSourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameBackToOriginalSourceException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotRenameBackToOriginalSourceException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameBackToOriginalSourceException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotRenameBackToOriginalSourceException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameDueToChildConflictException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameDueToChildConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameDueToChildConflictException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameDueToChildConflictException.#ctor(System.String,System.Exception)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotRenameDueToChildConflictException.#ctor(System.String,System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveAcceptMergeWithNonexistentVersionException">
      <summary>Describes a CannotResolveAcceptMergeWithNonexistentVersionException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveAcceptMergeWithNonexistentVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveAcceptMergeWithNonexistentVersionException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotResolveAcceptMergeWithNonexistentVersionException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveAcceptMergeWithNonexistentVersionException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotResolveAcceptMergeWithNonexistentVersionException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveBecauseShelvesetDeletedException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveBecauseShelvesetDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveBecauseShelvesetDeletedException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveBecauseShelvesetDeletedException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveConflictAsAutoMerge"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveConflictAsAutoMerge.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveConflictAsAutoMerge.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveConflictAsAutoMerge.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveDeletedItemWithAcceptMergeException">
      <summary>Describes a CannotResolveDeletedItemWithAcceptMergeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveDeletedItemWithAcceptMergeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveDeletedItemWithAcceptMergeException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotResolveDeletedItemWithAcceptMergeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveDeletedItemWithAcceptMergeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotResolveDeletedItemWithAcceptMergeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveDueToRenameAndDelete"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveDueToRenameAndDelete.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveDueToRenameAndDelete.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveDueToRenameAndDelete.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveToPartialUndeleteException">
      <summary>Describes a CannotResolveToPartialUndeleteException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveToPartialUndeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveToPartialUndeleteException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotResolveToPartialUndeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotResolveToPartialUndeleteException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotResolveToPartialUndeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotSetMappingOnRenameException">
      <summary>Describes a CannotSetMappingOnRenameException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotSetMappingOnRenameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotSetMappingOnRenameException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotSetMappingOnRenameException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotSetMappingOnRenameException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotSetMappingOnRenameException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotShelvePartialUndeleteException">
      <summary>Describes a CannotShelvePartialUndeleteException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotShelvePartialUndeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotShelvePartialUndeleteException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotShelvePartialUndeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotShelvePartialUndeleteException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotShelvePartialUndeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotSpecifyNewNameException">
      <summary>Describes a CannotSpecifyNewNameException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotSpecifyNewNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotSpecifyNewNameException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotSpecifyNewNameException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotSpecifyNewNameException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotSpecifyNewNameException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotTakeCheckoutLockInLocalWorkspaceException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotTakeCheckoutLockInLocalWorkspaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotTakeCheckoutLockInLocalWorkspaceException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotTakeCheckoutLockInLocalWorkspaceException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotUndeleteTeamProjectFolderException">
      <summary>Describes a CannotUndeleteTeamProjectFolderException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndeleteTeamProjectFolderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndeleteTeamProjectFolderException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotUndeleteTeamProjectFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndeleteTeamProjectFolderException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotUndeleteTeamProjectFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotUndoItemExistingLockConflictsException">
      <summary>Describes a CannotUndoItemExistingLockConflictsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndoItemExistingLockConflictsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndoItemExistingLockConflictsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotUndoItemExistingLockConflictsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndoItemExistingLockConflictsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotUndoItemExistingLockConflictsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotUndoRenameDueToChildConflictException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndoRenameDueToChildConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndoRenameDueToChildConflictException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUndoRenameDueToChildConflictException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CannotUnlockException">
      <summary>Describes a CannotUnlockException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUnlockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUnlockException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CannotUnlockException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CannotUnlockException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CannotUnlockException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Change">
      <summary>Represents an individual change to an item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Change.ChangeType">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType" /> object that describes the type of change that occurred.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType" /> object that describes the type of change that occurred.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Change.Item">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> that is affected by this change.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> that is affected by this change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Change.MergeSources">
      <summary>Gets a read-only collection of source information about merges.</summary>
      <returns>A read-only collection of source information about merges.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Change.ToString">
      <summary>Creates a user-readable string that describes the properties of this Change object.</summary>
      <returns>A user-readable string that describes the properties of this Change object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeAlreadyPendingException">
      <summary>Describes a ChangeAlreadyPendingException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangeAlreadyPendingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangeAlreadyPendingException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ChangeAlreadyPendingException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangeAlreadyPendingException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ChangeAlreadyPendingException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset">
      <summary>Represents a set of changes committed to the repository.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.ArtifactUri">
      <summary>Gets the artifact uniform resource identifier (URI) that is associated with this changeset.</summary>
      <returns>The artifact URI that is associated with this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.AssociatedWorkItems">
      <summary>Returns a limited set of information about the associated work items with this changeset. This property does not spin up a WorkItemStore. Therefore, it is very quick.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Changes">
      <summary>Gets or sets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" /> objects that make up this changeset.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" /> objects that make up this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.ChangesetId">
      <summary>Gets or sets the ID of this changeset.</summary>
      <returns>The ID of this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.CheckinNote">
      <summary>Gets or sets the check-in note of the changeset.</summary>
      <returns>The check-in note of the changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Comment">
      <summary>Gets or sets the comment of the changeset.</summary>
      <returns>The comment of the changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Committer">
      <summary>Gets or sets the user who committed this changeset.</summary>
      <returns>The user who committed this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.CommitterDisplayName">
      <summary>Display name of user who committed this change</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.CreationDate">
      <summary>Gets or sets the creation date of this changeset.</summary>
      <returns>The creation date of this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Owner">
      <summary>Gets or sets the owner of this changeset.</summary>
      <returns>The owner of this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.OwnerDisplayName">
      <summary>Display name of user who owns this change. May differ from Committer if the change was imported or committed on behalf of another user.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.PolicyOverride">
      <summary>Gets or sets the policy override information of this changeset.</summary>
      <returns>The policy override information of this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Properties">
      <summary>Gets a read-only collection of properties that is associated with this changeset.</summary>
      <returns>A read-only collection of properties that is associated with this changeset.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Changeset.ToString">
      <summary>Creates a user-readable string that describes the relevant properties of this Changeset instance.</summary>
      <returns>A user-readable string that describes the relevant properties of this Changeset instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Changeset.Update">
      <summary>Updates the changeset metadata on the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.VersionControlServer">
      <summary>Gets the repository that contains this changeset.</summary>
      <returns>The repository that contains this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Changeset.WorkItems">
      <summary>Gets an array of work items that are associated with this changeset.</summary>
      <returns>An array of work items that are associated with this changeset.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetAuthorMustBeNonGroupException">
      <summary>Describes a ChangesetAuthorMustBeNonGroupException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetAuthorMustBeNonGroupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetAuthorMustBeNonGroupException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ChangesetAuthorMustBeNonGroupException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetAuthorMustBeNonGroupException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ChangesetAuthorMustBeNonGroupException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge">
      <summary>Represents a merge of one changeset into another changeset.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge.Partial">
      <summary>Gets a flag that describes whether this merge is partial.</summary>
      <returns>False if all changes from the source changeset were successfully merged into the target changeset; otherwise, true.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge.SourceVersion">
      <summary>Gets the version of the source changeset.</summary>
      <returns>The version of the source changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge.TargetChangeset">
      <summary>Gets the changeset in which the merge occurred.</summary>
      <returns>The changeset in which the merge occurred.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge.TargetVersion">
      <summary>Gets the version of the target changeset.</summary>
      <returns>The version of the target changeset.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge.ToString">
      <summary>Creates a user-readable string that describes the relevant properties of this ChangesetMerge instance.</summary>
      <returns>A user-readable string that describes the relevant properties of this ChangesetMerge instance.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMergeDetails">
      <summary>Represents the information about a changeset merge.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMergeDetails.Changesets">
      <summary>Gets an array of changesets that are associated with this merge.</summary>
      <returns>An array of changesets that are associated with this merge.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMergeDetails.MergedItems">
      <summary>Gets an array of the merged items.</summary>
      <returns>An array of the merged items.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMergeDetails.ToString">
      <summary>Creates a user-readable string that describes this ChangesetMergeDetails object.</summary>
      <returns>A user-readable string that describes this ChangesetMergeDetails object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMergeDetails.UnmergedItems">
      <summary>Gets an array of the unmerged items.</summary>
      <returns>An array of the unmerged items.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetNotFoundException">
      <summary>Describes a ChangesetNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ChangesetNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ChangesetNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetReconciledEventArgs">
      <summary>Event arguments describing a reconcile-to-changeset event</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetReconciledEventArgs.#ctor(System.Int32)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetReconciledEventArgs.ChangesetId">
      <summary>The id of the changeset that was checked in.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetReconciledEventHandler">
      <summary>Handler for reconcile to changeset events</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary">
      <summary>Represents additional information about a changeset.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary.ChangesetId">
      <summary>Gets or sets the ID of the changeset.</summary>
      <returns>The ID of the changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary.Comment">
      <summary>Gets or sets the comment on the changeset.</summary>
      <returns>The comment on the changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary.Committer">
      <summary>Gets or sets the committer of the changeset.</summary>
      <returns>The committer of the changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary.CommitterDisplayName"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary.CreationDate">
      <summary>Gets or sets the creation date of the changeset.</summary>
      <returns>The creation date of the changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary.Owner">
      <summary>Gets or sets the owner of the changeset.</summary>
      <returns>The owner of the changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary.OwnerDisplayName"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetSummary.ToString">
      <summary>Creates a user-readable string that describes the properties of this ChangesetSummary object.</summary>
      <returns>A user-readable string that describes the properties of this ChangesetSummary object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec">
      <summary>Specifies a version based on a changeset number.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.#ctor(System.Int32)">
      <summary>Initializes a new ChangesetVersionSpec instance.</summary>
      <param name="changeset">The changeset ID.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.#ctor(System.String)">
      <summary>Initializes a new ChangesetVersionSpec instance.</summary>
      <param name="changeset">The changeset ID.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.ChangesetId">
      <summary>Gets or sets the ID for a changeset.</summary>
      <returns>The ID for a changeset.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.Equals(System.Object)">
      <summary>Determines whether this ChangesetVersionSpec instance is equal to the specified instance.</summary>
      <returns>True if the other instance is equivalent to this one; otherwise, false.</returns>
      <param name="obj">The other instance to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.GetHashCode">
      <summary>Generates a hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.Identifier">
      <summary>Identifier for this version spec in command-line usage.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.ParseChangesetNumber(System.String)">
      <summary>Parses the string as a changeset number. Throws an exception if the changeset number is not a valid changeset integer.</summary>
      <returns>The changeset number.</returns>
      <param name="changeset">The changeset ID.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecException"></exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ChangesetVersionSpec.ToString">
      <summary>Creates a user-readable string that describes the properties of a ChangesetVersionSpec object.</summary>
      <returns>A user-readable string that describes the properties of a ChangesetVersionSpec object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType">
      <summary>Describes the type of change that applied to an item.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Add">
      <summary>Add change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Branch">
      <summary>Branch change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Delete">
      <summary>Delete change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Edit">
      <summary>Edit change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Encoding">
      <summary>Encoding change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Lock">
      <summary>Lock change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Merge">
      <summary>Merge change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.None">
      <summary>No change.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Property">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Rename">
      <summary>Rename change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Rollback">
      <summary>Rollback change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.SourceRename">
      <summary>Source rename change type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ChangeType.Undelete">
      <summary>Undelete change type.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinConflict">
      <summary>This class represents conflicts that are recorded by check-in evaluation.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinConflict.Message">
      <summary>Gets the localized message that describes the conflict.</summary>
      <returns>The localized message that describes the conflict.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinConflict.Resolvable">
      <summary>Gets a flag that describes whether the conflict can be resolved by using the standard conflict resolution mechanism.</summary>
      <returns>True if the conflict can be resolved by using the standard conflict resolution mechanism; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinConflict.ServerItem">
      <summary>Gets the path of the server item that is in conflict.</summary>
      <returns>The path of the server item that is in conflict.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions">
      <summary>Options for check-in evaluation. Specifies which aspects of the check-in should be evaluated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions.Policies">
      <summary>Evaluate policies.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions.Conflicts">
      <summary>Evaluate conflicts.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions.Notes">
      <summary>Evaluate notes.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions.AddMissingFieldValues">
      <summary>Supply this bit only in combination with the Notes bit. Indicates that the EvaluateCheckin family of methods should modify the CheckinNote object provided to add CheckinNoteFieldValues for checkin notes that are defined, but for which no value was supplied. The values will be added with a value of String.Empty. The string casing of the Name part of each CheckinNoteFieldValue provided by the caller will also be corrected to match the casing in the corresponding CheckinNoteFieldDefinition.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions.All">
      <summary>Evaluate all items.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationResult">
      <summary>This class holds the results of an evaluation of a set of changes that will be checked in.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationResult.Conflicts">
      <summary>Gets the check-in conflicts that are returned by the server.</summary>
      <returns>The check-in conflicts that are returned by the server.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationResult.NoteFailures">
      <summary>Gets the check-in note failures.</summary>
      <returns>The check-in note failures.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationResult.PolicyEvaluationException">
      <summary>Gets the exception that occurred if policy evaluation threw an exception.</summary>
      <returns>The exception that occurred if policy evaluation threw an exception; otherwise, null.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationResult.PolicyFailures">
      <summary>Gets the check-in policy failures.</summary>
      <returns>The check-in policy failures.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinException">
      <summary>Exception to indicate that conflicts occurred that prevented check-in.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.#ctor">
      <summary>Initializes a new CheckinException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.#ctor(Microsoft.TeamFoundation.VersionControl.Client.CheckinConflict[],System.Boolean,System.Boolean,System.String)">
      <summary>Creates a CheckinException from the provided parameters.</summary>
      <param name="conflicts">The conflicts from the checkin.</param>
      <param name="isResolvable">True if there are resolvable conflicts from the checkin.</param>
      <param name="allConflictsResolved">True if all resolvable conflicts have been auto resolved.</param>
      <param name="message">The error message for the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.#ctor(Microsoft.TeamFoundation.VersionControl.Client.CheckinConflict[],System.Boolean,System.String)">
      <summary>Initializes a new CheckinException instance.</summary>
      <param name="conflicts">The conflicts that caused this exception.</param>
      <param name="isResolvable">True if the conflicts can be resolved; otherwise, false.</param>
      <param name="message">A message that states the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.#ctor(System.Exception)">
      <summary>Initializes a new CheckinException instance.</summary>
      <param name="innerException">The exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.#ctor(System.String)">
      <summary>Initializes a new CheckinException instance.</summary>
      <param name="message">A message that states the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new CheckinException instance.</summary>
      <param name="message">A message that states this exception.</param>
      <param name="innerException">The exception that caused this exception.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.AllResolvableConflictsWereAutoResolved">
      <summary>This is true if there were resolvable conflicts and they were all resolved.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.Conflicts">
      <summary>Gets the array of conflicts that caused this exception.</summary>
      <returns>The array of conflicts that caused this exception.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinException.IsResolvable">
      <summary>Gets a flag that describes whether the all conflicts can be resolved.</summary>
      <returns>True if all conflicts can be resolved; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote">
      <summary>Represents the check-in notes that are part of a changeset.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote.#ctor(Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldValue[])">
      <summary>Initializes a new CheckinNote instance.</summary>
      <param name="values">The check-in notes to assign to this instance.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote.Evaluate(Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition[])">
      <summary>Evaluates a CheckinNote's CheckinNoteFieldValues against the supplied CheckinNoteFieldDefinitions and returns a CheckinNoteFailure for each note not specified, or each note specified that has no definition (extraneous notes).</summary>
      <returns>The set of checkin note failures</returns>
      <param name="note">The CheckinNote to evaluate. May be null.</param>
      <param name="fieldDefinitions">The set of field definitions to evaluate against</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote.Evaluate(Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition[])">
      <summary>Evaluates this CheckinNote's CheckinNoteFieldValues against the supplied CheckinNoteFieldDefinitions and returns a CheckinNoteFailure for each note not specified, or each note specified that has no definition (extraneous notes).</summary>
      <returns>The set of checkin note failures</returns>
      <param name="fieldDefinitions">The set of field definitions to evaluate against</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote.MergeWithFieldDefinitions(Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition[])">
      <summary>For any unspecified CheckinNoteFieldDefinitions that are in scope, add a CheckinNoteFieldValue with an empty string value.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote.ToString">
      <summary>Creates a user-readable string that describes the properties of this check-in note.</summary>
      <returns>A user-readable string that describes the properties of this check-in note.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote.Values">
      <summary>Gets the values of this check-in note.</summary>
      <returns>The values of this check-in note.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFailure">
      <summary>A class that describes a failure in check-in note evaluation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFailure.#ctor(Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition,System.String)">
      <summary>Initializes the check-in note failure.</summary>
      <param name="definition">The field definition.</param>
      <param name="message">The message that will be displayed for the failure.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFailure.Definition">
      <summary>Gets the definition of the check-in note that failed.</summary>
      <returns>The definition of the check-in note that failed.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFailure.Message">
      <summary>Gets the description of the check-in note failure.</summary>
      <returns>The description of the check-in note failure.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition">
      <summary>Represents a check-in note field definition.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition.#ctor(System.String,System.Boolean,System.Int32)">
      <summary>Initializes a new CheckinNoteFieldDefinition instance.</summary>
      <param name="name">The name of the field.</param>
      <param name="required">True if the field cannot be null or empty; otherwise, false.</param>
      <param name="displayOrder">The display order of the field.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition.DisplayOrder">
      <summary>Gets or sets the display order of this field.</summary>
      <returns>The display order of this field.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition.DisplayOrderComparer">
      <summary>Gets the comparer object for field display-order.</summary>
      <returns>The comparer object for field display-order.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition.Name">
      <summary>Gets or sets the name of this field definition.</summary>
      <returns>The name of this field definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition.NameComparer">
      <summary>Gets the comparer object for name fields. The name comparer is culture-sensitive and case-insensitive.</summary>
      <returns>The comparer object for name fields.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition.Required">
      <summary>Gets or sets a flag that describes whether this field is required.</summary>
      <returns>True if this field is required; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition.ServerItem">
      <summary>Gets or sets the server item that is associated with this check-in note field definition.</summary>
      <returns>The server item that is associated with this check-in note field definition.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition.ToString">
      <summary>Creates a user-readable string that describes the properties of this CheckinNoteFieldDefinition object.</summary>
      <returns>A user-readable string that describes the properties of this CheckinNoteFieldDefinition object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldValue">
      <summary>Represents a check-in note field value.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldValue.#ctor(System.String,System.String)">
      <summary>Initializes a new CheckinNoteFieldValue instance.</summary>
      <param name="name">The name of the field.</param>
      <param name="value">The value to store in the field.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldValue.Name">
      <summary>Gets or sets the name of this CheckinNoteFieldValue.</summary>
      <returns>The name of this CheckinNoteFieldValue.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldValue.ToString">
      <summary>Creates a user-readable string that describes the properties of this CheckinNoteFieldValue object.</summary>
      <returns>A user-readable string that describes the properties of this CheckinNoteFieldValue object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldValue.Value">
      <summary>Gets or sets the value of this CheckinNoteFieldValue.</summary>
      <returns>The value of this CheckinNoteFieldValue.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinOptions">
      <summary>Check-in options.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinOptions.None">
      <summary>No check-in options are specified.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinOptions.SuppressEvent">
      <summary>Suppress events.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinOptions.ValidateCheckinOwner">
      <summary>Validate the check-in owner.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters">
      <summary>Represents data that is required for a checkin.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters.#ctor(Microsoft.TeamFoundation.VersionControl.Common.CheckInOptions2)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters.AllowUnchangedContent">
      <summary>Gets or sets a flag describing whether the server will permit a check-in of unchanged content.</summary>
      <returns>True to allow a check-in of unchanged content; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters.Author">
      <summary>Gets or sets the author of the check-in.</summary>
      <returns>The author of the check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters.NoAutoResolve">
      <summary>Prevents the client from trying to auto resolve conflicts generated by the checkin.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters.OverrideGatedCheckIn">
      <summary>Gets or sets a flag describing whether to override a gated check-in.</summary>
      <returns>True to override gated check-in; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters.QueueBuildForGatedCheckIn">
      <summary>Gets or sets a flag describing whether to queue the build for a gated check-in.</summary>
      <returns>True to queue build for gated check-in; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters.SuppressEvent">
      <summary>Gets or sets a flag describing whether to suppress events.</summary>
      <returns>True to suppress server-side events geneerated by this check-in; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters.ValidateAuthor">
      <summary>Gets or sets a flag describing whether to validate the author property.</summary>
      <returns>True to validate the author property; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinWorkItemAction">
      <summary>Check-in action on the work item.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinWorkItemAction.Associate">
      <summary>Associate with other work items.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinWorkItemAction.None">
      <summary>No action.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.CheckinWorkItemAction.Resolve">
      <summary>Resolve conflicts.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckoutLockRequiredException">
      <summary>Describes a CheckoutLockRequiredException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckoutLockRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckoutLockRequiredException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CheckoutLockRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckoutLockRequiredException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CheckoutLockRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CheckoutLocksDisabledException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckoutLocksDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckoutLocksDisabledException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CheckoutLocksDisabledException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CommitCheckinEventArgs">
      <summary>Argument for the commit check-in event.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitCheckinEventArgs.Changes">
      <summary>Gets a list of pending changes associated with this commit.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitCheckinEventArgs.ChangesetId">
      <summary>Gets the Changeset ID number associated with this commit.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitCheckinEventArgs.CreationDate">
      <summary>Gets the creation date of this commit.</summary>
      <returns>Returns <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitCheckinEventArgs.OperationId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitCheckinEventArgs.UndoneChanges">
      <summary>Gets the set of undone pending changes in this commit.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitCheckinEventArgs.Workspace">
      <summary>Gets the Workspace associated with this commit.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CommitCheckinEventHandler">
      <summary>Handler for committed check-ins</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CommitShelvesetEventArgs">
      <summary>Argument for commit shelveset event.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitShelvesetEventArgs.Changes">
      <summary>Gets the array of pending changes associated with this commit.</summary>
      <returns>The array of pending changes associated with this commit.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitShelvesetEventArgs.Shelveset">
      <summary>Gets the shelveset associated with this commit.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommitShelvesetEventArgs.Workspace">
      <summary>Gets the workspace associated with this commit.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CommitShelvesetEventHandler">
      <summary>Handler for committing shelvesets.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs">
      <summary>Arguments for a committed branch created event.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.ChangesetId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.CheckinNote"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.Comment"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.Mappings"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.Owner"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.PolicyOverride"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.SourcePath"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.TargetPath"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventArgs.VersionSpec"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CommittedBranchCreatedEventHandler">
      <summary>Handler for a committed branch created event.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Conflict">
      <summary>Represents a single conflict between two items.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.AutoResolved">
      <summary>True if this conflict was resolved automatically</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseChangeType">
      <summary>Gets or sets the change type of the base file.</summary>
      <returns>The change type of the base file.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseDeletionId">
      <summary>Gets or sets the base deletion ID.</summary>
      <returns>The base deletion ID.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseEncoding">
      <summary>Gets or sets the base item encoding.</summary>
      <returns>The base item encoding.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseHashValue">
      <summary>Gets or sets the base item hash value.</summary>
      <returns>The base item hash value.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseItemId">
      <summary>Gets or sets the base item ID.</summary>
      <returns>The base item ID.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseItemType">
      <summary>Gets or sets the base item type.</summary>
      <returns>The base item type.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseProperties">
      <summary>Properties for BaseServerItem. Not populated until DownloadProperties() or GetPropertiesMergeSummary is called.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BasePropertyId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseServerItem">
      <summary>Gets or sets the base server item.</summary>
      <returns>The base server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.BaseVersion">
      <summary>Gets or sets the base item version.</summary>
      <returns>The base item version.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.CanMergeContent">
      <summary>Gets a flag that describes whether this conflict would need a content merge.</summary>
      <returns>True if the conflict would need a content merge; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.ConflictId">
      <summary>Gets or sets the conflict ID.</summary>
      <returns>The conflict ID.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.ContentMergeSummary">
      <summary>Gets or sets the summary about the content merge.</summary>
      <returns>The summary about the content merge.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.DownloadBaseFile(System.String)">
      <summary>Downloads the base file for this conflict.</summary>
      <param name="localFileName">The local path of where to save the base file.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.DownloadProperties(Microsoft.TeamFoundation.VersionControl.Client.Workspace)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.DownloadTheirFile(System.String)">
      <summary>Downloads the content for their file in the conflict. Throws an exception if no incoming file is available.</summary>
      <param name="localFileName">The local path of where to save their file.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.DownloadYourFile(System.String)">
      <summary>Downloads the content for your file in the conflict. Throws an exception if no your file is available.</summary>
      <param name="localFileName">The local path of where to save your file.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.FileExtension">
      <summary>Get this conflict's file name extension only.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.FileName">
      <summary>Returns the calculated file name for this conflict.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.GetBriefMessage">
      <summary>Gets a brief message that states this conflict. For a verbose message, use GetFullMessage().</summary>
      <returns>A brief message that states this conflict.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.GetDetailedMessage(System.Boolean)">
      <summary>Converts this conflict into a displayable message.</summary>
      <returns>the displayable message for this conflict</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.GetFullMessage">
      <summary>Gets a verbose message that states this conflict. For a brief message, use GetBriefMessage().</summary>
      <returns>A verbose message that states this conflict.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.IsBaseless">
      <summary>Gets a flag that describes whether this conflict is the result of a baseless merge.</summary>
      <returns>True if this conflict is the result of a baseless merge; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.IsBinary">
      <summary>True if either base, their or your encoding is binary.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.IsEncodingMismatched">
      <summary>True if their and your encoding values are different.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.IsForced">
      <summary>Gets or sets a flag that describes whether the conflict is forced.</summary>
      <returns>True if the conflict is force; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.IsNamespaceConflict">
      <summary>Gets or sets a flag that describes whether the namespace is in conflict.</summary>
      <returns>True if the namespace is in conflict; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.IsResolved">
      <summary>Gets or sets a flag that describes whether the conflict is resolved.</summary>
      <returns>True if the conflict is resolved; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.IsRollbackConflict">
      <summary>Gets a flag that describes whether this conflict was caused by a rollback operation.</summary>
      <returns>True if this conflict was caused by a rollback operation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.IsShelvesetConflict"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.LocalPath">
      <summary>Get this conflict's local path or intended local path.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.MergedFileName">
      <summary>Gets or sets the path of the merged file.</summary>
      <returns>The path of the merged file. For an edit conflict type, the value is the path of the temporary merged file.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.MergeProperties(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Generates the properties merge summary. Returns null if there is no property conflict.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.Options">
      <summary>Gets the options that are returned from the server that describe how the client should process this conflict.</summary>
      <returns>The options that are returned from the server that describe how the client should process this conflict.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.PendingChangeId">
      <summary>Gets or sets the pending change ID.</summary>
      <returns>The pending change ID.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.PropertiesMergeSummary">
      <summary>Returns the property merge summary if one has been generated.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.Reason">
      <summary>Gets or sets the reason for the conflict.</summary>
      <returns>The reason for the conflict.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.RequiresExplicitAcceptMerge">
      <summary>Returns true if the AcceptMerge resolution is not conservative and may produce unexpected results. Examples are undeleting a file (edit-delete conflict) or deleting it (delete-edit conflicts).</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.Resolution">
      <summary>Gets or sets the resolution of the conflict.</summary>
      <returns>The resolution of the conflict.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.ResolutionOptions">
      <summary>Gets or sets the options to control how the conflict is resolved.</summary>
      <returns>The options to control how the conflict is resolved.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.ServerPath">
      <summary>Get this conflict's server path.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.SourceLocalItem">
      <summary>Gets or sets the source local item.</summary>
      <returns>The source local item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.Status">
      <summary>Gets the status of the conflict.</summary>
      <returns>Gets the status of the conflict.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TargetLocalItem">
      <summary>Gets or sets the target local item.</summary>
      <returns>The target local item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirChangeType">
      <summary>Gets the change type of their file.</summary>
      <returns>The change type of their file.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirDeletionId">
      <summary>Gets or sets their item deletion ID.</summary>
      <returns>Their item deletion ID.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirEncoding">
      <summary>Gets or sets their item encoding.</summary>
      <returns>Their item encoding.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirFileExists">
      <summary>Returns true if the their side of the conflict has a file associated with it.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirHashValue">
      <summary>Gets or sets their item hash value.</summary>
      <returns>Their item hash value.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirItemId">
      <summary>Gets or sets their item ID.</summary>
      <returns>The ID of their item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirItemType">
      <summary>Gets or sets their item type.</summary>
      <returns>Their item type.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirLastMergedVersion">
      <summary>Gets or sets their last merged version.</summary>
      <returns>Their last merged version.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirProperties">
      <summary>Properties for TheirServerItem. Not populated until DownloadProperties() or GetPropertiesMergeSummary is called.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirPropertyId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirServerItem">
      <summary>Gets or sets their server item.</summary>
      <returns>Their server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirShelvesetName"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirShelvesetOwnerName"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirVersion">
      <summary>Gets or sets the ID of their item version.</summary>
      <returns>The ID of their item version.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.TheirVersionFrom">
      <summary>Gets or sets their version from.</summary>
      <returns>Their version from.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Conflict.ToString">
      <summary>Creates a user-readable string that summarizes the properties of this Conflict object.</summary>
      <returns>A user-readable string that summarizes the properties of this Conflict object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.Type">
      <summary>Gets or sets the conflict type.</summary>
      <returns>The conflict type.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.VersionControlServer">
      <summary>Gets the repository that contains this conflict.</summary>
      <returns>The repository that contains this conflict.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourChangeType">
      <summary>Gets or sets the change type of your file.</summary>
      <returns>The change type of your file.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourDeletionId">
      <summary>Gets or sets your deletion ID.</summary>
      <returns>Your deletion ID.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourEncoding">
      <summary>Gets or sets your server item encoding.</summary>
      <returns>The encoding of your server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourItemId">
      <summary>Gets or sets the ID of your item.</summary>
      <returns>The ID of your item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourItemType">
      <summary>Gets or sets your item type.</summary>
      <returns>The type of your item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourLastMergedVersion">
      <summary>Gets or sets your last merged version.</summary>
      <returns>Your last merged version.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourLocalChangeType">
      <summary>Gets or sets the change type of your local file.</summary>
      <returns>The change type of your local file.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourProperties">
      <summary>Properties for YourServerItem. Not populated until DownloadProperties() or GetPropertiesMergeSummary is called.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourPropertyId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourServerItem">
      <summary>Gets or sets your server item.</summary>
      <returns>Your server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourServerItemSource">
      <summary>Gets or sets the source of the server item.</summary>
      <returns>The source of the server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Conflict.YourVersion">
      <summary>Gets or sets the version of your item.</summary>
      <returns>The version of your item.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ConflictEventArgs">
      <summary>Event arguments describing actions on a conflict.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ConflictEventArgs.Message">
      <summary>The conflict message.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ConflictEventArgs.Resolvable">
      <summary>Gets a flag describing whether this conflict is resolvable.</summary>
      <returns>True if this conflict is resolvable. False otherwise.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ConflictEventArgs.ServerItem">
      <summary>The server item being operated on.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ConflictEventArgs.Workspace">
      <summary>The workspace containing the conflict.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ConflictEventHandler">
      <summary>Handler for all conflict events.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ConflictType">
      <summary>Describes the conflict type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ConflictType.Checkin">
      <summary>Conflict because of a check-in operation.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ConflictType.Get">
      <summary>Conflict because of a Get operation.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ConflictType.Local">
      <summary>Local conflict.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ConflictType.Merge">
      <summary>Merge conflict.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ConflictType.None">
      <summary>No conflict.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ConflictType.Unknown">
      <summary>Returned on a pending change, when we did not lookup this information In case of server workspaces, destroy, and so on</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ContentNotUploadedException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ContentNotUploadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ContentNotUploadedException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ContentNotUploadedException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ContentRequiredException">
      <summary>Describes a ContentRequiredException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ContentRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ContentRequiredException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ContentRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ContentRequiredException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ContentRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CorruptBaselineException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CorruptBaselineException.#ctor(System.String,System.Exception)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CorruptBaselineException.#ctor(System.String,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CorruptBaselineException.TargetLocalItem">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CouldNotAddProxyException">
      <summary>Describes a CouldNotAddProxyException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CouldNotAddProxyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CouldNotAddProxyException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CouldNotAddProxyException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CouldNotAddProxyException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CouldNotAddProxyException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CouldNotDeleteProxyException">
      <summary>Describes a CouldNotDeleteProxyException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CouldNotDeleteProxyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CouldNotDeleteProxyException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CouldNotDeleteProxyException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CouldNotDeleteProxyException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CouldNotDeleteProxyException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CreateBranchObjectException">
      <summary>Describes a CreateBranchObjectException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CreateBranchObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CreateBranchObjectException.#ctor(System.String)">
      <summary>Encapsulates a message string into a CreateBranchObjectException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CreateBranchObjectException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a CreateBranchObjectException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters">
      <summary>A CreateWorkspaceParameters object encapsulates all the information that is required to call VersionControlServer.CreateWorkspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.#ctor(System.String)">
      <summary>Create a new CreateWorkspaceParameters instance to supply data to VersionControlServer.CreateWorkspace.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.Comment">
      <summary>A descriptive comment to be associated with the workspace to be created. The default value for this parameter is the empty string (String.Empty).</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.Computer">
      <summary>The computer on which the workspace to be created will reside. The default value for this parameter is Workstation.Current.Name.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.Folders">
      <summary>The initial working folders (mappings) for the workspace to be created. The default value for this parameter is an empty array.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.Location">
      <summary>Set this value to WorkspaceLocation.Local to indicate the workspace to be created should be a local workspace. Set this value to WorkspaceLocation.Server to indicate the workspace to be created should be a server-side or "traditional" workspace, which is the only kind of workspace backward compatible with TFS 2005-2010 clients. The default value if not provided is determined from the server.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Common.WorkspaceLocation" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.OwnerDisplayName">
      <summary>The owner display name of the workspace to be created. The default value for this parameter is RepositoryConstants.AuthenticatedUser (or "."), which indicates that the server should create the workspace on behalf of the calling user. If you are not sure who this resolves to, the value of the AuthorizedUser property of the VersionControlServer object gives the full display name form of the calling user.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.OwnerName">
      <summary>The owner name of the workspace to be created. The default value for this parameter is RepositoryConstants.AuthenticatedUser (or "."), which indicates that the server should create the workspace on behalf of the calling user. If you are not sure who this resolves to, the value of the AuthorizedUser property of the VersionControlServer object gives the full display name form of the calling user.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.PermissionProfile">
      <summary>The workspace permission profile for the workspace to be created. A workspace permission profile is a template for the workspace's access control list. By default, the value for this parameter is WorkspacePermissionProfile.BuiltInProfiles[(int)WorkspacePermissionProfile.BuiltInIndexes.Private], which only grants permission to the owner of the workspace (a 'private' workspace).</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.RemoveUnparentedCloaks">
      <summary>If true, any cloaks in the initial working folders (this.Folders) which are not parented by a mapping are removed silently. The default value is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.WorkspaceName">
      <summary>The name of the workspace to be created.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters.WorkspaceOptions">
      <summary>Options for the workspace.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Common.WorkspaceOptions" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec">
      <summary>Specifies a version based on a date/time stamp.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.#ctor(System.DateTime)">
      <summary>Initializes a new DateVersionSpec instance.</summary>
      <param name="date">DateTime object to encapsulate.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.#ctor(System.DateTime,System.String)">
      <summary>Initializes a new DateVersionSpec instance.</summary>
      <param name="date">DateTime object to encapsulate.</param>
      <param name="originalText">Original text input by the user.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.Date">
      <summary>Gets or sets the date.</summary>
      <returns>The date.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.Equals(System.Object)">
      <summary>Determines whether this DateVersionSpec instance is equal to the specified instance.</summary>
      <returns>True if the two instances are equivalent; otherwise, false.</returns>
      <param name="obj">The other instance to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.GetHashCode">
      <summary>Generates a hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.Identifier">
      <summary>Identifier for this version spec in command-line usage.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.OriginalText">
      <summary>Gets or sets the original text.</summary>
      <returns>The original text.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpec.ToString">
      <summary>Creates a user-readable string that describes the properties of a DateVersionSpec object.</summary>
      <returns>A user-readable string that describes the properties of a DateVersionSpec object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpecBeforeBeginningOfRepositoryException">
      <summary>Describes a DateVersionSpecBeforeBeginningOfRepositoryException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpecBeforeBeginningOfRepositoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpecBeforeBeginningOfRepositoryException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DateVersionSpecBeforeBeginningOfRepositoryException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DateVersionSpecBeforeBeginningOfRepositoryException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DateVersionSpecBeforeBeginningOfRepositoryException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult">
      <summary>The default tool results which is basically an empty implementation of the tool result for assembly tools</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.#ctor">
      <summary>Constructor</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.Cancel"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.ExitCode">
      <summary>Exit code</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.ExitMessage">
      <summary>The exit message is empty by default</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.HasExited">
      <summary>Has existed always true</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.Id">
      <summary>Id</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.Name">
      <summary>Name</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.PromptUserForMergeConfirmation">
      <summary>Should prompt for user confirmation</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DefaultToolExecutionResult.WaitForOperationEnd">
      <summary>Does nothing</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DeletedShelvesetEventArgs">
      <summary>Argument for DeletedShelveset event.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DeletedShelvesetEventArgs.Name">
      <summary>Gets the name of the shelveset.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DeletedShelvesetEventArgs.OwnerName">
      <summary>Gets the name of the shelveset owner.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DeletedShelvesetEventHandler">
      <summary>Handler for deleting shelvesets.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DeletedState">
      <summary>Describes the deleted state of an item.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.DeletedState.Any">
      <summary>Item is either deleted or not deleted.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.DeletedState.Deleted">
      <summary>Item is deleted.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.DeletedState.NonDeleted">
      <summary>Item is not deleted.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DeltaException">
      <summary>Describes a DeltaException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DeltaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DeltaException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DeltaException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DeltaException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DeltaException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DepthOneMappingsNotSupportedException">
      <summary>Exception to indicate that the server does not support mappings with 1 level of depth.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DepthOneMappingsNotSupportedException.#ctor">
      <summary>Initializes a new DepthOneMappingsNotSupportedException instance.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DestroyedContentUnavailableException">
      <summary>Describes a DestroyedContentUnavailableException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DestroyedContentUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DestroyedContentUnavailableException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DestroyedContentUnavailableException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DestroyedContentUnavailableException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DestroyedContentUnavailableException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DestroyedEventHandler">
      <summary>Handler for destroying items.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DestroyEventArgs">
      <summary>Event arguments for destroyed items.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DestroyEventArgs.DestroyFlags">
      <summary>Gets the set of options that was passed up to the server Destroy method.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Common.DestroyFlags" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DestroyEventArgs.Item">
      <summary>Gets a destroyed item that was destroyed by using .DestroyFlags.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DestroyEventArgs.StopAtSpec">
      <summary>Gets the version spec that was used when DestroyFlags.KeepHistory is set to limit the number of versions of files to have their content destroyed.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Difference">
      <summary>Contains methods for performing difference (diff) operations on two files.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.CreateTargetDiffItem(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,Microsoft.TeamFoundation.VersionControl.Client.PendingChange,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Creates a diff item for the specified file by using a pending change object at the specified target version.</summary>
      <returns>An IDiffItem for the specified pending change.</returns>
      <param name="versionControl">The version control server.</param>
      <param name="change">The pending change describing the item.</param>
      <param name="targetVersion">The version of the file to create the IDiffItem for.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.CreateTargetDiffItem(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Creates a diff item for the specified item.</summary>
      <returns>An IDiffItem for the specified item.</returns>
      <param name="versionControl">The version control server.</param>
      <param name="itemId">The ID of the item for which to create a diff item.</param>
      <param name="path">The local or server path of the item.</param>
      <param name="itemVersion">The version of the item that is specified by <paramref name="path" />.</param>
      <param name="deletionId">The deletion ID for the item, or 0 if the item was not previously deleted.</param>
      <param name="targetVersion">The version of the file to create the IDiffItem for.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.CreateTargetDiffItem(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Creates a diff item for the specified item.</summary>
      <returns>A IDiffItem for the specified item.</returns>
      <param name="versionControl">The version control server.</param>
      <param name="path">The local or server path of the item.</param>
      <param name="itemVersion">The version of the item that is specified by <paramref name="path" />.</param>
      <param name="deletionId">The deletion ID for the item, or 0 if the item was not previously deleted.</param>
      <param name="targetVersion">The version of the file to create the IDiffItem for.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.DiffFiles(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,Microsoft.TeamFoundation.VersionControl.Client.IDiffItem,Microsoft.TeamFoundation.VersionControl.Client.IDiffItem,Microsoft.TeamFoundation.VersionControl.Common.DiffOptions,System.String,System.Boolean)">
      <summary>Compares two files by using the internal diff engine.</summary>
      <param name="versionControl">The version control server.</param>
      <param name="source">The local path of the source file.</param>
      <param name="target">The local path of the destination file.</param>
      <param name="diffOpts">Options for the difference operation.</param>
      <param name="fileNameForHeader">True to use the file name as the header; otherwise, false.</param>
      <param name="wait">True to wait; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.DiffFiles(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,Microsoft.TeamFoundation.VersionControl.Client.IDiffItem,Microsoft.TeamFoundation.VersionControl.Client.IDiffItem,Microsoft.TeamFoundation.VersionControl.Common.DiffOptions,System.String,System.Boolean,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.DiffFiles(System.String,System.Int32,System.String,System.Int32,Microsoft.TeamFoundation.VersionControl.Common.DiffOptions)">
      <summary>Compares two files by using the internal diff engine, and returns the linked list of DiffSegments.</summary>
      <returns>The linked list of DiffSegments.</returns>
      <param name="source">The local path of the source file.</param>
      <param name="sourceCodePage">The source file encoding page.</param>
      <param name="target">The local path of the destination file.</param>
      <param name="targetCodePage">The destination file encoding page.</param>
      <param name="diffOpts">Options for the difference operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.IsEncodingSupported(System.Int32)">
      <summary>Checks whether the specified encoding is supported by the diff/merge engine.</summary>
      <returns>True if the specified code page is supported by the diff/merge engine; otherwise, false.</returns>
      <param name="codePage">The code page for the encoding to check.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.IsEncodingSupported(System.Text.Encoding)">
      <summary>Checks whether the specified encoding is supported by the diff/merge engine.</summary>
      <returns>True if the specified encoding is supported by the diff/merge engine; otherwise, false.</returns>
      <param name="encoding">The encoding to check.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.VisualDiffFiles(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Compares the specified files.</summary>
      <param name="versionControl">The version control server that contains the specified files.</param>
      <param name="sourceFile">The source file to compare to the target.</param>
      <param name="sourceVersion">The source file version.</param>
      <param name="targetFile">The destination file.</param>
      <param name="targetVersion">The destination file version.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.VisualDiffFiles(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>Provides an entry point to diff two files without having to pass in a version control server object</summary>
      <param name="sourceFile">Source file</param>
      <param name="targetFile">Target file</param>
      <param name="sourceFileTag">Source file tag</param>
      <param name="targetFileTag">Target file tag</param>
      <param name="sourceFileLabel">Source file label</param>
      <param name="targetFileLabel">Target file label</param>
      <param name="isSourceReadOnly">Whether the source is read-only</param>
      <param name="isTargetReadOnly">Whether the target is read-only</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.VisualDiffItems(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,Microsoft.TeamFoundation.VersionControl.Client.IDiffItem,Microsoft.TeamFoundation.VersionControl.Client.IDiffItem)">
      <summary>Compares the specified files for differences.</summary>
      <param name="versionControl">The version control server.</param>
      <param name="source">The source item to compare to the target.</param>
      <param name="target">The target item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.VisualDiffItems(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,Microsoft.TeamFoundation.VersionControl.Client.IDiffItem,Microsoft.TeamFoundation.VersionControl.Client.IDiffItem,System.Boolean)">
      <summary>Compare two DiffItems using an external diff tool.</summary>
      <param name="versionControl">The version control server</param>
      <param name="source">The source item to compare to the target</param>
      <param name="target">The target item</param>
      <param name="modalExperience">Whether the diff should come up in a modal experience</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Difference.VisualDiffShelvedChange(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,Microsoft.TeamFoundation.VersionControl.Client.PendingChange)">
      <summary>Compares the specified shelved changes for differences.</summary>
      <param name="versionControl">The version control server.</param>
      <param name="shelvesetName">The name of the shelveset that contains the pending change.</param>
      <param name="shelvedChange">The pending change.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalFile">
      <summary>Represents a local file that was prepared for difference operations.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalFile.#ctor(System.String,System.Int32,System.DateTime,System.Boolean)">
      <summary>Initializes a new DiffItemLocalFile instance.</summary>
      <param name="fileName">The path of the local file for which to create a diff item.</param>
      <param name="encoding">The encoding to apply to the diff item.</param>
      <param name="lastModifiedDate">The date and time of the last saved changes.</param>
      <param name="isTemporary">True if the local file is a temporary file; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#GetEncoding">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#GetFile">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#IsTemporary">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#Label">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#LabelFile"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#LabelTag"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace">
      <summary>IDiffItem class for comparing files in local workspaces against their original (workspace version) content.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace.Create(Microsoft.TeamFoundation.VersionControl.Client.Workspace,System.String)">
      <summary>Creates DiffItemLocalWorkspace object for a given file in a specified local workspace. Returns null if workspace is not local or file does not have baseline content stored.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace.GetEncoding">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace.GetFile">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace.IsTemporary">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace.Label">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace.LabelFile">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemLocalWorkspace.LabelTag">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DiffItemPendingChangeBase">
      <summary>Represents the original content of the file that contains a pending change.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemPendingChangeBase.#ctor(Microsoft.TeamFoundation.VersionControl.Client.PendingChange)">
      <summary>Initializes a new DiffItemPendingChangeBase instance.</summary>
      <param name="pendingChange">The pending change for which to create a diff item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemPendingChangeBase.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#GetEncoding">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemPendingChangeBase.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#GetFile">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemPendingChangeBase.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#IsTemporary">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemPendingChangeBase.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#Label">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemPendingChangeBase.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#LabelFile"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemPendingChangeBase.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#LabelTag"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DiffItemShelvedChange">
      <summary>Represents a shelved change that was prepared for difference operations.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemShelvedChange.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.PendingChange)">
      <summary>Initializes a new DiffItemShelvedChange instance.</summary>
      <param name="shelvesetName">The name of the shelveset that contains the specified pending change.</param>
      <param name="pendingChange">The pending change for which to create a diff item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemShelvedChange.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#GetEncoding">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemShelvedChange.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#GetFile">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemShelvedChange.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#IsTemporary">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemShelvedChange.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#Label">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemShelvedChange.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#LabelFile"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemShelvedChange.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#LabelTag"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile">
      <summary>Represents a versioned file that was prepared for difference operations.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Item,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Initializes a new DiffItemVersionedFile instance.</summary>
      <param name="item">The item for which to create a diff item.</param>
      <param name="version">The version spec of the specified item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.Int32,System.Int32,System.String)">
      <summary>Initializes a new DiffItemVersionedFile instance.</summary>
      <param name="versionControl">The version control server that contains the item.</param>
      <param name="itemId">The ID of the item for which to create a diff item.</param>
      <param name="changeset">The changeset version of the item.</param>
      <param name="displayPath">The path to use when constructing an exception in the event of the item not existing on the server.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Initializes a new DiffItemVersionedFile instance.</summary>
      <param name="versionControl">The version control server that contains the item.</param>
      <param name="path">The path of the file for which to create a diff item.</param>
      <param name="version">The version spec of the specified item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#GetEncoding">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#GetFile">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#IsTemporary">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#Label">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#LabelFile"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.DiffItemVersionedFile.Microsoft#TeamFoundation#VersionControl#Client#IDiffItem#LabelTag"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DuplicateChangeException">
      <summary>Describes a DuplicateChangeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateChangeException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DuplicateChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateChangeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DuplicateChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DuplicateCheckinNoteFieldException">
      <summary>Describes a DuplicateCheckinNoteFieldException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateCheckinNoteFieldException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateCheckinNoteFieldException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DuplicateCheckinNoteFieldException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateCheckinNoteFieldException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DuplicateCheckinNoteFieldException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DuplicateExtensionException">
      <summary>Describes a DuplicateExtensionException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateExtensionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateExtensionException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DuplicateExtensionException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateExtensionException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DuplicateExtensionException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DuplicateFileTypeException">
      <summary>Describes a DuplicateFileTypeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateFileTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateFileTypeException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DuplicateFileTypeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateFileTypeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DuplicateFileTypeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DuplicateItemFoundException">
      <summary>Describes a DuplicateItemFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateItemFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateItemFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DuplicateItemFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateItemFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DuplicateItemFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DuplicateItemsInCheckInRequestException">
      <summary>Describes a DuplicateItemsInCheckInRequestException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateItemsInCheckInRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateItemsInCheckInRequestException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DuplicateItemsInCheckInRequestException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateItemsInCheckInRequestException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DuplicateItemsInCheckInRequestException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DuplicateServerItemException">
      <summary>Describes a DuplicateServerItemException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateServerItemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateServerItemException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DuplicateServerItemException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateServerItemException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DuplicateServerItemException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.DuplicateWorkingFolderException">
      <summary>Describes a DuplicateWorkingFolderException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateWorkingFolderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateWorkingFolderException.#ctor(System.String)">
      <summary>Encapsulates a message string into a DuplicateWorkingFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.DuplicateWorkingFolderException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a DuplicateWorkingFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.EmptyCheckInException">
      <summary>Describes an EmptyCheckInException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.EmptyCheckInException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.EmptyCheckInException.#ctor(System.String)">
      <summary>Encapsulates a message string into an EmptyCheckInException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.EmptyCheckInException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an EmptyCheckInException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.EncodingDescription">
      <summary>Represents an encoding description.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.EncodingDescription.#ctor(System.Int32,System.String,System.String)">
      <summary>Initializes a new EncodingDescription instance.</summary>
      <param name="encoding">The code page that is represented by this description.</param>
      <param name="displayName">The name of the encoding.</param>
      <param name="description">A description of the encoding.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.EncodingDescription.Description">
      <summary>Gets the description of this encoding description.</summary>
      <returns>The description of this encoding description.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.EncodingDescription.DisplayName">
      <summary>Gets the name of this encoding description.</summary>
      <returns>The name of this encoding description.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.EncodingDescription.Encoding">
      <summary>Gets the code page that is associated with this encoding description.</summary>
      <returns>THe code page that is associated with this encoding description.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.EncodingDescription.Equals(System.Object)">
      <summary>Checks whether this encoding description is equal to the specified object.</summary>
      <returns>True if the two objects are equal; otherwise, false.</returns>
      <param name="obj">The object to which to compare this instance.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.EncodingDescription.GetHashCode">
      <summary>Gets the hash code of this object.</summary>
      <returns>The hash code of this object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ExceptionEventArgs">
      <summary>Event arguments that describe actions on a nonfatal exception.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExceptionEventArgs.Exception">
      <summary>The exception that is being operated on.</summary>
      <returns>Returns <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExceptionEventArgs.Failure">
      <summary>If this event is caused by a failure that is reported by the server, it is available from this property.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Failure" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExceptionEventArgs.OperationId">
      <summary>A unique identifier for the operation, throughout the process.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExceptionEventArgs.Workspace">
      <summary>The workspace that is associated with the error.</summary>
      <returns>The workspace that is associated with the error. Null if no workspace is available, or the workspace is unknown.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ExceptionEventHandler">
      <summary>Handler for all Exception events.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ExistingParentFileException">
      <summary>Describes an ExistingParentFileException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ExistingParentFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ExistingParentFileException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ExistingParentFileException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ExistingParentFileException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ExistingParentFileException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem">
      <summary>Describes an extended item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.ChangeType">
      <summary>Gets the changetype of this item.</summary>
      <returns>The changetype of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.CheckinDate">
      <summary>Gets or sets the check-in date of this item.</summary>
      <returns>The check-in date of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.DeletionId">
      <summary>Gets the deletion ID of this item.</summary>
      <returns>The deletion ID of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.Encoding">
      <summary>Gets the encoding of this item.</summary>
      <returns>The encoding of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.HasOtherPendingChange">
      <summary>Gets a flag that describes whether this item has another pending change.</summary>
      <returns>True if the item has another pending change; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.IsBranch">
      <summary>Gets a flag that describes whether this item is a branch.</summary>
      <returns>True if this item is a branch; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.IsInWorkspace">
      <summary>Gets a flag that describes whether this file exists locally.</summary>
      <returns>True if this file exists locally; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.IsLatest">
      <summary>Gets a flag that describes whether this file is the latest.</summary>
      <returns>True if this file is the latest; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.ItemId">
      <summary>Gets the ID of this item.</summary>
      <returns>The ID of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.ItemType">
      <summary>Gets the type of this item.</summary>
      <returns>The type of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.LocalItem">
      <summary>Gets the path to the local item that is associated with this instance.</summary>
      <returns>The path to the local item that is associated with this instance.  Null if the client does not have the item or the item is pending delete.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.LockOwner">
      <summary>Gets the lock owner of this item.</summary>
      <returns>The lock owner of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.LockOwnerDisplayName">
      <summary>Display name of the user who holds the lock on this item (if any).</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.LockStatus">
      <summary>Gets the lock status of this item.</summary>
      <returns>The lock status of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.PropertyValues"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.SourceServerItem">
      <summary>Gets the path to the source server item.</summary>
      <returns>The path to the source server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.TargetServerItem">
      <summary>Gets the path to the target server item.</summary>
      <returns>The path to the target server item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.ToString">
      <summary>Creates a user-readable string that summarizes the properties of this Extended Item class.</summary>
      <returns>A user-readable string that summarizes the properties of this Extended Item class.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.VersionLatest">
      <summary>Gets the latest version of this item.</summary>
      <returns>The latest version of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem.VersionLocal">
      <summary>Gets the local version of this item.</summary>
      <returns>The local version of this item.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge">
      <summary>Represents extended information about a merge.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge.SourceChangeset">
      <summary>Gets the source changeset.</summary>
      <returns>The source changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge.SourceItem">
      <summary>Gets the source item of this merge.</summary>
      <returns>The source item of this merge.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge.TargetChangeset">
      <summary>Gets the target changeset.</summary>
      <returns>The target changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge.TargetItem">
      <summary>Gets the target item of this merge.</summary>
      <returns>The target item of this merge.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge.ToString">
      <summary>Creates a user-readable string that describes the properties of this ExtendedMerge object.</summary>
      <returns>A user-readable string that describes the properties of this ExtendedMerge object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge.VersionedItemCount">
      <summary>Gets the number of versioned items in this merge.</summary>
      <returns>The number of versioned items in this merge.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Failure">
      <summary>Describes a failure.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.Code">
      <summary>Gets the failure code.</summary>
      <returns>The failure code.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.ComputerName">
      <summary>Gets the name of the computer that is associated with the failure.</summary>
      <returns>The name of the computer that is associated with the failure.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Failure.GetFormattedMessage">
      <summary>Gets a user-readable message that describes this failure.</summary>
      <returns>A user-readable message that describes this failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.IdentityName">
      <summary>Gets the identity that is associated with the failure.</summary>
      <returns>The identity that is associated with the failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.ItemId">
      <summary>Gets the item ID that is associated with the failure.</summary>
      <returns>The item ID that is associated with the failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.LocalItem">
      <summary>Gets the local item that is associated with the failure.</summary>
      <returns>The local item that is associated with the failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.Message">
      <summary>Gets the failure message.</summary>
      <returns>The failure message.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.RequestType">
      <summary>Gets the request type that caused this failure.</summary>
      <returns>The request type that caused this failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.ResourceName">
      <summary>Gets the resource name that is associated with the failure.</summary>
      <returns>The resource name that is associated with the failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.ServerItem">
      <summary>Gets the server item that is associated with the failure.</summary>
      <returns>The server item that is associated with the failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.Severity">
      <summary>Gets the severity of the failure.</summary>
      <returns>The severity of the failure.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Failure.ToString">
      <summary>Creates a user-readable string that describes the properties of a failure.</summary>
      <returns>A user-readable string that describes the properties of a failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.VersionControlServer">
      <summary>Gets the version control server on which the failure occurred.</summary>
      <returns>The version control server on which the failure occurred.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.Warnings">
      <summary>Gets an array of warnings that is associated with the failure.</summary>
      <returns>An array of warnings that is associated with the failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.WorkspaceName">
      <summary>Gets the workspace name that is associated with the failure.</summary>
      <returns>The workspace name that is associated with the failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Failure.WorkspaceOwner">
      <summary>Gets the workspace owner that is associated with the failure.</summary>
      <returns>The workspace owner that is associated with the failure.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.FeatureNotSupportedException">
      <summary>Exception that is thrown by the client when a feature is not supported by the server.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FeatureNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FeatureNotSupportedException.#ctor(System.String)">
      <summary>Initializes a new FeatureNotSupportedException instance.</summary>
      <param name="message">A message that describes this exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FeatureNotSupportedException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.FileIdNotFoundException">
      <summary>Describes a FileIdNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileIdNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileIdNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a FileIdNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileIdNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a FileIdNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.FileType">
      <summary>Represents the type of a file.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.#ctor(System.String,System.String[])">
      <summary>Initializes a new FileType instance.</summary>
      <param name="name">The unique name of the file type.</param>
      <param name="extensions">An array of valid extensions that excludes '.' characters.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.FileType.AllowMultipleCheckout">
      <summary>Gets a flag that describes whether the file type allows multiple check-outs.</summary>
      <returns>True if the file type allows multiple check-outs; otherwise, false.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.FileType.AutoFileType"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.FileType.BinaryFileType"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.FileType.BinaryFileTypeDisplayName"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.Clone">
      <summary>Creates an equivalent instance of a FileType object.</summary>
      <returns>A clone of the original instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.Detect(System.String,System.String)">
      <summary>Determines the encoding of the specified file.</summary>
      <returns>The encoding of the file that is determined by this method.</returns>
      <param name="path">The path of the local file for which the encoding is unknown.</param>
      <param name="fileEncoding">The encoding to try. Specify null for autodetection of encoding.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.Detect(System.String,System.String,System.Boolean)">
      <summary>Determines the encoding of the specified file.</summary>
      <returns>The encoding of the file that is determined by this method.</returns>
      <param name="path">The path of the local file for which the encoding is unknown.</param>
      <param name="fileEncoding">The encoding to try. Specify null for autodetection of encoding.</param>
      <param name="treatMissingFileAsBinary">True to treat a missing file as binary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.Detect(System.String,System.String,System.Boolean,Microsoft.TeamFoundation.VersionControl.Client.Failure[]@)">
      <summary>Determines the encoding of the specified file.</summary>
      <returns>The encoding for the file that is determined by this method.</returns>
      <param name="path">The path of the local file for which the encoding is unknown.</param>
      <param name="fileEncoding">The encoding to try. Specify null for autodetection of encoding.</param>
      <param name="treatMissingFileAsBinary">True to treat the missing file as binary.</param>
      <param name="failures">Returns an array of failures that resulted from the detection.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.FileType.Extensions">
      <summary>Gets or sets an array of the extensions that are described by this file type.</summary>
      <returns>An array of the extensions that are described by this file type.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.GetDescription(System.Text.Encoding)">
      <summary>Gets the description of the specified encoding.</summary>
      <returns>The description of the specified encoding.</returns>
      <param name="encoding">The encoding for which the description is desired.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.GetDisplayName(System.Text.Encoding)">
      <summary>Gets the display name of the specified encoding.</summary>
      <returns>The display name of the specified encoding.</returns>
      <param name="encoding">The encoding for which the display name is desired.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.GetEncodingCodePage(System.String)">
      <summary>Gets the code page that represents the specified encoding.</summary>
      <returns>The code page that represents the specified encoding.</returns>
      <param name="encoding">The encoding for which the code page is desired.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileTypeException"></exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.GetEncodingFromCodePage(System.Int32)">
      <summary>Gets the encoding that is associated with the specified code page.</summary>
      <returns>The encoding of the specified code page.</returns>
      <param name="codePage">The code page for which the encoding is desired.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileTypeException"></exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.GetEncodingName(System.Int32)">
      <summary>Gets the name of the encoding that is associated with the specified integer.</summary>
      <returns>The name of the encoding that is associated with the specified integer.</returns>
      <param name="encoding">The integer ID of the desired encoding.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.GetSupportedEncodingDescriptions">
      <summary>Gets an array of descriptions of the supported encodings, sorted by encoding name.</summary>
      <returns>An array of the supported encoding descriptions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.FileType.Name">
      <summary>Gets or sets the name of the file type.</summary>
      <returns>The name of the file type.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.FileType.TextFileType"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FileType.ToString">
      <summary>Creates a user-readable string that describes the properties of this FileType object.</summary>
      <returns>A user-readable string that describes the properties of this FileType object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.FolderContentChangedEventArgs">
      <summary>Event arguments describing a folder content changed event</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FolderContentChangedEventArgs.#ctor(System.Int32)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.FolderContentChangedEventArgs.ChangesetId">
      <summary>If available, the Id of the changeset in which the changes were committed. An Id value of -1 indicates that the changeset is not available like for items destroyed.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.FolderContentChangedEventHandler">
      <summary>Handler for folder content changed events</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.FolderContentException">
      <summary>Describes a FolderContentException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FolderContentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FolderContentException.#ctor(System.String)">
      <summary>Encapsulates a message string into a FolderContentException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FolderContentException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a FolderContentException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.FolderEditException">
      <summary>Describes a FolderEditException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FolderEditException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FolderEditException.#ctor(System.String)">
      <summary>Encapsulates a message string into a FolderEditException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FolderEditException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a FolderEditException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.FutureDateException">
      <summary>Describes a FutureDateException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FutureDateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FutureDateException.#ctor(System.String)">
      <summary>Encapsulates a message string into a FutureDateException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.FutureDateException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a FutureDateException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException">
      <summary>Exception to indicate that a check-in was denied because of the gated check-in plugin.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.AffectedBuildDefinitions">
      <summary>Gets a collection of build definitions that blocked the check-in attempt. This property is always valid.</summary>
      <returns>A collection of (Name, URI) pairs that define the build definitions that blocked the check-in attempt.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.BuildUri">
      <summary>Gets the uniform resource identifier (URI) of the build that is queued for check-in. This property is valid when the SubCode is 3.</summary>
      <returns>The URI of the build that is queued for check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.CheckInContainsLocks">
      <summary>Gets a flag that indicates whether the set of pending changes that is being checked in contains at least one pending change that has the Lock bit set. This property is not set for shelvesets.</summary>
      <returns>True if the check-in set contains at least one pending change that has the Lock bit set.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.CheckInTicket">
      <summary>Gets the check-in ticket that is provided by the server for submitting a CheckInShelveset build request.</summary>
      <returns>The check-in ticket that is provided by the server for submitting a CheckInShelveset build request.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.HasOverridePermission">
      <summary>Gets a flag that indicates whether the user that performed the check-in has the required permissions to override the gated check-in policy. This property is always valid.</summary>
      <returns>True if the user that performed the check-in has the required permissions to override the gated check-in policy; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.OverridePermissionFailures">
      <summary>Gets a read-only collection of team projects for which the caller is missing the 'Override check-in validation by build' permission. This property is valid when SubCode is 4.</summary>
      <returns>A read-only collection of team projects for which the caller is missing the 'Override check-in validation by build' permission.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.QueueId">
      <summary>Gets the queue ID for the build that is queued for check-in. This property is valid when the SubCode is 3.</summary>
      <returns>The queue ID for the build queued for check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.ShelvesetName">
      <summary>Gets the name of the shelveset. This property is valid when the SubCode is 1 or 3.</summary>
      <returns>The name of the shelveset. Null if a shelveset could not be created for any reason.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GatedCheckinException.SubCode">
      <summary>Gets the subcode for this exception.</summary>
      <returns>The subcode for this exception.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GenericException">
      <summary>Describes a GenericException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GenericException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GenericException.#ctor(System.String)">
      <summary>Encapsulates a message string into a GenericException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GenericException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a GenericException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GetFilterCallback">
      <summary>This delegate type provides the ability to filter the results of a get after the server request but before the results are processed locally. See the Workspace Get() method.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions">
      <summary>Options for the GetItems and GetItem calls.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions.None">
      <summary>Default behavior. Sorting is performed and no download information is generated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions.Download">
      <summary>If set, causes download information to be generated. Set this only if you plan to download the contents of the file after you call GetItems().</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions.Unsorted">
      <summary>Speeds GetItems() by not sorting the result items.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions.IncludeBranchInfo">
      <summary>Includes information about whether an item is a branch object in the system.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions.IncludeSourceRenames">
      <summary>Include items that are the source of a rename.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions.LocalOnly">
      <summary>Only available in local workspaces. Will cause the retrieval of items from the local table, without making a server call.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions.IncludeRecursiveDeletes">
      <summary>Instructs the server to return items which are affected by a Recursive Delete</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GetLatestOnCheckoutDisabledException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetLatestOnCheckoutDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetLatestOnCheckoutDisabledException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetLatestOnCheckoutDisabledException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GetOptions">
      <summary>Options for the Get operation.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.None">
      <summary>No options were specified.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Overwrite">
      <summary>Overwrite existing writable files if they conflict with the downloaded files.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.GetAll">
      <summary>Gets all files.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Preview">
      <summary>Executes a get without modifying the disk.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.Remap">
      <summary>Remaps existing items on the disk to the server items where the content and disk location are not changing.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.GetOptions.NoAutoResolve">
      <summary>Used only on the client. Instructs the client not to try to auto resolve conflicts</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GetRequest">
      <summary>Represents a request of the Get operation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetRequest.#ctor(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Gets the specified item or the entire workspace at the specified version.</summary>
      <param name="itemSpec">The items to get. Specify null to get the full workspace.</param>
      <param name="version">The item version to get.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetRequest.#ctor(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.Int32)">
      <summary>Gets the specified items or the entire workspace at the specified changeset.</summary>
      <param name="itemSpec">The items to get. Specify null to get the full workspace.</param>
      <param name="changeset">The changeset from which to get the specified items or workspace.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetRequest.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Gets the specified items at the specified version.</summary>
      <param name="item">The items to get (wildcard characters are allowed).</param>
      <param name="recursion">The recursion level.</param>
      <param name="version">The item version to get.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetRequest.FromStrings(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Creates an array of GetRequests from the specified array of local or server paths, recursion, and version.</summary>
      <returns>An array of GetRequests that consist of an array of local or server paths, recursion, and version information.</returns>
      <param name="paths">An array of local or server paths.</param>
      <param name="recursion">The recursion level.</param>
      <param name="version">The item version to request.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetRequest.ItemSpec">
      <summary>Gets or sets the item that is being requested.</summary>
      <returns>The item that is being requested.  Null to get the whole workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetRequest.ToString">
      <summary>Creates a user-readable string that describes the properties of this GetRequest object.</summary>
      <returns>A user-readable string that describes the properties of this GetRequest object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetRequest.VersionSpec">
      <summary>Gets or sets the version that is being requested.</summary>
      <returns>The version that is being requested.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GetStatus">
      <summary>Represents the status of a <see cref="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get" /> operation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.Combine(Microsoft.TeamFoundation.VersionControl.Client.GetStatus)">
      <summary>Combines another GetStatus instance with this instance.</summary>
      <param name="getStatus">The GetStatus instance to combine with this instance.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.GetFailures">
      <summary>Gets an array of failures that result from the Get operation.</summary>
      <returns>An array of failures that result from the Get operation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.HaveResolvableWarnings">
      <summary>Gets a flag that indicates whether at least one warning can be resolved.</summary>
      <returns>True if at least one warning can be resolved; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NoActionNeeded">
      <summary>Gets a flag that indicates whether no failures and no operations occurred.</summary>
      <returns>True if no failures and no operations occurred because of the Get operation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumConflicts">
      <summary>Gets the number of conflicts that the Get operation encountered.</summary>
      <returns>The number of conflicts that the Get operation encountered.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumFailures">
      <summary>Gets the number of failures that resulted from the Get operation.</summary>
      <returns>The number of failures that resulted from the Get operation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumOperations">
      <summary>Gets the number of Get operations that the server returned.</summary>
      <returns>The number of Get operations.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumResolvedConflicts">
      <summary>The number of conflicts resolved.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumUpdated">
      <summary>Gets the number of Get operations that updated the workspace.</summary>
      <returns>The number of Get operations that updated the workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GetStatus.NumWarnings">
      <summary>Gets the number of warnings that the Get operation encountered.</summary>
      <returns>The number of warnings that the Get operation encountered.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs">
      <summary>Event arguments for the Getting event.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Attributes"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.ChangeType">
      <summary>Gets the change type for this operation.</summary>
      <returns>The change type for this operation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.DeletionId">
      <summary>Gets the deletion ID of the target item in the Get action.</summary>
      <returns>The deletion ID of the target item in the Get action.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.DiskUpdateAttempted">
      <summary>Gets a flag that describes whether a disk update was tried (that is, this was not a preview operation).</summary>
      <returns>True if a disk update was tried; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.GetMessage(System.String,System.String@)">
      <summary>Gets a message that states this event.</summary>
      <returns>The message that is returned by a successful action, if any.</returns>
      <param name="targetName">The path of the target of the get.</param>
      <param name="error">The error message that is related to this event, if an error occurred.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.IsDelete">
      <summary>Gets a flag that describes whether the Get operation will perform a delete action.</summary>
      <returns>True if the Get operation will perform a delete action; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.IsLatest">
      <summary>Gets a flag that describes whether the target of the Get operation is the latest version of the file.</summary>
      <returns>True if the target is the latest version of the file; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.ItemId">
      <summary>Gets the item ID that is being operated on.</summary>
      <returns>The item ID that is being operated on.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.ItemType">
      <summary>Gets the item type that is being operated on.</summary>
      <returns>The item type that is being operated on.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.OperationId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Properties">
      <summary>Gets a read-only collection of property-value pairs of this instance.</summary>
      <returns>A read-only collection of property-value pairs of this instance.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.PropertyValues"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.ServerItem">
      <summary>Gets the server item that is being operated on.</summary>
      <returns>The server item that is being operated on.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.SourceLocalItem">
      <summary>Gets the source local path of the item.</summary>
      <returns>The source local path of the item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.SourceServerItem">
      <summary>The source server item being operated on.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Status">
      <summary>Gets the result of the Get operation.</summary>
      <returns>The result of the Get operation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.TargetLocalItem">
      <summary>The target local path of the item.</summary>
      <returns>The target local path of the item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Total">
      <summary>This is the total number of operations to be processed.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Version">
      <summary>Gets the version of the target item in the Get action.</summary>
      <returns>The version of the target item in the Get action.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GettingEventArgs.Workspace">
      <summary>Gets the workspace that was updated by this event.</summary>
      <returns>The workspace that was updated by this event.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GettingEventHandler">
      <summary>Event handler for a Getting event that is raised during a get operation.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.GlobalSecurity">
      <summary>Represents the global security settings of an item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GlobalSecurity.Entries">
      <summary>Gets the entries that are associated with this GlobalSecurity instance.</summary>
      <returns>The entries that are associated with this GlobalSecurity instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.GlobalSecurity.ToString">
      <summary>Creates a user-readable string that describes the properties of this GlobalSecurity object.</summary>
      <returns>A user-readable string that describes the properties of this GlobalSecurity object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.GlobalSecurity.Writable">
      <summary>Gets or sets a flag that describes whether the item is writable.</summary>
      <returns>True if the item is writable; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IdentityDeletedException">
      <summary>Describes an IdentityDeletedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IdentityDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IdentityDeletedException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IdentityDeletedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IdentityDeletedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IdentityDeletedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IdentityNotFoundException">
      <summary>Describes an IdentityNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IdentityNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IdentityNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IdentityNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IdentityNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IdentityNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IDiffItem">
      <summary>Interface for an item that was prepared for difference (diff) operations.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IDiffItem.GetEncoding">
      <summary>Gets the encoding of the diff item.</summary>
      <returns>The encoding of the diff item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IDiffItem.GetFile">
      <summary>Gets the file path of the diff item.</summary>
      <returns>The file path of the diff item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IDiffItem.IsTemporary">
      <summary>Gets a flag that decribes whether the diff item is temporary.</summary>
      <returns>True if the diff item is temporary; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IDiffItem.Label">
      <summary>Gets or sets the label of the diff item.</summary>
      <returns>The label of the diff item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IDiffItem.LabelFile">
      <summary>The file part of the label</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IDiffItem.LabelTag">
      <summary>The tag part of the label</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalCommentException">
      <summary>Describes an IllegalCommentException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalCommentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalCommentException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalCommentException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalCommentException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalCommentException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalComputerNameException">
      <summary>Describes an IllegalComputerNameException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalComputerNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalComputerNameException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalComputerNameException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalComputerNameException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalComputerNameException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalFieldNameException">
      <summary>Describes an IllegalFieldNameException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalFieldNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalFieldNameException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalFieldNameException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalFieldNameException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalFieldNameException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalIdentityException">
      <summary>Describes an IllegalIdentityException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalIdentityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalIdentityException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalIdentityException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalIdentityException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalIdentityException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalLabelNameException">
      <summary>Describes an IllegalLabelNameException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalLabelNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalLabelNameException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalLabelNameException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalLabelNameException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalLabelNameException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalPolicyNameException">
      <summary>Describes an IllegalPolicyNameException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalPolicyNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalPolicyNameException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalPolicyNameException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalPolicyNameException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalPolicyNameException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalServerItemException">
      <summary>Describes an IllegalServerItemException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalServerItemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalServerItemException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalServerItemException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalServerItemException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalServerItemException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalShelvesetException">
      <summary>Describes an IllegalShelvesetException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalShelvesetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalShelvesetException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalShelvesetException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalShelvesetException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalShelvesetException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalShelvesetOwnerException">
      <summary>Describes an IllegalShelvesetOwnerException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalShelvesetOwnerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalShelvesetOwnerException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalShelvesetOwnerException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalShelvesetOwnerException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalShelvesetOwnerException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalUrlException">
      <summary>Describes an IllegalUrlException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalUrlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalUrlException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalUrlException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalUrlException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalUrlException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalVersionException">
      <summary>Describes an IllegalVersionException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalVersionException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalVersionException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalVersionException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalVersionException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IllegalWorkspaceException">
      <summary>Describes an IllegalWorkspaceException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalWorkspaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalWorkspaceException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IllegalWorkspaceException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IllegalWorkspaceException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IllegalWorkspaceException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation">
      <summary>Represents an operation that is returned by the server to be used by the client to update the local disk.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.ChangeType">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.DeletionId">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.Ignore">
      <summary>Gets or sets a flag that describes whether to ignore this operation.</summary>
      <returns>True to ignore this operation; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.IsConflict">
      <summary>Gets a flag that describes whether this operation is detected by the server as being in conflict.</summary>
      <returns>True if the item is in conflict, according to the server; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.IsDelete">
      <summary>Gets a flag that describes whether this operation will result in deletion of the item from the local disk.</summary>
      <returns>True if this operation will result in deletion of the item from the local disk; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.ItemId">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.ItemType">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemType" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.PendingChangeId">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.SourceLocalItem">
      <summary>Gets the local path where the item currently exists.</summary>
      <returns>The local path where the item currently exists. Null if the workspace does not have the item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.TargetLocalItem">
      <summary>Gets the local destination for the item.</summary>
      <returns>The local destination for the item. Null for an item to delete or items to move to cloaked or unmapped locations.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.TargetServerItem">
      <summary>Gets the server path of the item.</summary>
      <returns>The server path of the item. This path may be null if the operation is an update to clean up an incomplete undo of an add or branch.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.VersionLocal">
      <summary>Gets the current version of the workspace.</summary>
      <returns>The current version of the workspace. Zero if the workspace does not contain the item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ILocalUpdateOperation.VersionServer">
      <summary>Gets the version that the workspace should have.</summary>
      <returns>The version that the workspace should have. May be zero for cases such as cloaked or unmapped items.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IncompatibleChangeException">
      <summary>Describes an IncompatibleChangeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompatibleChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompatibleChangeException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IncompatibleChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompatibleChangeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IncompatibleChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IncompatibleCompressionFormatException">
      <summary>Describes an IncompatibleCompressionFormatException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompatibleCompressionFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompatibleCompressionFormatException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IncompatibleCompressionFormatException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompatibleCompressionFormatException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IncompatibleCompressionFormatException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IncompletePendingChangeException">
      <summary>Describes an IncompletePendingChangeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompletePendingChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompletePendingChangeException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IncompletePendingChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompletePendingChangeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IncompletePendingChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IncompleteUploadException">
      <summary>Describes an IncompleteUploadException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompleteUploadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompleteUploadException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IncompleteUploadException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncompleteUploadException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IncompleteUploadException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InconsistentRequestTypesException">
      <summary>Describes an InconsistentRequestTypesException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InconsistentRequestTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InconsistentRequestTypesException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InconsistentRequestTypesException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InconsistentRequestTypesException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InconsistentRequestTypesException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IncorrectSizeException">
      <summary>Describes an IncorrectSizeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncorrectSizeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncorrectSizeException.#ctor(System.String)">
      <summary>Encapsulates a message string into an IncorrectSizeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IncorrectSizeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an IncorrectSizeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InheritanceChange">
      <summary>Represents an inheritance change.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InheritanceChange.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new InheritanceChance instance.</summary>
      <param name="item">The item for which to change permissions.</param>
      <param name="inherit">True to inherit permissions; otherwise false.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.InheritanceChange.Inherit">
      <summary>Gets or sets a flag that describes whether to inherit changes.</summary>
      <returns>True to inherit changes; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InheritanceChange.ToString">
      <summary>Creates a user-readable string that describes an InheritanceChange object.</summary>
      <returns>A user-readable string that describes an InheritanceChange object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidAcceptYoursException">
      <summary>Describes an InvalidAcceptYoursException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidAcceptYoursException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidAcceptYoursException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidAcceptYoursException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidAcceptYoursException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidAcceptYoursException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidAcceptYoursRenameTheirsException">
      <summary>Describes an InvalidAcceptYoursRenameTheirsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidAcceptYoursRenameTheirsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidAcceptYoursRenameTheirsException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidAcceptYoursRenameTheirsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidAcceptYoursRenameTheirsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidAcceptYoursRenameTheirsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidBranchCheckinOptionException">
      <summary>Describes an InvalidBranchCheckinOptionException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidBranchCheckinOptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidBranchCheckinOptionException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidBranchCheckinOptionException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidBranchCheckinOptionException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidBranchCheckinOptionException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidCheckinDateException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidCheckinDateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidCheckinDateException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidCheckinDateException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidCheckinTicketException">
      <summary>Describes a SecurityConfigurationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidCheckinTicketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidCheckinTicketException.#ctor(System.String)">
      <summary>Encapsulates a message string into a SecurityConfigurationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidCheckinTicketException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a SecurityConfigurationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidConflictIdException">
      <summary>Describes an InvalidConflictIdException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidConflictIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidConflictIdException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidConflictIdException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidConflictIdException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidConflictIdException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidExtensionException">
      <summary>Describes an InvalidExtensionException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidExtensionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidExtensionException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidExtensionException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidExtensionException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidExtensionException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileIdException">
      <summary>Describes an InvalidFileIdException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileIdException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidFileIdException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileIdException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidFileIdException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileTypeException">
      <summary>Exception to indicate that the specified file type is not valid.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileTypeException.#ctor">
      <summary>Initializes a new InvalidFileTypeException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileTypeException.#ctor(System.String)">
      <summary>Initializes a new InvalidFileTypeException instance.</summary>
      <param name="type">The invalid file type.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidFileTypeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InvalidFileTypeException instance.</summary>
      <param name="type">The invalid file type.</param>
      <param name="innerException">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidIdentityException">
      <summary>Describes an InvalidIdentityException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidIdentityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidIdentityException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidIdentityException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidIdentityException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidIdentityException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidProjectPendingChangeException">
      <summary>Describes an InvalidProjectPendingChangeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidProjectPendingChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidProjectPendingChangeException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidProjectPendingChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidProjectPendingChangeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidProjectPendingChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidResolutionException">
      <summary>Describes an InvalidResolutionException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidResolutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidResolutionException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidResolutionException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidResolutionException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidResolutionException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidSqlDateException">
      <summary>Describes an InvalidSqlDateException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidSqlDateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidSqlDateException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidSqlDateException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidSqlDateException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidSqlDateException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecException">
      <summary>Exception that is thrown when something is wrong with the syntax of a version specification.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecException.#ctor(System.String)">
      <summary>Constructs a new exception instance that is based on the specified message.</summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecForOperationException">
      <summary>Describes an InvalidVersionSpecForOperationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecForOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecForOperationException.#ctor(System.String)">
      <summary>Encapsulates a message string into an InvalidVersionSpecForOperationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.InvalidVersionSpecForOperationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an InvalidVersionSpecForOperationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPendingChangeEventArgs"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingChangeEventArgs.DiskUpdateAttempted">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingChangeEventArgs.IsLatest">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingChangeEventArgs.OperationId">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingChangeEventArgs.PendingChange">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingChangeEventArgs.Status">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingChangeEventArgs.Workspace">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckin">
      <summary>An interface that provides data for policies.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckin.CheckinNotes">
      <summary>Gets an interface that represents the check-in notes portion of the pending check-in.</summary>
      <returns>An interface that represents the check-in notes portion of the pending check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckin.PendingChanges">
      <summary>Gets an interface that represents the pending changes portion of the pending check-in.</summary>
      <returns>An interface that represents the pending changes portion of the pending check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckin.Policies">
      <summary>Gets an interface that represents the policies portion of the pending check-in.</summary>
      <returns>An interface that represents the policies portion of the pending check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckin.WorkItems">
      <summary>Gets an interface that represents the work items portion of the pending check-in.</summary>
      <returns>An interface that represents the work items portion of the pending check-in.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinNotes">
      <summary>Information about the check-in notes portion of the pending check in.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinNotes.CheckinNotes">
      <summary>Gets or sets the check-in note data.</summary>
      <returns>The check-in note data.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinNotes.Evaluate">
      <summary>Verifies that the required check-in notes have content.</summary>
      <returns>The array of failures.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinNotes.FieldDefinitions">
      <summary>Gets the check-in note field definitions.</summary>
      <returns>The check-in note field definitions.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPendingChanges">
      <summary>Information about the pending changes component of the pending check-in.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPendingChanges.AffectedTeamProjectPaths">
      <summary>Gets the array of team projects that was affected by the current set of checked pending changes.</summary>
      <returns>The array of team projects that was affected by the current set of checked pending changes.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPendingChanges.AffectedTeamProjectsChanged">
      <summary>An event that occurs each time that the list of checked pending changes is changed in a way that also changes the list of affected team projects.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPendingChanges.AllPendingChanges">
      <summary>Gets the array of all pending changes.</summary>
      <returns>The array of all pending changes.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPendingChanges.CheckedPendingChanges">
      <summary>Gets or sets the array of checked pending changes.</summary>
      <returns>The array of checked pending changes.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPendingChanges.CheckedPendingChangesChanged">
      <summary>An event that occurs each time the array of checked items has changed.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPendingChanges.Comment">
      <summary>Gets or sets the comment that has been entered by the user.</summary>
      <returns>The comment that has been entered by the user.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPendingChanges.Workspace">
      <summary>Gets the workspace in which the check-in is occurring.</summary>
      <returns>The workspace in which the check-in is occurring.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPolicies">
      <summary>Information about the policies portion of the pending check-in.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPolicies.Evaluate">
      <summary>Evaluates all policies and updates the UI to indicate the current state. Throws an exception if it is unable to get the policy list from the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinPolicies.EvaluationState">
      <summary>Gets the current evaluation state of the policies. This must be checked to determine whether a policy load error occurred.</summary>
      <returns>The current evaluation state of the policies.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinWorkItems">
      <summary>Information about the work items portion of the pending check-in.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinWorkItems.CheckedWorkItems">
      <summary>Gets the array of checked work items.</summary>
      <returns>The array of checked work items.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckinWorkItems.CheckedWorkItemsChanged">
      <summary>An event that occurs each time the array of checked work items has changed.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPolicyCompatibility">
      <summary>This interface is used for backward compatibility for checkin policies that have been moved to new types or assemblies.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPolicyCompatibility.GetAssemblyName">
      <summary>Used for backward compatibility where you must specify a different assembly name for the checkin policy in order to maintain backward compatibility with a previously released version of the checkin policy.</summary>
      <returns>The assembly name that should be stored in the metadata.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPolicyCompatibility.GetBinaryFormatter">
      <summary>This is necessary if you want to create a new BinaryFormatter and hook into the serialization process for backward compatibility (e.g., you want to set the Binder property on the formatter to handle compat for a checkin policy that has been moved to another assembly). If you do not want to hook into the serialization process, just return new BinaryFormatter().</summary>
      <returns>the BinaryFormatter to use for serializing the policy</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition">
      <summary>An interface to interact with the design time behavior of a policy. It is designed to allow lists of policy instances to be displayed and edited.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition.CanEdit">
      <summary>Gets a flag that describes whether this policy includes configuration user interface (UI).</summary>
      <returns>True if this policy includes configuration UI; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition.Description">
      <summary>Gets a description of the behavior of this policy instance.</summary>
      <returns>A description of the behavior of this policy instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition.Edit(Microsoft.TeamFoundation.VersionControl.Client.IPolicyEditArgs)">
      <summary>Displays a dialog box to allow user to configure the properties of the policy.</summary>
      <returns>True if the policy was updated.</returns>
      <param name="policyEditArgs">The edit context for the policy.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition.InstallationInstructions">
      <summary>Gets a message that is displayed if the policy appears not to be installed.</summary>
      <returns>A message that is displayed if the policy appears not to be installed.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition.Type">
      <summary>Gets the type of the policy.</summary>
      <returns>The type of the policy.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition.TypeDescription">
      <summary>Gets a description of the policy type.</summary>
      <returns>A description of the policy type.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEditArgs">
      <summary>An interface to specify the policy edit context.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEditArgs.IsNew">
      <summary>Gets a flag that describes whether the user is editing a new instance of this policy.</summary>
      <returns>True if the user is editing a new instance of this policy; false if the user is modifying an existing instance.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEditArgs.Parent">
      <summary>Gets the parent window for policies dialog boxes.</summary>
      <returns>The parent window for policies dialog boxes.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEditArgs.TeamProject">
      <summary>Gets the team project on which this policy is being applied.</summary>
      <returns>The team project on which this policy is being applied.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEvaluation">
      <summary>An interface to interact with the run-time behavior of policies (for example, for evaluation).</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEvaluation.Activate(Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure)">
      <summary>Display UI allows a user to get more information about a particular policy failure.</summary>
      <param name="failure">The failure about which the user wants more information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEvaluation.DisplayHelp(Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure)">
      <summary>Display UI provides help to determine the meaning of this failure and what the user can do to resolve it.</summary>
      <param name="failure">The failure for which the user wants help.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEvaluation.Evaluate">
      <summary>Evaluates the policy and returns an array of failures, if any occur. Returns an empty list if no failures occur.</summary>
      <returns>An array of failures for this policy.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEvaluation.Initialize(Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckin)">
      <summary>Initializes the policy instance so that it can perform evaluations.</summary>
      <param name="pendingCheckin">An object that allows the policy to gather information about the check-in for evaluation.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.IPolicyEvaluation.PolicyStateChanged">
      <summary>An event that the policy can raise to notify the host of an asynchronous change in the list of policy failures.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Item">
      <summary>Represents a committed version of a file or folder in the version control server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ArtifactUri">
      <summary>Gets the artifact uniform resource identifier (URI).</summary>
      <returns>The URI of the item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ArtifactUriLatestItemVersion">
      <summary>Gets the latest version artifact URI.</summary>
      <returns>The URI of the item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.Attributes"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ChangesetId">
      <summary>Gets the changeset ID of this item.</summary>
      <returns>The changeset ID of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.CheckinDate">
      <summary>Gets the check-in date of this item.</summary>
      <returns>The check-in date of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.Comparer">
      <summary>Gets a Comparer object for Version Control server paths.</summary>
      <returns>A Comparer object for Version Control server paths.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ContentLength">
      <summary>Gets the length of the content in this item.</summary>
      <returns>The length of the content in this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.DeletionId">
      <summary>Gets the deletion ID of this item.</summary>
      <returns>The deletion ID of this item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Item.DownloadFile">
      <summary>Downloads the content for this version of the item.</summary>
      <returns>A stream that contains the contents of the item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Item.DownloadFile(System.String)">
      <summary>Downloads the content for this version of the item.</summary>
      <param name="localFileName">Local path to use to save the downloaded file contents.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.Encoding">
      <summary>Gets the encoding of this item.</summary>
      <returns>The encoding of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.HashValue">
      <summary>Gets the hash value of this item.</summary>
      <returns>The hash value of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.IsBranch">
      <summary>Flag that describes whether this item is a branch.</summary>
      <returns>True if this item is a branch; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.IsContentDestroyed">
      <summary>Gets a flag that describes whether the content of the item was destroyed.</summary>
      <returns>True if the content of this file has been destroyed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ItemId">
      <summary>Gets the ID of this item.</summary>
      <returns>The ID of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ItemType">
      <summary>Gets the type of this item.</summary>
      <returns>The type of this item.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_changesetId"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_checkinDate"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_contentLength"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_deletionId"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_downloadUrl"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_encoding"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_isBranch"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_itemId"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_itemType"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_serverItem"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_timeZone"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Item.m_timeZoneOffset"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.Properties">
      <summary>Gets a read-only collection of properties that is associated with the item.</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.PropertyValues"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.ServerItem">
      <summary>Gets the path of the associated item on the server.</summary>
      <returns>The path of the associated item on the server.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Item.ToString">
      <summary>Creates a user-readable string that displays relevant properties of this item.</summary>
      <returns>A user-readable string that displays relevant properties of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Item.VersionControlServer">
      <summary>Gets the version control repository that contains this item.</summary>
      <returns>The version control repository that contains this item.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException">
      <summary>Describes an ItemCloakedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ItemCloakedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ItemCloakedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemDeletedException">
      <summary>Describes an ItemDeletedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemDeletedException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ItemDeletedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemDeletedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ItemDeletedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemExistsException">
      <summary>Describes an ItemExistsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemExistsException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ItemExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemExistsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ItemExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier">
      <summary>Represents a unique identifier for an item.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Change)">
      <summary>Creates an item identifier from a change object.</summary>
      <param name="change">The change object.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.#ctor(System.String)">
      <summary>Creates an item identifier for an item.</summary>
      <param name="item">The path of the local or server item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Creates an item identifier for an item and specified version.</summary>
      <param name="item">The path of the local or server item.</param>
      <param name="version">A VersionSpec that is used for the identifier.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32)">
      <summary>Creates an item identifier with the item and specified version</summary>
      <param name="item">Server or local item</param>
      <param name="version">Version Spec used for the identifier.</param>
      <param name="deletionId">DeletionId of the identifier - to be deprecated in a future releae</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.ChangeType">
      <summary>Gets the change type of the item.</summary>
      <returns>The change type of the item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.DeletionId">
      <summary>The deletion id of the item identifier, this is intentionally internal as we want to eventually obsolete DeletionId, use IsDeleted instead</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.Equals(Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier)">
      <summary>Compares this item identifier to another.</summary>
      <returns>True if the two objects are equivalent; otherwise, false.</returns>
      <param name="id">The other item identifer to compare.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.IsDeleted">
      <summary>Checks whether the item is deleted at the VersionSpec version. </summary>
      <returns>True if the item is deleted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.Item">
      <summary>Gets or sets the item that is associated with this ItemIdentifier.</summary>
      <returns>The item that is associated with this ItemIdentifier.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.ToString">
      <summary>Creates a user-readable string that describes the properties of this ItemIdentifier.</summary>
      <returns>A user-readable string that describes the properties of this ItemIdentifier.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier.Version">
      <summary>Gets or sets the version that is associated with this ItemIdentifier.</summary>
      <returns>The version that is associated with this ItemIdentifier.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemLockedException">
      <summary>Describes an ItemLockedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemLockedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemLockedException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ItemLockedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemLockedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ItemLockedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemMerge">
      <summary>Represents a merge of two items.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemMerge.SourceItemId">
      <summary>Gets the source item ID.</summary>
      <returns>The source item ID.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemMerge.SourceServerItem">
      <summary>Gets the source server item.</summary>
      <returns>The source server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemMerge.SourceVersionFrom">
      <summary>Gets the source version.</summary>
      <returns>The source version.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemMerge.TargetItemId">
      <summary>Gets the target item ID.</summary>
      <returns>The target item ID.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemMerge.TargetServerItem">
      <summary>Gets the target server item.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemMerge.TargetVersionFrom">
      <summary>Gets the target version.</summary>
      <returns>The target version.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemMerge.ToString">
      <summary>Creates a user-readable string that describes this ItemMerge object.</summary>
      <returns>A user-readable string that describes this ItemMerge object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotCheckedOutException">
      <summary>Describes an ItemNotCheckedOutException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotCheckedOutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotCheckedOutException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ItemNotCheckedOutException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotCheckedOutException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ItemNotCheckedOutException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotFoundException">
      <summary>Describes an ItemNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ItemNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ItemNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">
      <summary>Describes a RollbackInvalidVersionSpecException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a RollbackInvalidVersionSpecException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a RollbackInvalidVersionSpecException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemProperties">
      <summary>Encapsulates a set of properties associated with a path.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemProperties.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemProperties.Path">
      <summary>The path that has the properties</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemProperties.Properties">
      <summary>The properties associated with the path.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemRequiredException">
      <summary>Describes an ItemRequiredException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemRequiredException.#ctor(System.String)">
      <summary>Encapsulates a message string into an ItemRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemRequiredException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an ItemRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSecurity">
      <summary>Represents the security of an item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSecurity.Entries">
      <summary>Gets or sets the access permissions of this item.</summary>
      <returns>The access permissions of this item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSecurity.Inherit">
      <summary>Gets or sets a flag that describes the permission inheritance of this item.</summary>
      <returns>True to inherit permissions from the parent; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSecurity.ServerItem">
      <summary>Gets or sets the server item that is associated with this item.</summary>
      <returns>The server item that is associated with this item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSecurity.ToString">
      <summary>Creates a user-readable string that describes properties of this ItemSecurity object.</summary>
      <returns>A user-readable string that describes properties of this ItemSecurity object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSecurity.Writable">
      <summary>Gets or sets a flag that describes whether this instance is writable.</summary>
      <returns>True if this instance is writable; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet">
      <summary>Represents the results of a QueryItem operation.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSet.Items">
      <summary>Gets the items in a set.</summary>
      <returns>The items in a set.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSet.Pattern">
      <summary>Gets the pattern for an item set.</summary>
      <returns>The pattern for an item set.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSet.QueryPath">
      <summary>Gets the query path of an item set.</summary>
      <returns>The query path of an item set.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSet.ToString">
      <summary>Creates a user-readable string that describes the properties of an item set.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec">
      <summary>Represents one or more files or folders on the local machine or on the version-control server.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.#ctor(Microsoft.TeamFoundation.VersionControl.Client.PendingChange)">
      <summary>Initializes a new ItemSpec instance.</summary>
      <param name="pendingChange">The pending change to encapsulate.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Initializes a new ItemSpec instance.</summary>
      <param name="item">The path of the item to include in this item specifier.</param>
      <param name="recursionType">The recursion type of this item specifier.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Int32)">
      <summary>Initializes a new ItemSpec instance.</summary>
      <param name="item">The path of the item to include in this item specifier.</param>
      <param name="recursionType">The recursion type of this item specifier.</param>
      <param name="deletionId">The deletion ID of this item specifier.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.DeletionId">
      <summary>Gets or sets the deletion ID of this item.</summary>
      <returns>The deletion ID of this item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.FromPendingChanges(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
      <summary>Creates an array of ItemSpec objects out of an array of PendingChanges objects.</summary>
      <returns>An array of ItemSpec objects that contain information from the PendingChanges objects.</returns>
      <param name="pendingChanges">An array of objects.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.FromStrings(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets an array of ItemSpec objects from the specified array of local or server paths and a recursion level.</summary>
      <returns>An array of ItemSpec objects.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.Item">
      <summary>Gets or sets the item that is associated with this ItemSpec object.</summary>
      <returns>The item that is associated with this ItemSpec object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.RecursionType">
      <summary>Gets or sets the recursion type of this item. For more information about how to use this property, see Team Foundation Build Activities.</summary>
      <returns>The recursion type of this item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.ToString">
      <summary>Creates a user-readable string that describes an ItemSpec object.</summary>
      <returns>A user-readable string that describes an ItemSpec object.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec.ToStrings(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
      <summary>Creates an array of user-readable strings from an array of ItemSpec objects.</summary>
      <returns>An array of strings that describe the properties of the ItemSpec objects.</returns>
      <param name="itemSpecs">An array of ItemSpec objects.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ItemType">
      <summary>Describes the item type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ItemType.Any">
      <summary>Any item type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ItemType.File">
      <summary>File type of item.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ItemType.Folder">
      <summary>Folder type of item.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult">
      <summary>Interface defining the result of the execute operation</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult.Cancel"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult.ExitCode">
      <summary>The exit code 0 - success otherwise - failure</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult.ExitMessage">
      <summary>A message to be shown to the user in the resolve dialog on exit (as part of the confirmation dialog)</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult.HasExited">
      <summary>Returns true if the executer has exited the operation</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult.Id">
      <summary>The id of the process or the operation handler that is executing the operation</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult.Name">
      <summary>Name of the operation handler that is executing the operation</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult.PromptUserForMergeConfirmation">
      <summary>Whether TFS should prompt for user confirmation (Used) only by merge tools</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult.WaitForOperationEnd">
      <summary>Blocks until the operation is complete</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.IToolProvider">
      <summary>Interface defining the operation provider for tfs vc client OM</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolProvider.CanOperateOnInMemoryFiles"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.IToolProvider.Execute(System.EventHandler,Microsoft.TeamFoundation.VersionControl.Client.AdvancedToolParameters,System.String[])">
      <summary>The execute method for the tool. Called to execute the tool by the OM.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.IToolExecutionResult" />.</returns>
      <param name="arguments">All the argument specified by the operation</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolProvider.Extension">
      <summary>The extension that this tool operate on.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.IToolProvider.Operation">
      <summary>The operation supported by this tool.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ToolOperations" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption">
      <summary>Enumeration for LabelItem to determine what is to be done with children.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption.Fail">
      <summary>Fail.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption.Merge">
      <summary>Merge.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption.Replace">
      <summary>Replace.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelDuplicateItemException">
      <summary>Describes a LabelDuplicateItemException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelDuplicateItemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelDuplicateItemException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LabelDuplicateItemException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelDuplicateItemException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LabelDuplicateItemException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelExistsException">
      <summary>Describes a LabelExistsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelExistsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LabelExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelExistsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LabelExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelHasChildrenException">
      <summary>Describes a LabelHasChildrenException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelHasChildrenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelHasChildrenException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LabelHasChildrenException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelHasChildrenException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LabelHasChildrenException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec">
      <summary>Represents an item that is being labeled.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec.#ctor(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Boolean)">
      <summary>Initializes a new LabelItemSpec instance.</summary>
      <param name="itemSpec">The item specifier.</param>
      <param name="version">The version of the item.</param>
      <param name="exclude">True to exclude this label from listing.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec.Exclude">
      <summary>Gets or sets a flag that describes whether to exclude this item from a listing.</summary>
      <returns>True to exclude this item from a listing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec.ItemSpec">
      <summary>Gets or sets the item specifier for this label.</summary>
      <returns>The item specifier for this label.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec.ToString">
      <summary>Creates a user-readable string that describes the properties of a LabelItemSpec.</summary>
      <returns>A user-readable string that describes the properties of a LabelItemSpec.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec.Version">
      <summary>Gets or sets the version of this label.</summary>
      <returns>The version of this label.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelNotFoundException">
      <summary>Describes a LabelNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LabelNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LabelNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelNotUniqueException">
      <summary>Describes a LabelNotUniqueException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelNotUniqueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelNotUniqueException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LabelNotUniqueException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelNotUniqueException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LabelNotUniqueException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelOwnerChangeException">
      <summary>Describes a LabelOwnerChangeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelOwnerChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelOwnerChangeException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LabelOwnerChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelOwnerChangeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LabelOwnerChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelPendingAddException">
      <summary>Describes a LabelPendingAddException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelPendingAddException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelPendingAddException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LabelPendingAddException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelPendingAddException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LabelPendingAddException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelResult">
      <summary>Encapsulates a label together with scope and status properties.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LabelResult.Label">
      <summary>Gets the label that is contained in this label result.</summary>
      <returns>The label that is contained in this label result.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LabelResult.Scope">
      <summary>Gets the scope of this label result.</summary>
      <returns>The scope of this label result.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LabelResult.Status">
      <summary>Gets the status of this label result.</summary>
      <returns>The status of this label result.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelResult.ToString">
      <summary>Creates a user-readable string that describes the properties of a LabelResult object.</summary>
      <returns>A user-readable string that describes the properties of a LabelResult object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelResultStatus">
      <summary>The status of a label.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LabelResultStatus.Created">
      <summary>Created.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LabelResultStatus.Deleted">
      <summary>Deleted.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LabelResultStatus.Updated">
      <summary>Updated.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec">
      <summary>Represents version as a label.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.#ctor(System.String)">
      <summary>Initializes a new LabelVersionSpec object.</summary>
      <param name="label">The name of the label to encapsulate.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.#ctor(System.String,System.String)">
      <summary>Initializes a new LabelVersionSpec object.</summary>
      <param name="label">The name of the label to encapsulate.</param>
      <param name="scope">The scope of the label. May be null.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.Equals(System.Object)">
      <summary>Determines whether this instance is equal to the specified instance.</summary>
      <returns>True if the two instances are equivalent; otherwise, false.</returns>
      <param name="obj">The other instance to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.GetHashCode">
      <summary>Generates a hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.Identifier"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.Label">
      <summary>Gets or sets the label.</summary>
      <returns>The label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.Scope">
      <summary>Gets or sets the scope.</summary>
      <returns>The scope.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LabelVersionSpec.ToString">
      <summary>Creates a user-readable string that describes the properties of a LabelVersionSpec object.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionDeletedException">
      <summary>Describes a LatestVersionDeletedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionDeletedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LatestVersionDeletedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionDeletedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LatestVersionDeletedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionSpec">
      <summary>Represents the latest valid version in the repository.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionSpec.Equals(System.Object)">
      <summary>Determines whether this LatestVersionSpec instance is equal to the specified instance.</summary>
      <returns>True if the two instances are equivalent; otherwise, false.</returns>
      <param name="obj">The other instance to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionSpec.GetHashCode">
      <summary>Generates a hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionSpec.Identifier">
      <summary>Identifier for this version specification in command-line usage.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionSpec.Instance">
      <summary>Singleton instance for the latest version specifier.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionSpec" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LatestVersionSpec.ToString">
      <summary>Creates a user-readable string that describes the properties of a LatestVersionSpec object.</summary>
      <returns>A user-readable string that describes the properties of a LatestVersionSpec object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LoadFailurePolicyType">
      <summary>Represents a failure in the attempt to load a policy type.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LoadFailurePolicyType.New">
      <summary>Throws an exception representing a failure to load the policy type.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LocalItemExclusionEvaluator">
      <summary>An LocalItemExclusionEvaluator is an evaluator for local item exclusions.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemExclusionEvaluator.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace,System.String)">
      <summary>Create an LocalItemExclusionEvaluator object to evaluate local item exclusions for the provided Workspace. Path parts at or above the start local item will not be checked for exclusions.</summary>
      <param name="workspace">Workspace to check</param>
      <param name="startLocalItem">Start local item</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemExclusionEvaluator.IsExcluded(System.String)">
      <summary>Check the provided local item against the LocalItemExclusionEvaluator to see whether it should be excluded from addition to version control.</summary>
      <returns>True if the item is excluded; false otherwise</returns>
      <param name="localItem">The local item to check</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemExclusionEvaluator.IsExcluded(System.String,System.Boolean)">
      <summary>Check the provided local item against the LocalItemExclusionEvaluator to see whether it should be excluded from addition to version control.</summary>
      <returns>True if the item is excluded; false otherwise</returns>
      <param name="localItem">The local item to check</param>
      <param name="isFolder">True if the local item to check is a folder; false otherwise</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemExclusionEvaluator.IsExcluded(System.String,System.Boolean,System.String@,System.String@)">
      <summary>Check the provided local item against the LocalItemExclusionEvaluator to see whether it should be excluded from addition to version control. If the item is excluded, the appliedExclusion and ignoreFilePath out parameters will be set to provide additional information about why the item was excluded.</summary>
      <returns>True if the item is excluded; false otherwise</returns>
      <param name="localItem">The local item to check</param>
      <param name="isFolder">True if the local item to check is a folder; false otherwise</param>
      <param name="appliedExclusion">[out] If the item is excluded, the exclusion which was applied</param>
      <param name="ignoreFilePath">[out] If the item is excluded, the name of the ignore file on disk which contains the applied exclusion. If the applied exclusion came from the global exclusion list for the Team Project Collection, the value is the empty string.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LocalItemExclusionEvaluator.UseOnlyStartLocalItemExclusions">
      <summary>If true, ignore files below the start local item will not be processed when evaluating exclusions. The default value for this flag is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LocalItemOutOfDateException">
      <summary>Describes a LocalItemOutOfDateException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemOutOfDateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemOutOfDateException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LocalItemOutOfDateException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemOutOfDateException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LocalItemOutOfDateException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LocalItemRequiredException">
      <summary>Describes a LocalItemRequiredException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemRequiredException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LocalItemRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalItemRequiredException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LocalItemRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LocalPathTooLongException">
      <summary>Describes a LocalPathTooLongException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalPathTooLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalPathTooLongException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LocalPathTooLongException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalPathTooLongException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LocalPathTooLongException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LocalVersion">
      <summary>Encapsulates a local item together with information about item and version.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LocalVersion.Item">
      <summary>Gets the item that is associated with this LocalVersion instance.</summary>
      <returns>The item that is associated with this LocalVersion instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalVersion.ToString">
      <summary>Creates a user-readable string that describes a LocalVersion object.</summary>
      <returns>A user-readable string that describes a LocalVersion object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.LocalVersion.Version">
      <summary>Gets the version that is associated with this LocalVersion instance.</summary>
      <returns>The version that is associated with this LocalVersion instance.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LocalVersionNotFoundException">
      <summary>Describes a LocalVersionNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalVersionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalVersionNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a LocalVersionNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalVersionNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a LocalVersionNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LocalWorkspaceRequiredException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalWorkspaceRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalWorkspaceRequiredException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.LocalWorkspaceRequiredException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.LockLevel">
      <summary>Valid locking levels.  Used in the LockLevel property of PendingChange.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LockLevel.CheckOut">
      <summary>Check-out lock.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LockLevel.Checkin">
      <summary>Check-in lock.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LockLevel.None">
      <summary>No lock.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.LockLevel.Unchanged">
      <summary>Lock status is unchanged.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Mapping">
      <summary>Describes a mapping that links an item on the server to an item on the local machine.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Mapping.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Mapping.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderType,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Initializes a new Mapping instance.</summary>
      <param name="serverItem">The server item to map.</param>
      <param name="type">The type of the working folder.</param>
      <param name="depth">The depth of the recursion.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Mapping.Depth">
      <summary>Gets the recursion type for the mapping.</summary>
      <returns>The recursion type for the mapping.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Mapping.DisplayServerItem">
      <summary>Gets the display string for a server item.</summary>
      <returns>The display string for a server item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Mapping.Equals(System.Object)">
      <summary>Compares whether this Mapping instance and another object are equivalent.</summary>
      <returns>True if the Mapping instance is equivalent to <paramref name="obj" />.</returns>
      <param name="obj">The object to compare to.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Mapping.GetHashCode">
      <summary>Generates a hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Mapping.m_depth"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Mapping.m_serverItem"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Mapping.m_type"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Mapping.op_Equality(Microsoft.TeamFoundation.VersionControl.Client.Mapping,Microsoft.TeamFoundation.VersionControl.Client.Mapping)">
      <summary>Compares whether two Mapping objects are equivalent.</summary>
      <returns>True if the objects are equivalent; otherwise, false.</returns>
      <param name="mapping1">The first Mapping object.</param>
      <param name="mapping2">The second Mapping object.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Mapping.op_Inequality(Microsoft.TeamFoundation.VersionControl.Client.Mapping,Microsoft.TeamFoundation.VersionControl.Client.Mapping)">
      <summary>Compares whether two Mapping objects are not equivalent.</summary>
      <returns>True if the objects are not equivalent; otherwise, false.</returns>
      <param name="mapping1">The first Mapping object.</param>
      <param name="mapping2">The second Mapping object.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Mapping.ServerItem">
      <summary>Gets the path of the server item that is associated with this mapping.</summary>
      <returns>The path of the server item that is associated with this mapping.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Mapping.ToString">
      <summary>Creates a user-readable string that shows all relevant properties of this mapping instance.</summary>
      <returns>A user-readable string that shows all relevant properties of this mapping instance.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Mapping.Type">
      <summary>Gets the type of the mapped working folder.</summary>
      <returns>The type of the mapped working folder.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MappingConflictException">
      <summary>Exception to indicate that the workspace contains conflicting working folders.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MappingConflictException.#ctor">
      <summary>Initializes a new MappingConflictException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MappingConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new MappingConflictException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MappingConflictException.#ctor(System.String)">
      <summary>Initializes a new MappingConflictException instance.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MappingConflictException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new MappingConflictException instance.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="exception">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MappingException">
      <summary>Describes a RollbackInvalidVersionSpecException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MappingException.#ctor(System.String)">
      <summary>Encapsulates a message string into a RollbackInvalidVersionSpecException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MappingException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a RollbackInvalidVersionSpecException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MaxRowsEvaluatedException">
      <summary>Describes a MaxRowsEvaluatedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MaxRowsEvaluatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MaxRowsEvaluatedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MaxRowsEvaluatedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MaxRowsEvaluatedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MaxRowsEvaluatedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeCandidate">
      <summary>Represents a changeset candidate for merge.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeCandidate.Changeset">
      <summary>Gets the changeset candidate for merge.</summary>
      <returns>The changeset candidate for merge.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeCandidate.Partial">
      <summary>Gets a flag that describes whether the merge was partially completed.</summary>
      <returns>False if the merge was fully completed; otherwise, true.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeCandidate.ToString">
      <summary>Creates a user-readable string that describes the properties in this MergeCandidate object.</summary>
      <returns>A user-readable string that describes the properties in this MergeCandidate object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeConflictExistsException">
      <summary>Describes a MergeConflictExistsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeConflictExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeConflictExistsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeConflictExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeConflictExistsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeConflictExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeDoNotHaveTargetLocallyException">
      <summary>Describes a MergeDoNotHaveTargetLocallyException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeDoNotHaveTargetLocallyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeDoNotHaveTargetLocallyException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeDoNotHaveTargetLocallyException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeDoNotHaveTargetLocallyException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeDoNotHaveTargetLocallyException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeEditDeleteException">
      <summary>Describes a MergeEditDeleteException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeEditDeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeEditDeleteException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeEditDeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeEditDeleteException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeEditDeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs">
      <summary>Arguments describing a merge operation on a single item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.Attributes"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.ChangeType">
      <summary>Gets the changetype of the pending change.</summary>
      <returns>The ChangeType of the pending change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.DiskUpdateAttempted">
      <summary>Gets a flag describing whether an update to disk occurred.</summary>
      <returns>True if a disk update was attempted (i.e. this was not a preview merge). False otherwise.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.GetMessage(System.String@)">
      <summary>Gets a string that describes this event.</summary>
      <returns>The message for a pending merge.</returns>
      <param name="error">The error message, if any, that is also a result of this event.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.IsConflict">
      <summary>Gets a flag describing whether or not a conflict exists in the merge.</summary>
      <returns>True if a conflict exist. False otherwise.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.IsLatest">
      <summary>Gets a flag describing whether this operation is getting the latest version of the item.</summary>
      <returns>True if the operation is getting the latest version of the item. False otherwise.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.OperationId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.PendingChange">
      <summary>Gets the pending change resulting from an automatically resolved merge.</summary>
      <returns>The pending change resulting from an automatically resolved merge. Null otherwise.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.Properties">
      <summary>Gets a collection of properties associated with this merge.</summary>
      <returns>A collection of properties associated with this merge.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.PropertyValues"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.Resolution">
      <summary>Gets the resolution of the merge.</summary>
      <returns>The resolution of the merge.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.SourceLocalItem">
      <summary>Gets the name of the source local item.</summary>
      <returns>The name of the source local item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.SourceServerItem">
      <summary>Gets the name of the source server item.</summary>
      <returns>The name of the source server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.SourceVersionFrom">
      <summary>Gets the changeset version specifier of the source item.</summary>
      <returns>The changeset version specifier of the source item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.SourceVersionTo">
      <summary>Gets the changeset version specifier of the source item.</summary>
      <returns>The changeset version specifier of the source item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.Status">
      <summary>Gets the current status of the merge operation.</summary>
      <returns>The current status of the merge operation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.TargetLocalItem">
      <summary>Gets the path to the target local item.</summary>
      <returns>The path to the target local item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.TargetLocalPendingChangeType">
      <summary>Gets the changetype of the target local item.</summary>
      <returns>The changetype of the target local item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.TargetServerItem">
      <summary>Gets the path to the target server item.</summary>
      <returns>The path to the target server item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.TargetVersionPended">
      <summary>Gets the changeset version specifier of the pending target version.</summary>
      <returns>The changeset version specifier of the pending target verison.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeEventArgs.Workspace">
      <summary>Gets the workspace associated with this merge.</summary>
      <returns>Gets the workspace associated with this merge.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeEventHandler">
      <summary>Handler for all Merge events.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeOptions">
      <summary>Describes merge options.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.MergeOptions.AlwaysAcceptMine">
      <summary>Always accept merges from this user.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.MergeOptions.Baseless">
      <summary>Baseless merge options.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.MergeOptions.ForceMerge">
      <summary>Force merge.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.MergeOptions.NoMerge">
      <summary>No merge.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.MergeOptions.None">
      <summary>No merge options are set.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeSource">
      <summary>Represents the source of a merge.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeSource.IsRename">
      <summary>Gets a flag that describes whether this item is a rename.</summary>
      <returns>True if this item is a rename; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeSource.ServerItem">
      <summary>Gets the server item.</summary>
      <returns>The server item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeSource.ToString">
      <summary>Creates a user-readable string that describes this MergeSource object.</summary>
      <returns>A user-readable string that describes this MergeSource object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeSource.VersionFrom">
      <summary>Gets the version from.</summary>
      <returns>The version from.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MergeSource.VersionTo">
      <summary>Gets the version to.</summary>
      <returns>The version to.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetCloakedException">
      <summary>Describes a MergeTargetCloakedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetCloakedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetCloakedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeTargetCloakedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetCloakedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeTargetCloakedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetFileSourceDirectoryException">
      <summary>Describes a MergeTargetFileSourceDirectoryException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetFileSourceDirectoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetFileSourceDirectoryException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeTargetFileSourceDirectoryException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetFileSourceDirectoryException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeTargetFileSourceDirectoryException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetNotMappedException">
      <summary>Describes a MergeTargetNotMappedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetNotMappedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetNotMappedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeTargetNotMappedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetNotMappedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeTargetNotMappedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathAlreadyHasPendingMergeException">
      <summary>Describes a MergeTargetPathAlreadyHasPendingMergeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathAlreadyHasPendingMergeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathAlreadyHasPendingMergeException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeTargetPathAlreadyHasPendingMergeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathAlreadyHasPendingMergeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeTargetPathAlreadyHasPendingMergeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathHasIncompatiblePendingChangeException">
      <summary>Describes a MergeTargetPathHasIncompatiblePendingChangeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathHasIncompatiblePendingChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathHasIncompatiblePendingChangeException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeTargetPathHasIncompatiblePendingChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathHasIncompatiblePendingChangeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeTargetPathHasIncompatiblePendingChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathHasNamespacePendingChangeConflictException">
      <summary>Describes a MergeTargetPathHasNamespacePendingChangeConflictException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathHasNamespacePendingChangeConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathHasNamespacePendingChangeConflictException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MergeTargetPathHasNamespacePendingChangeConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MergeTargetPathHasNamespacePendingChangeConflictException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MergeTargetPathHasNamespacePendingChangeConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MissingBaselineException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MissingBaselineException.#ctor(System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.MissingBaselineException.TargetLocalItem">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MissingParentIsRenameOrUndeleteException">
      <summary>Describes a MissingParentIsRenameOrUndeleteException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MissingParentIsRenameOrUndeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MissingParentIsRenameOrUndeleteException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MissingParentIsRenameOrUndeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MissingParentIsRenameOrUndeleteException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MissingParentIsRenameOrUndeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MultipleWorkspacesFoundException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MultipleWorkspacesFoundException.#ctor(System.String,System.String,System.Collections.Generic.List{System.String})"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.MustUndeleteParentException">
      <summary>Describes a MustUndeleteParentException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MustUndeleteParentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MustUndeleteParentException.#ctor(System.String)">
      <summary>Encapsulates a message string into a MustUndeleteParentException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.MustUndeleteParentException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a MustUndeleteParentException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.NoChangesToShelveException">
      <summary>Describes a NoChangesToShelveException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoChangesToShelveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoChangesToShelveException.#ctor(System.String)">
      <summary>Encapsulates a message string into a NoChangesToShelveException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoChangesToShelveException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a NoChangesToShelveException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.NoLockExistsException">
      <summary>Describes a NoLockExistsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoLockExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoLockExistsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a NoLockExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoLockExistsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a NoLockExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.NoMergeRelationshipException">
      <summary>Describes a NoMergeRelationshipException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoMergeRelationshipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoMergeRelationshipException.#ctor(System.String)">
      <summary>Encapsulates a message string into a NoMergeRelationshipException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NoMergeRelationshipException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a NoMergeRelationshipException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.NotAllowedOnFolderException">
      <summary>Describes a NotAllowedOnFolderException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotAllowedOnFolderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotAllowedOnFolderException.#ctor(System.String)">
      <summary>Encapsulates a message string into a NotAllowedOnFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotAllowedOnFolderException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a NotAllowedOnFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.NotPermittedForLocalWorkspaceException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotPermittedForLocalWorkspaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotPermittedForLocalWorkspaceException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotPermittedForLocalWorkspaceException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.NotWorkspaceOwnerException">
      <summary>Describes a NotWorkspaceOwnerException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotWorkspaceOwnerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotWorkspaceOwnerException.#ctor(System.String)">
      <summary>Encapsulates a message string into a NotWorkspaceOwnerException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.NotWorkspaceOwnerException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a NotWorkspaceOwnerException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.OnlyOneWorkspaceException">
      <summary>Exception to indicate that the files that were specified span more than one workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OnlyOneWorkspaceException.#ctor">
      <summary>Initializes a new OnlyOneWorkspaceException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OnlyOneWorkspaceException.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace,System.String)">
      <summary>Initializes a new OnlyOneWorkspaceException instance.</summary>
      <param name="workspace">The workspace that threw the exception.</param>
      <param name="dirName">The directory that contains the workspace.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OnlyOneWorkspaceException.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace,System.String,System.Exception)">
      <summary>Initializes a new OnlyOneWorkspaceException instance.</summary>
      <param name="workspace">The workspace that threw the exception.</param>
      <param name="dirName">The directory that contains the workspace.</param>
      <param name="innerException">The exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OnlyOneWorkspaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OnlyOneWorkspaceException.#ctor(System.String)">
      <summary>Initializes a new OnlyOneWorkspaceException instance.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OnlyOneWorkspaceException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new OnlyOneWorkspaceException instance.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="exception">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.OperationEventArgs">
      <summary>Event arguments for file transfers (uploads and downloads).</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.OperationEventArgs.Id">
      <summary>Gets the unique ID for each start/finish event pair that can be used to match the start and finish events.</summary>
      <returns>The unique ID for each start/finish event pair that can be used to match the start and finish events.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.OperationEventArgs.Type">
      <summary>Gets the type of operation that is starting or has finished.</summary>
      <returns>The type of operation that is starting or has finished.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.OperationEventArgs.Workspace">
      <summary>Gets the workspace associated with this operation.</summary>
      <returns>The workspace associated with this operation. Null if no workspace is available or the workspace is unknown.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.OperationEventHandler">
      <summary>Handler to start and finish operations.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType">
      <summary>These operations have notifications for the start and finish of events.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Get">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Merge">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Pend">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Undo">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Checkin">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Shelve">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Unshelve">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Resolve">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Destroy">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationEventType.Rollback">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus">
      <summary>Describes the status of a get operation.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.Conflict">
      <summary>A conflict.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.SourceWritable">
      <summary>Source writeable.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.TargetLocalPending">
      <summary>Target local pending.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.TargetWritable">
      <summary>Target writeable.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.Getting">
      <summary>Getting.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.Replacing">
      <summary>Replacing.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.Deleting">
      <summary>Deleting.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.SourceDirectoryNotEmpty">
      <summary>Source directory is not empty.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.TargetIsDirectory">
      <summary>Target is a directory.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus.UnableToRefresh">
      <summary>Unable to refresh.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.OwnerRequiredException">
      <summary>Describes an OwnerRequiredException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OwnerRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OwnerRequiredException.#ctor(System.String)">
      <summary>Encapsulates a message string into an OwnerRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.OwnerRequiredException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an OwnerRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PartialRenameConflictException">
      <summary>Describes a PartialRenameConflictException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PartialRenameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PartialRenameConflictException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PartialRenameConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PartialRenameConflictException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PartialRenameConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange">
      <summary>Represents a change that has not been committed to the repository.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ChangeType">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType" /> of this pending change.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType" />of this pending change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ChangeTypeName">
      <summary>Gets the localized name of the change type.</summary>
      <returns>The localized name of the change type.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ConflictType">
      <summary>The type of conflict against this change - this is only populated for queries against local workspaces</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ConvertToChangeType(System.Int32)">
      <summary>Converts the ChangeType integer value that is returned from the server into a ChangeType enum.</summary>
      <returns>The ChangeType as an enum value.</returns>
      <param name="flags">The ChangeType integer value to convert.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ConvertToInt(Microsoft.TeamFoundation.VersionControl.Client.ChangeType)">
      <summary>Converts the client ChangeType enum value to the integer value that is used by the server.</summary>
      <returns>The integer value that is used by the server.</returns>
      <param name="changeType">The ChangeType enum value to convert.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.CreationDate">
      <summary>Gets the date that the change was pending.</summary>
      <returns>The date that the change was pending.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.DeletionId">
      <summary>Gets the ID of the item to be deleted.</summary>
      <returns>The ID of the item to be deleted.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.DownloadBaseFile">
      <summary>Downloads the content of the version of the file against which the change was pended.</summary>
      <returns>A stream that contains the base file contents</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.DownloadBaseFile(System.String)">
      <summary>Downloads the base version of the file upon which the change was pended.</summary>
      <param name="localFileName">Local file in which to save the downloaded file contents.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.DownloadShelvedFile">
      <summary>Downloads the shelved content for this pending change. Throws if this is not a shelved pending change.</summary>
      <returns>A stream that contains the shelved file contents</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.DownloadShelvedFile(System.String)">
      <summary>Downloads the shelved content for this pending change.</summary>
      <param name="localFileName">Local file in which to save the downloaded file contents.</param>
      <exception cref="T:System.InvalidOperationException"></exception>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.EmptyIEnumerable">
      <summary>Gets an empty IEnumerable of PendingChanges.</summary>
      <returns>An empty IEnumerable of PendingChanges.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.Encoding">
      <summary>Gets the encoding of the file.</summary>
      <returns>The encoding of the file.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.EncodingName">
      <summary>Gets the localized name of the encoding.</summary>
      <returns>The localized name of the encoding.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.FileName">
      <summary>Gets the file name for this pending change from the local path. Gets the file name from the server path if the local path is unavailable.</summary>
      <returns>The file name for this pending change from the local path. If local path is unavailable, this is the file name from the server path.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.GetLocalizedStringForChangeType(Microsoft.TeamFoundation.VersionControl.Client.ChangeType)">
      <summary>Creates a user-readable localized string for the change type.</summary>
      <returns>The localized string. May be an empty string if the input was ChangeType.None.</returns>
      <param name="type">The change type to convert to a localized string.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.GetLocalizedStringForChangeType(Microsoft.TeamFoundation.VersionControl.Client.ChangeType,System.Boolean)">
      <summary>Creates a user-readable localized string for the change type.</summary>
      <returns>The localized string. May be an empty string if the input was ChangeType.None.</returns>
      <param name="type">The change type to convert to a localized string.</param>
      <param name="showLock">True to show the lock change type in a string. False not to show.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.GetLocalizedStringForItemType(Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
      <summary>Gets the localized string for the item type.</summary>
      <returns>The localized string. May be an empty string if the input was ItemType.Any.</returns>
      <param name="type">The item type to convert to a localized string.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.GetLocalizedStringForLockLevel(Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Gets the localized string for the lock level.</summary>
      <returns>The localized string. May be an empty string if the input was LockLevel.None.</returns>
      <param name="lockLevel">The lock level to convert to a localized string.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.HashValue">
      <summary>Gets the MD5 HashValue for the contents of the pending change.</summary>
      <returns>The MD5 HashValue for the contents of the pending change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsAdd">
      <summary>Gets a flag that describes whether this pending change is a pending add.</summary>
      <returns>True if the pending change is a pending add; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsBranch">
      <summary>Gets a flag that describes whether this change is a pending branch.</summary>
      <returns>True if this change is a pending branch; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsCandidate">
      <summary>If false, the change is actually pended otherwise this is a candidate change, which we have detected which the user might decide to accept or discard.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsDelete">
      <summary>Gets a flag that describes whether this pending change is a pending delete.</summary>
      <returns>True if this change is a pending delete; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsEdit">
      <summary>Gets a flag that describes whether this pending change is a pending edit.</summary>
      <returns>True if this pending change is a pending edit; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsEncoding">
      <summary>Gets a flag that describes whether this pending change is a pending file type change.</summary>
      <returns>True if this change is a pending file type change; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsIEnumerableEmpty(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.PendingChange})">
      <summary>Checks to see whether an IEnumberable of PendingChange objects is empty.</summary>
      <returns>True if the IEnumerable is empty. False otherwise.</returns>
      <param name="enumerable">IEnumerable to check.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsImplicit">
      <summary>True if this pending change represents change on the child item caused only by the parent change.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsLocalItemDelete">
      <summary>Gets a flag that describes whether the pending change is deleting a local file or folder.</summary>
      <returns>True if this pending or undone change is deleting a local file or folder; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsLock">
      <summary>Gets a flag that describes whether this pending change has a lock.</summary>
      <returns>True if this pending change has a lock.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsMerge">
      <summary>Gets a flag that describes whether this change is a pending merge.</summary>
      <returns>True if this change is a pending merge; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsRename">
      <summary>Gets a flag that describes whether this pending change is a pending rename.</summary>
      <returns>True if this pending change is a pending rename.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsRollback">
      <summary>Gets a flag that describes whether this change is a pending rollback.</summary>
      <returns>True if this change is a pending rollback; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsSourceRename(Microsoft.TeamFoundation.VersionControl.Client.ChangeType)">
      <summary>Checks whether the specified change type is a source rename and does not contain an add, branch, or rename.</summary>
      <returns>True if the change type is a source rename; otherwise, false.</returns>
      <param name="changeType">The change type to check.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsUndelete">
      <summary>Gets a flag that describes whether this changes is a pending undelete.</summary>
      <returns>True if this change is a pending undelete; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.IsUnshelvedChange">
      <summary>Gets a flag that describes whether this pending change is from unshelving a shelveset.</summary>
      <returns>True if the pending change is from unshelving a shelveset; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ItemId">
      <summary>Gets the Item ID that is used to download file contents.</summary>
      <returns>The Item ID that is used to download file contents.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ItemType">
      <summary>Gets the type of the item to change.</summary>
      <returns>The type of the item to change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.Length">
      <summary>This is the length of the committed content (the version of the file the change is pended against).</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LocalItem">
      <summary>Gets the path of the item on the local file system of the client.</summary>
      <returns>The path of the item on the local file system of the client.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LocalItemComparer">
      <summary>The comparer that compares local items.</summary>
      <returns>The comparer that compares local items.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LocalOrServerFolder">
      <summary>Gets the local folder if it is available. Otherwise, gets the server folder.</summary>
      <returns>The local folder if it is available; otherwise, the server folder.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LocalOrServerItem">
      <summary>Gets the local path if it is available. Otherwise, gets the server path.</summary>
      <returns>The local path if it is available; otherwise, the server path.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LockLevel">
      <summary>Gets the lock level of the item.</summary>
      <returns>The lock level of the item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LockLevelName">
      <summary>Gets the localized name of the lock level.</summary>
      <returns>The localized name of the lock level.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.LockLevelShortName">
      <summary>Gets the localized short name of the lock level.</summary>
      <returns>The localized short name of the lock level.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.MaterializeIEnumerable(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.PendingChange})">
      <summary>Converts an IEnumerable of PendingChange objects to an array of PendingChange objects.</summary>
      <returns>Array of PendingChange objects.</returns>
      <param name="enumerable">PendingChanges to convert to an array.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.MergeSources">
      <summary>Gets the read-only collection of MergeSources that is associated with this pending change.</summary>
      <returns>The read-only collection of MergeSources that is associated with this pending change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.PendingChangeId">
      <summary>Gets the ID that represents a unique value that is attached to the change.</summary>
      <returns>The ID that represents a unique value that is attached to the change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.PropertyValues">
      <summary>The properties for this pending change.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.RestoreCandidateDelete">
      <summary>Restores a candidate delete on disk, if it is a folder, walks children recursively and restores them also.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ServerItem">
      <summary>Gets the server item that is being operated on.</summary>
      <returns>The server item that is being operated on.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ServerItemComparer">
      <summary>The comparer that compares server items.</summary>
      <returns>The comparer that compares server items.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.SourceDeletionId">
      <summary>Gets or sets the deletion ID of the source item.</summary>
      <returns>The deletion ID of the source item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.SourceLocalItem">
      <summary>Gets the source local path or the item to be changed.</summary>
      <returns>The source local path or the item to be changed.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.SourceServerItem">
      <summary>Gets the server path or the item to be changed.</summary>
      <returns>The server path or the item to be changed.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.SourceVersionFrom">
      <summary>Gets or sets the source version from.</summary>
      <returns>The source version from.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ToLocalItems(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
      <summary>Gets an array of local item paths from an array of pending changes.</summary>
      <returns>An array of local item paths.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ToolTipText">
      <summary>Gets the tooltip text for this pending change.</summary>
      <returns>The tooltip text for this pending change.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ToServerItems(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
      <summary>Gets an array of server item paths from an array of pending changes.</summary>
      <returns>An array of server item paths.</returns>
      <param name="pendingChanges">Array of PendingChange objects for which the server paths are desired.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.ToString">
      <summary>Creates a user-readable string that describes a PendingChange object.</summary>
      <returns>A user-readable string that describes a PendingChange object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.Undone">
      <summary>Gets a flag that describes whether this pending change has been undone.</summary>
      <returns>True if the pending change has been undone; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.UploadHashValue">
      <summary>Gets the MD5 HashValue for the file that is currently associated with this pending change.</summary>
      <returns>The MD5 HashValue for the file that is currently associated with this pending change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.Version">
      <summary>Gets the version of the pending change.</summary>
      <returns>The version of the pending change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChange.VersionControlServer">
      <summary>Gets the repository that contains this pending change.</summary>
      <returns>The repository that contains this pending change.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeChangedException">
      <summary>Describes a PendingChangeChangedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeChangedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeChangedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PendingChangeChangedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeChangedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PendingChangeChangedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeContentNotFoundException">
      <summary>Describes a PendingChangeContentNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeContentNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeContentNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PendingChangeContentNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeContentNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PendingChangeContentNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs">
      <summary>Event arguments that describe actions on a pending change.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.Attributes"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.DiskUpdateAttempted">
      <summary>Gets a flag that describes whether an update to disk was tried.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.Flags"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.IsLatest">
      <summary>Gets a flag that describes whether this operation is getting the latest version of the item.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.OperationId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.PendingChange">
      <summary>The pending change that is being operated on.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.Properties">
      <summary>Gets a collection of properties that was associated with this pending change.</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.PropertyValues"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.Status">
      <summary>Gets the status of the operation.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.OperationStatus" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.TargetPendingChangeType">
      <summary>Gets the changetype of the pending change.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.UpdateServer(Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue,System.String)">
      <summary>Updates the server to tell it where pending change's item is currently located. Accepts UpdateLocalVersionQueue to allow for batching of the UpdateLocalVersion calls.</summary>
      <param name="currentLocalPath">current location on disk (null if not on disk)</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.UpdateServer(System.String)">
      <summary>Updates the server on the location of the item of the pending change.</summary>
      <param name="currentLocalPath">Current location on disk (null if not on disk).</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventArgs.Workspace">
      <summary>Gets the workspace that is associated with the pending change.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeEventHandler">
      <summary>Handler for all PendingChange events.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeMergeConflictExistsException">
      <summary>Describes a PendingChangeMergeConflictExistsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeMergeConflictExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeMergeConflictExistsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PendingChangeMergeConflictExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChangeMergeConflictExistsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PendingChangeMergeConflictExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChildException">
      <summary>Describes a PendingChildException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChildException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PendingChildException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingChildException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PendingChildException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingDeleteConflictChangeException">
      <summary>Describes a PendingDeleteConflictChangeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingDeleteConflictChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingDeleteConflictChangeException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PendingDeleteConflictChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingDeleteConflictChangeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PendingDeleteConflictChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingLocalVersionMismatchException">
      <summary>Describes a PendingLocalVersionMismatchException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingLocalVersionMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingLocalVersionMismatchException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PendingLocalVersionMismatchException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingLocalVersionMismatchException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PendingLocalVersionMismatchException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingParentDeleteException">
      <summary>Describes a PendingParentDeleteException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingParentDeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingParentDeleteException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PendingParentDeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingParentDeleteException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PendingParentDeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet">
      <summary>Represents a set of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> objects.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.CandidatePendingChanges"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.Comparer">
      <summary>Gets a comparer for <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> objects.</summary>
      <returns>A comparer for <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> objects.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.Computer">
      <summary>Gets the computer that contains this pending set.</summary>
      <returns>The computer that contains this pending set.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.Name">
      <summary>Gets the name of this pending set.</summary>
      <returns>The name of this pending set.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.OwnerDisplayName">
      <summary>This is the display name of the owner of the pending changes and the containing workspace</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.OwnerName">
      <summary>Gets the owner of the pending set.</summary>
      <returns>The owner of the pending set.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.Ownership">
      <summary>Returns the ownership state for this object with respect to the current caller. This will have a value of Unknown if we are talking to a Dev10 or earlier server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.PendingChanges">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> that is contained by this pending set.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> that is contained by this pending set.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.PendingChangeSignature">
      <summary>For a local workspace, indicates the pending change signature for the pending set.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.ToString">
      <summary>Creates a user-readable string that describes the properties of this PendingSet object.</summary>
      <returns>A user-readable string that describes the properties of this PendingSet object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PendingSet.Type">
      <summary>Gets the type of the pending set.</summary>
      <returns>The type of the pending set.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSetType">
      <summary>Used to distinguish workspaces from pending sets in QueryPendingChanges calls.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PendingSetType.Shelveset">
      <summary>Shelveset type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PendingSetType.Workspace">
      <summary>Workspace type.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange">
      <summary>Represents a permission change.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.#ctor(System.String,System.String,System.String[],System.String[],System.String[])">
      <summary>Initializes a new PermissionChange instance.</summary>
      <param name="item">The item for which to change permissions.</param>
      <param name="identity">The identity for which permissions will be changed.</param>
      <param name="allows">List of permissions to allow.</param>
      <param name="denies">List of permissions to deny.</param>
      <param name="removes">List of permissions to remove.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.AllGlobalLocalizedPermissions">
      <summary>Gets an array of all global localized permissions.</summary>
      <returns>An array of all global localized permissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.AllGlobalPermissions">
      <summary>Gets an array of all global permissions.</summary>
      <returns>An array of all global permissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.AllItemPermissions">
      <summary>Gets an array of all item permissions.</summary>
      <returns>An array of all item permissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.AllLocalizedItemPermissions">
      <summary>Gets an array of all localized item permissions.</summary>
      <returns>An array of all localized item permissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.Allow">
      <summary>Gets or sets the array of allow permissions for the identity.</summary>
      <returns>An array of the allow permissions for the identity.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.Deny">
      <summary>Gets or sets the deny permissions for the identity.</summary>
      <returns>An array of the deny permissions for the identity.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.GlobalPermissionAdminConfiguration"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.GlobalPermissionAdminConnections"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.GlobalPermissionAdminShelvesets"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.GlobalPermissionAdminWorkspaces"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.GlobalPermissionCreateWorkspace"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.IdentityName">
      <summary>Gets or sets the identity that holds the permission.</summary>
      <returns>The identity that holds the permission.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionAdminProjectRights"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionCheckin"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionCheckinOther"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionLabel"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionLabelOther"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionLock"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionManageBranch"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionMerge"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionPendChange"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionRead"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionReviseOther"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionUndoOther"></member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ItemPermissionUnlockOther"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.Remove">
      <summary>Gets or sets the array of permissions to remove.</summary>
      <returns>The array of permissions to remove.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange.ToString">
      <summary>Creates a user-readable string that describes the properties of a PermissionChange object.</summary>
      <returns>A user-readable string that describes the properties of a PermissionChange object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PluginHasMultipleInterfacesException">
      <summary>Describes a PluginHasMultipleInterfacesException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PluginHasMultipleInterfacesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PluginHasMultipleInterfacesException.#ctor(System.String)">
      <summary>Encapsulates a message string into a PluginHasMultipleInterfacesException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PluginHasMultipleInterfacesException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a PluginHasMultipleInterfacesException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase">
      <summary>Base class to inherit for a new check-in policy.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.Activate(Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure)">
      <summary>Called if the user double-clicks on a policy failure.</summary>
      <param name="failure">The policy failure that causes this event.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.CanEdit">
      <summary>Gets a flag that describes whether this policy is configurable.</summary>
      <returns>True if this policy is configurable; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.Description">
      <summary>Gets the description of this policy.</summary>
      <returns>The description of this policy.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.DisplayHelp(Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure)">
      <summary>Displays a Help dialog box that is associated with the policy failure.</summary>
      <param name="failure">The policy failure that causes this event.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.Dispose">
      <summary>Disposes this object.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.Disposed">
      <summary>Returns true if this object has been disposed.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.Edit(Microsoft.TeamFoundation.VersionControl.Client.IPolicyEditArgs)">
      <summary>Shows a configuration dialog box to the user to specify options for the check-in policy.</summary>
      <returns>True if the dialog box opened; otherwise, false.</returns>
      <param name="policyEditArgs">Arguments for the configuration dialog box.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.Evaluate">
      <summary>Performs the policy evaluation.</summary>
      <returns>An array of PolicyFailures that results from the evaluation.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.GetAssemblyName">
      <summary>Only override this for backward compatibility where you want to specify a different assembly name for the checkin policy in order to maintain backward compatibility with a previously released version of the checkin policy.</summary>
      <returns>The assembly name that should be stored in the metadata.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.GetBinaryFormatter">
      <summary>Only override this if you want to create a new BinaryFormatter and hook into the serialization process for backward compatibility (e.g., you want to set the Binder property on the formatter to handle compat for a checkin policy that has been moved to another assembly).</summary>
      <returns>the BinaryFormatter to use for serializing the policy</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.Initialize(Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckin)">
      <summary>Initializes the specified pending check-in.</summary>
      <param name="pendingCheckin">The pending check-in to initialize.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.InstallationInstructions">
      <summary>Gets or sets textual instructions about how the policy can be installed on a computer.</summary>
      <returns>Textual instructions about how the policy can be installed on a computer.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.OnPolicyStateChanged(Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure[])">
      <summary>Fire the event to notify of a change in policy state.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.PendingCheckin">
      <summary>Get an object that represents the pending changes part of the pending checkin.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.IPendingCheckin" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.PolicyStateChanged">
      <summary>Occurs when the state of the policy is changed.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.Type">
      <summary>Gets the name of this policy.</summary>
      <returns>The name of this policy.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyBase.TypeDescription">
      <summary>Gets the description of this kind of policy.</summary>
      <returns>The description of this kind of policy.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyEnvelope">
      <summary>Encapsulates a policy instance together with some other properties.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyEnvelope.#ctor(Microsoft.TeamFoundation.VersionControl.Client.IPolicyDefinition,Microsoft.TeamFoundation.VersionControl.Client.PolicyType)">
      <summary>Creates a new policy envelope for the specified policy.</summary>
      <param name="policy">The policy for which to create the envelope.</param>
      <param name="policyType">The policy type of <paramref name="policy" />.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyEnvelope.Enabled">
      <summary>Gets or sets a flag that describes whether this policy may be evaluated.</summary>
      <returns>True if the policy may be evaluated; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyEnvelope.Equals(System.Object)">
      <summary>Compares this PolicyEnvelope with another for equality.</summary>
      <returns>True if the two objects are equivalent; otherwise, false.</returns>
      <param name="obj">Object to compare to.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyEnvelope.GetHashCode">
      <summary>Gets the hash code for this object.</summary>
      <returns>The hash code for this object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyEnvelope.Policy">
      <summary>Gets or sets the policy that is contained in this envelope.</summary>
      <returns>The policy that is contained in this envelope.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyEnvelope.Type">
      <summary>Gets the policy type of the policy that is stored in this envelope.</summary>
      <returns>The policy type of the policy that is stored in this envelope.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyEvaluationState">
      <summary>Possible states for policy evaluation.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PolicyEvaluationState.PoliciesLoadError">
      <summary>The list of policies failed to load.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PolicyEvaluationState.Unevaluated">
      <summary>The policies have not been loaded or evaluated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.PolicyEvaluationState.Evaluated">
      <summary>The policies have been evaluated.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure">
      <summary>Describes a failure in policy evaluation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure.#ctor(System.String)">
      <summary>Initialize the policy failure when a policy did not load. This is only used internally.</summary>
      <param name="message">Message to be displayed for the failure.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.IPolicyEvaluation)">
      <summary>Initializes a new PolicyFailure instance.</summary>
      <param name="message">The message that will be displayed for the failure.</param>
      <param name="policy">The policy that generated this failure.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure.Activate">
      <summary>Shows the dialog box that provides details about the policy failure.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure.DisplayHelp">
      <summary>Shows the Help dialog box to explain the policy failure and what steps to take to resolve it.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure.Message">
      <summary>Gets a description of the policy failure.</summary>
      <returns>A description of the policy failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure.Policy">
      <summary>Gets the policy with which this failure is associated.</summary>
      <returns>The policy with which this failure is associated.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailureInfo">
      <summary>Contains information about a policy failure.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailureInfo.Message">
      <summary>Gets a message that describes the policy failure.</summary>
      <returns>A message that describes the policy failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailureInfo.PolicyName">
      <summary>Gets the name of the policy that failed.</summary>
      <returns>The name of the policy that failed.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyFailureInfo.ToString">
      <summary>Creates a user-readable string that describes the properties of this PolicyFailureInfo class.</summary>
      <returns>A user-readable string that describes the properties of this PolicyFailureInfo class.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyList">
      <summary>Manages a list of loaded policies for a set of pending changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer)">
      <summary>Initializes the policy list so that it can access the policy information on the server.</summary>
      <param name="sourceControl">The repository with which to synchronize.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.Dispose">
      <summary>Clean up the object when it is no longer required.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.Evaluate">
      <summary>Evaluates the policies for the current list of pending changes.</summary>
      <returns>The array of failures that occurred during evaluation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.EvaluationState">
      <summary>Gets the overall state of the policy list.</summary>
      <returns>The overall state of the policy list.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.Failures">
      <summary>Gets the array of current policy failures.</summary>
      <returns>The array of current policy failures.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.LoadPolicies">
      <summary>Loads the currently applicable policies.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.PendingCheckin">
      <summary>Sets the pending check-in object with which this policy list is associated.</summary>
      <returns>The pending check-in object with which this policy list is associated.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.PolicyCount">
      <summary>Gets the number of policies in this list.</summary>
      <returns>The number of policies in this list.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.PolicyEvaluationStateChanged">
      <summary>An event that occurs when the policy failure list is updated asynchronously. It does not occur when the Evaluate method is called.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.PolicyStateChanged">
      <summary>An event that occurs when the policy failure list is updated asynchronously. It does not occur when the Evaluate method is called.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyList.ReloadAndEvaluate">
      <summary>Reloads the policies and evaluates the policies for the current list of pending changes.</summary>
      <returns>The array of failures that occurred during evaluation.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo">
      <summary>Contains information about an override of policy failures.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure[])">
      <summary>Initializes a new PolicyOverrideInfo instance.</summary>
      <param name="overrideComment">A comment about the override.</param>
      <param name="policyFailures">The array of failures to override.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo.Comment">
      <summary>Gets a comment about the policy override.</summary>
      <returns>A comment about the policy override.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo.PolicyFailures">
      <summary>Gets an array of policy failures to override.</summary>
      <returns>An array of policy failures to override.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo.ToString">
      <summary>Creates a user-readable string that describes the properties of a PolicyOverrideInfo object.</summary>
      <returns>A user-readable string that describes the properties of a PolicyOverrideInfo object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyStateChangedEventArgs">
      <summary>The policy and list of failures that are associated with a PolicyStateChanged event.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyStateChangedEventArgs.#ctor(Microsoft.TeamFoundation.VersionControl.Client.PolicyFailure[],Microsoft.TeamFoundation.VersionControl.Client.IPolicyEvaluation)">
      <summary>Initializes the event arguments.</summary>
      <param name="failures">The array of failures that resulted from evaluation of the policy.</param>
      <param name="policy">The policy that was evaluated.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyStateChangedEventArgs.Failures">
      <summary>Gets the array of failures that resulted from the policy evaluation.</summary>
      <returns>The array of failures that resulted from the policy evaluation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyStateChangedEventArgs.Policy">
      <summary>Gets the policy that was evaluated, which results in the associated array of failures.</summary>
      <returns>The policy that was evaluated, which results in the associated array of failures.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyStateChangedHandler">
      <summary>The event handler for asynchronous changes in policy state.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyType">
      <summary>A class that represents a type of policy and allows new instances to be created.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyType.Description">
      <summary>Gets a description of this policy type.</summary>
      <returns>A description of this policy type.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PolicyType.Name">
      <summary>Gets the name of the policy type.</summary>
      <returns>The name of the policy type.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PolicyType.New">
      <summary>Creates a new policy instance of this type.</summary>
      <returns>The new policy instance of this type.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ProcessingChangeEventArgs">
      <summary>Event arguments describing the change being processed.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ProcessingChangeEventArgs.PendingChange">
      <summary>The pending change being processed.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ProcessingChangeEventArgs.Workspace">
      <summary>The workspace where the event occurred.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ProcessingChangeEventHandler">
      <summary>Handler for processing change events (CheckIn() and Shelve()).</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.PropertiesMergeSummary"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.PropertiesMergeSummary.CalculateSummary(System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.TeamFoundation.Framework.Client.PropertyValue},System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.TeamFoundation.Framework.Client.PropertyValue},System.Collections.ObjectModel.ReadOnlyCollection{Microsoft.TeamFoundation.Framework.Client.PropertyValue})">
      <summary>Calculates the merge summary based on the provided properties.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PropertiesMergeSummary.IsRedundant">
      <summary>True if your properties are equal to their properties.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PropertiesMergeSummary.MergedProperties">
      <summary>Null if there were conflicts</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PropertiesMergeSummary.TotalConflicts">
      <summary>Total number of conflicts.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PropertiesMergeSummary.TotalTheirChanges">
      <summary>Total changes in their properties when they are compared to base.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.PropertiesMergeSummary.TotalYourChanges">
      <summary>Total changes in your properties when they are compared to base.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo">
      <summary>Information about a proxy server connection.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.#ctor(System.String,System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Common.ProxyFlags)">
      <summary>Initializes a new ProxyInfo instance.</summary>
      <param name="url">The URL of this proxy server.</param>
      <param name="friendlyName">The display name of this server (may be blank).</param>
      <param name="site">The site of this proxy server (may be blank).</param>
      <param name="description">A description of this proxy server.</param>
      <param name="flags">The flags for this proxy.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.Description">
      <summary>Gets a description of the proxy connection.</summary>
      <returns>A description of the proxy connection.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.Equals(System.Object)">
      <summary>Determines whether the specified ProxyInfo is equal to this instance.</summary>
      <returns>True if the objects are equal; otherwise, false.</returns>
      <param name="obj">The object against which to compare.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.Flags">
      <summary>Gets the flags for this proxy server record.</summary>
      <returns>The flags for this proxy server record.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.FriendlyName">
      <summary>Gets the name of the server.</summary>
      <returns>The name of the server.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.GetHashCode">
      <summary>Gets the hash code for this object.</summary>
      <returns>The hash code for this object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.Site">
      <summary>Gets the site of the server.</summary>
      <returns>The site of the server.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.ToString">
      <summary>Creates a user-readable string that describes a proxy server connection.</summary>
      <returns>A user-readable string that describes a proxy server connection.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo.Url">
      <summary>Gets the URL of the server.</summary>
      <returns>The URL of the server.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters">
      <summary>Represents all the parameters that are required to call the QueryHistory method on the VersionControlServer object.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.#ctor(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec)">
      <summary>Creates a new QueryHistoryParameters object.</summary>
      <param name="itemSpec">An ItemSpec describing the item whose history is to be retrieved, its deletion id, and the recursion type at which the query should be performed.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Creates a new QueryHistoryParameters object.</summary>
      <param name="item">The item whose history is to be retrieved. The last path part may include the ? and * wildcard characters, that is $/Abc/def/*.cs. The item may be a server or a local path.</param>
      <param name="recursion">The recursion type to apply to the provided path. When querying the history of files, it is common to provide RecursionType.None. When querying the history of a folder, it is common to provide RecursionType.Full.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.Author">
      <summary>This property defaults to null. Set this property to restrict the history query to the set of changesets authored by a particular identity. For TFS 2010 servers and earlier, this property must be in the form "DOMAIN\user". Later servers accept identities in this format, and also display names ("Maggie Carrido").</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.BatchSize">
      <summary>The batch size for the QueryHistory paging mechanism. The default value for this property is 256.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.DeletionId">
      <summary>If the path provided in the Item property is deleted, the deletion ID of the particular item referred to by the Item property may be provided here. Defaults to zero; supplying another value for this property is not common, and is only necessary when you use TFS 2005 or 2008.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.IncludeChanges">
      <summary>Set this property to true if you need for the returned Changeset objects to contain actual Change objects (the manifest of the changeset). By default, this property is false, and the Changeset objects returned will contain only the changeset metadata. Note that even when this property is set to true, the set of returned Change objects is scoped to the Item/RecursionType pair used to perform the query.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.IncludeDownloadInfo">
      <summary>This property applies only when IncludeChanges is set to true. Set this property to true to have the server generate download URLs and include them with the Change objects returned in each Changeset. This allows the client to download the file content associated with a particular Change object by using one round-trip to the server instead of two. Setting this property to true increases the computation time on the server for the QueryHistory call, and also the size of the result set on the wire. For performance reasons, you should enable this flag only if you intend to download the content the returned Change objects.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.Item">
      <summary>The item whose history is to be retrieved. The last path part may include the ? and * wildcard characters, that is $/Abc/def/*.cs. The item may be a server or a local path.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.ItemVersion">
      <summary>A VersionSpec describing the point in time at which the path provided in the Item property should be resolved. Defaults to VersionSpec.Latest; supplying another value for this property is not common.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.MaxResults">
      <summary>Set this property to limit the number of results returned by the QueryHistory call. By default, this property is set to Int32.MaxValue. QueryHistory pages results back from the server on demand. Therefore, limiting your own consumption of the IEnumerable is almost as effective from a performance perspective.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.RecursionType">
      <summary>The recursion type to apply to the Item property when you perform the history query.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.RecursionType" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.SlotMode">
      <summary>If this property is false, then the (Item, ItemVersion, DeletionId) tuple is resolved to an item ID and the history is performed on that item ID, tracking across renames. If this property is true, then the tuple is not resolved. Instead, all changesets which have an item with the name Item (or underneath it, if the query is recursive), are returned. That is, the query is on a particular "namespace slot" (slot mode) instead of on a particular item. This property defaults to true.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.SortAscending">
      <summary>By default, the results from a QueryHistory call are from VersionEnd to VersionStart (reverse order). If you want the results to be returned in ascending order instead (from VersionStart to VersionEnd), set this flag to true. This flag requires a TFS 2010 or a later version server to have any effect.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.VersionEnd">
      <summary>Set this property to restrict the history query along the time axis. This property defaults to null, to indicate that the range of the history query starts with the latest changeset in the repository.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters.VersionStart">
      <summary>Set this property to restrict the history query along the time axis. This property defaults to null, to indicate that the range of the history query goes all the way back to when the repository was created.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ReconcileFailedException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ReconcileFailedException.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Failure[])"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ReconcileFailedException.Failures">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Failure" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RecursionType">
      <summary>Describes the type of the recursion.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.Full">
      <summary>Recurse to the last child.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.None">
      <summary>No recursion.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.OneLevel">
      <summary>Recurse one level only.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RenameWorkingFolderException">
      <summary>Describes a RenameWorkingFolderException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RenameWorkingFolderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RenameWorkingFolderException.#ctor(System.String)">
      <summary>Encapsulates a message string into a RenameWorkingFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RenameWorkingFolderException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a RenameWorkingFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RepositoryNotFoundException">
      <summary>Exception that is thrown when a repository at the specified URL was not found or could not be accessed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryNotFoundException.#ctor">
      <summary>Initializes a new RepositoryNotFoundException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new RepositoryNotFoundException instance.</summary>
      <param name="repositoryUrl">The URL of the repository.</param>
      <param name="innerException">The exception that caused this error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryNotFoundException.#ctor(System.String,System.String)">
      <summary>Initializes a new RepositoryNotFoundException instance.</summary>
      <param name="repositoryUrl">The URL of the repository.</param>
      <param name="info">A description of the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryNotFoundException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new RepositoryNotFoundException instance.</summary>
      <param name="repositoryUrl">The URL of the repository.</param>
      <param name="info">A description of the exception.</param>
      <param name="innerException">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RepositoryPathTooLongException">
      <summary>Describes a RepositoryPathTooLongException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryPathTooLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryPathTooLongException.#ctor(System.String)">
      <summary>Encapsulates a message string into a RepositoryPathTooLongException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryPathTooLongException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a RepositoryPathTooLongException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties">
      <summary>Describes the global properties of this repository.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.DownloadKey">
      <summary>Download key for this repository</summary>
      <returns>Returns <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.FromXml(System.IServiceProvider,System.Xml.XmlReader)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.Id">
      <summary>Unique identifer for this repository.</summary>
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.LatestChangesetId">
      <summary>The ID of the most recently committed changeset.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.Name">
      <summary>Name describing this repository.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.SupportedFeatures">
      <summary>The features supported by the server. Can be evaluated by doing a bitwise or against the SupportedFeatures enum</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.ToXml(System.Xml.XmlWriter,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.ToXml(System.Xml.XmlWriter,System.String,Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.RepositoryProperties.Version">
      <summary>This is the version of the mid/data tier system. For the system to start and run correctly both the mid and data tiers must have the same version information.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RequestType">
      <summary>Describes the type of the request.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Add">
      <summary>Add request type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Branch">
      <summary>Branch request type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Delete">
      <summary>Delete request type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Edit">
      <summary>Edit request type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Encoding">
      <summary>Encoding request type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Lock">
      <summary>Lock request type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.None">
      <summary>No request.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Property">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Rename">
      <summary>Rename request type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.RequestType.Undelete">
      <summary>Undelete request type.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ReservedAnnotationException">
      <summary>Describes a ReservedAnnotationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ReservedAnnotationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ReservedAnnotationException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ReservedAnnotationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ReservedAnnotationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ReservedAnnotationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Resolution">
      <summary>Describes the resolution of a conflict.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Resolution.AcceptMerge">
      <summary>Accept merge.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Resolution.AcceptTheirs">
      <summary>Accept their merge.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Resolution.AcceptYours">
      <summary>Accept your merge.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Resolution.AcceptYoursRenameTheirs">
      <summary>Accept your merge, rename their merge.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Resolution.DeleteConflict">
      <summary>Delete the conflict.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Resolution.None">
      <summary>No resolution.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.Resolution.OverwriteLocal">
      <summary>Overwrite the local copy.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions">
      <summary>Options to control how the conflict is resolved.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.AcceptMergeEncoding">
      <summary>Gets or sets the encoding to use to resolve a conflicting pending encoding change.</summary>
      <returns>The encoding to use to resolve a conflicting pending encoding change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.AcceptMergeProperties">
      <summary>When a conflict is to be resolved with the AcceptMerge resolution and there is a conflicting pending property change, this property contains the desired properties. If this propert is left as null, the conflict will not be resolved.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.AcceptMergeWithConflicts">
      <summary>Gets or sets a flag that describes whether to accept a merge regardless of content conflicts.</summary>
      <returns>True to prevent content conflicts from blocking an AcceptMerge resolution. False to stop a merge because of conflicts.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.Encoding">
      <summary>Gets or sets the encoding to use for override or conversion.</summary>
      <returns>The encoding to use for override or conversion.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.IsConvertToEncoding">
      <summary>Gets or sets a flag that describes whether the encoding of the file should be converted to that specified by the Encoding property.</summary>
      <returns>True to convert the encoding of the file to that specified in the Encoding property; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.IsEncodingOverride">
      <summary>Gets or sets a flag that describes whether the encoding of the file should be overridden by that specified in the Encoding property.</summary>
      <returns>True to override the encoding of the file by that specified in the Encoding property; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.NewPath">
      <summary>Gets or sets the location of the item that was moved to resolve a conflict.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolutionOptions.UseInternalEngine">
      <summary>Gets or sets a flag that describes whether to use the built-in merge engine instead of a registered application that Microsoft did not design.</summary>
      <returns>True to use the built-in merge engine; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ResolvedConflictEventArgs">
      <summary>Event arguments describing a resolved conflict.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolvedConflictEventArgs.Conflict">
      <summary>The conflict that was resolved.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Conflict" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolvedConflictEventArgs.Flags"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolvedConflictEventArgs.OperationId"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ResolvedConflictEventArgs.Workspace">
      <summary>The workspace containing the resolved conflict.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ResolvedConflictEventHandler">
      <summary>Handler for all resolved conflict events.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ResourceAccessException">
      <summary>Exception that is thrown when an access check fails.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ResourceAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ResourceAccessException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ResourceAccessException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ResourceAccessException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ResourceAccessException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ResourceAccessException.#ctor(System.String,System.String)">
      <summary>Initializes a new ResourceAccessException instance.</summary>
      <param name="identityName">The user identity that failed the access check.</param>
      <param name="permissionName">The permission that failed the access check.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ResourceAccessException.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new ResourceAccessException instance.</summary>
      <param name="identityName">The user identity that failed the access check.</param>
      <param name="permissionName">The permission that failed the access check.</param>
      <param name="resourceName">The resource that the user identity tried to access.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RollbackInvalidOptionException">
      <summary>Describes a RollbackInvalidOptionException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RollbackInvalidOptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RollbackInvalidOptionException.#ctor(System.String)">
      <summary>Encapsulates a message string into a RollbackInvalidOptionException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RollbackInvalidOptionException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a RollbackInvalidOptionException.</summary>
      <param name="message">A message dthat describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RollbackInvalidVersionSpecException">
      <summary>Describes a RollbackInvalidVersionSpecException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RollbackInvalidVersionSpecException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RollbackInvalidVersionSpecException.#ctor(System.String)">
      <summary>Encapsulates a message string into a RollbackInvalidVersionSpecException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RollbackInvalidVersionSpecException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a RollbackInvalidVersionSpecException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.RootInheritanceException">
      <summary>Describes a RootInheritanceException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RootInheritanceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RootInheritanceException.#ctor(System.String)">
      <summary>Encapsulates a message string into a RootInheritanceException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.RootInheritanceException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a RootInheritanceException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin">
      <summary>Represents a saved check-in try.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.#ctor(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo[],System.String)">
      <summary>Initializes a new SavedCheckin instance.</summary>
      <param name="changes">The set of pending changes for the tried check-in.</param>
      <param name="comment">A comment on the tried check-in.</param>
      <param name="checkinNotes">Check-in notes about the tried check-in.</param>
      <param name="workItemCheckedInfo">The checked-in work items that are associated with the tried check-in.</param>
      <param name="policyOverrideComment">Policy override comment (if it is specified) of the tried check-in.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.#ctor(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[],System.String)">
      <summary>Initializes a new SavedCheckin instance.</summary>
      <param name="changes">The set of pending changes for the tried check-in.</param>
      <param name="comment">A comment on the tried check-in.</param>
      <param name="checkinNotes">Check-in notes about the tried check-in.</param>
      <param name="workItemCheckinInfo">The work items that are associated with the tried check-in.</param>
      <param name="policyOverrideComment">Policy override comment (if it is specified) of the tried check-in.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.#ctor(System.String,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo[],System.String)">
      <summary>Construct checkin information from an tried checkin</summary>
      <param name="comment">Checkin comments for the tried checkin</param>
      <param name="excludedChanges">Pending changes to be excluded</param>
      <param name="checkinNotes">Any checkin notes specified in the tried checkin</param>
      <param name="policyOverrideComment">Policy override comment (if it is specified) in the tried checkin</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.CheckinNotes">
      <summary>Gets the CheckinNotes of this SavedCheckin.</summary>
      <returns>The CheckinNotes of this SavedCheckin.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.Comment">
      <summary>Gets the comment on this SavedCheckin.</summary>
      <returns>The comment on this SavedCheckin.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.Count">
      <summary>Gets the number of check-in items in this SavedCheckin.</summary>
      <returns>The number of check-in items in this SavedCheckin.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.HasMatchingCheckinItem(Microsoft.TeamFoundation.VersionControl.Client.PendingChange)">
      <summary>Checks whether the specified pending change is in this tried check-in.</summary>
      <returns>True if an item in this tried check-in matches the pending change; otherwise, false.</returns>
      <param name="pc">The pending change to search for.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.IsExcluded(System.String)">
      <summary>Returns true if there if the item is excluded in this checkin.</summary>
      <param name="targetServerItem">The target item to check.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.PolicyOverrideComment">
      <summary>Gets the comment on this SavedCheckin policy override.</summary>
      <returns>The comment on this SavedCheckin policy override.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.UpdateCheckinItems(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
      <summary>Updates the items that are associated with the specified pending changes and states.</summary>
      <param name="checkedPendingChanges">The array of checked pending changes to merge with the overall set of checked items.</param>
      <param name="uncheckedPendingChanges">The array of unchecked pending changes to remove from the overall set of checked items.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SavedCheckin.WorkItemsCheckedInfo">
      <summary>Gets the array of work item check-in information.</summary>
      <returns>The array of work item check-in information.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.SecurityChange">
      <summary>Describes the properties of a SecurityChange class that are relevant to the repository.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SecurityChange.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SecurityChange.Item">
      <summary>Gets or sets the path of the item that belongs to this SecurityChange.</summary>
      <returns>The path of the item that belongs to this SecurityChange.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.SecurityChange.m_item"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SecurityChange.ToString">
      <summary>Creates a user-readable string that describes this SecurityChange instance.</summary>
      <returns>A user-readable string that describes this SecurityChange instance.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.SecurityConfigurationException">
      <summary>Describes a SecurityConfigurationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SecurityConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SecurityConfigurationException.#ctor(System.String)">
      <summary>Encapsulates a message string into a SecurityConfigurationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SecurityConfigurationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a SecurityConfigurationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.SecurityException">
      <summary>Describes a SecurityException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SecurityException.#ctor(System.String)">
      <summary>Encapsulates a message string into a SecurityException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.SecurityException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a SecurityException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ServerItemException">
      <summary>Describes a ServerItemException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ServerItemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ServerItemException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ServerItemException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ServerItemException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ServerItemException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ServerItemRequiredException">
      <summary>Describes a ServerItemRequiredException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ServerItemRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ServerItemRequiredException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ServerItemRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ServerItemRequiredException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ServerItemRequiredException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ServerSettings"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ServerSettings.#ctor(Microsoft.TeamFoundation.VersionControl.Common.WorkspaceLocation)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ServerSettings.AllowAsynchronousCheckoutInServerWorkspaces">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ServerSettings.DefaultWorkspaceLocation">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Common.WorkspaceLocation" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ServerSettings.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.SetWorkspaceLocationProgressEventArgs">
      <summary>Event arguments describing the state of the workspace conversion (server to local, or local to server).</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SetWorkspaceLocationProgressEventArgs.Cancelable">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SetWorkspaceLocationProgressEventArgs.FileName">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SetWorkspaceLocationProgressEventArgs.ProgressIncrement">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SetWorkspaceLocationProgressEventArgs.ProgressTotal">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SetWorkspaceLocationProgressEventArgs.StatusMessage">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.SetWorkspaceLocationProgressEventArgs.Workspace">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.SetWorkspaceLocationProgressEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.SeverityType">
      <summary>Describes the severity of a notification.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.SeverityType.Error">
      <summary>Notification is an error.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.SeverityType.Warning">
      <summary>Notification is a warning.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvedChangeNotFoundException">
      <summary>Describes a ShelvedChangeNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvedChangeNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvedChangeNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ShelvedChangeNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvedChangeNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ShelvedChangeNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelveException">
      <summary>Exception to indicate that problems occurred that prevented a shelveset from being committed to the server.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelveException.#ctor">
      <summary>Initializes a new ShelveException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelveException.#ctor(System.Exception)">
      <summary>Initializes a new ShelveException instance.</summary>
      <param name="innerException">The exception that caused this error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelveException.#ctor(System.String)">
      <summary>Initializes a new ShelveException instance.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelveException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new ShelveException instance.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="exception">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelveMergeConflictExistsException">
      <summary>Describes a ShelveMergeConflictExistsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelveMergeConflictExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelveMergeConflictExistsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ShelveMergeConflictExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelveMergeConflictExistsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ShelveMergeConflictExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset">
      <summary>A server-side collection of pending changes and associated metadata.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String)">
      <summary>Initializes a new Shelveset instance.</summary>
      <param name="sourceControl">The repository to contain this shelveset.</param>
      <param name="name">Name of the shelveset.</param>
      <param name="owner">Owner of the shelveset.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Framework.Client.PropertyValue})">
      <summary>Create a Shelveset object for shelving changes.</summary>
      <param name="sourceControl">source control object that represents the repository on which the shelveset will be created</param>
      <param name="name">name of the shelveset</param>
      <param name="owner">owner of the shelveset</param>
      <param name="properties">custom properties to be associated with the shelveset.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.ArtifactUri">
      <summary>Artifact Uri</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.AssociatedWorkItems">
      <summary>Returns a limited set of information about the associated work items with this changeset. This property does not spin up a WorkItemStore. Therefore, it is very quick.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.BriefWorkItemInfo">
      <summary>Brief work item information including only the Ids and the actions on each included with the shelveset. Unlike WorkItemInfo, this property does not access the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.ChangesExcluded">
      <summary>Gets or sets a flag that describes whether some changes were excluded from this shelveset.</summary>
      <returns>True if some changes were excluded from this shelveset; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.CheckinNote">
      <summary>Gets or sets the check-in note that is associated with this shelveset.</summary>
      <returns>The check-in note that is associated with this shelveset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.Comment">
      <summary>Gets or sets the comment that describes the shelveset.</summary>
      <returns>The comment that describes the shelveset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.CreationDate">
      <summary>Gets or sets the date and time that the shelveset was shelved.</summary>
      <returns>The date and time that the shelveset was shelved.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.DisplayName">
      <summary>Gets the formatted name of the shelveset.</summary>
      <returns>The formatted name of the shelveset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.Name">
      <summary>Gets or sets the shelveset name.</summary>
      <returns>The shelveset name.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.NameComparer">
      <summary>Gets the comparer for names.</summary>
      <returns>The comparer for names.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.OwnerDisplayName">
      <summary>This is the owner of the shelveset in the display format.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.OwnerName">
      <summary>Gets or sets the owner name.</summary>
      <returns>The owner name.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.PolicyOverrideComment">
      <summary>Gets or sets a user-supplied comment that describes why the policy failed.</summary>
      <returns>A user-supplied comment that describes why the policy failed.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.Properties">
      <summary>Returns a read-only collection of properties associated with the shelveset.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.QualifiedName">
      <summary>This is the formatted unique name of the shelveset.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.RemoveProperty(System.String)">
      <summary>Removes the property from the Properties bag.</summary>
      <param name="propertyName">The property to remove.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.SetProperty(Microsoft.TeamFoundation.Framework.Client.PropertyValue)">
      <summary>Adds or updates the property value in the Properties bag.</summary>
      <param name="propertyValue">The new property</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.ToString">
      <summary>Creates a user-readable string that describes properties in this shelveset.</summary>
      <returns>A user-readable string that describes properties in this shelveset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.VersionControlServer">
      <summary>Gets the repository that contains this shelveset.</summary>
      <returns>The repository that contains this shelveset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Shelveset.WorkItemInfo">
      <summary>Gets or sets an array of the work items that are associated with the shelveset and their check-in behavior.</summary>
      <returns>An array of the work items that are associated with the shelveset and their check-in behavior.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetCheckInParameters">
      <summary>Represents the information that is required to check in a shelveset.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetCheckInParameters.#ctor(System.String,System.String)">
      <summary>Initializes a new ShelvesetCheckInParameters instance.</summary>
      <param name="shelvesetName">The name of the shelveset.</param>
      <param name="shelvesetOwnerName">The name of the shelveset owner.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetCheckInParameters.DeleteShelveset">
      <summary>Gets or sets a flag to delete the shelveset after checking it in.</summary>
      <returns>True to delete the shelveset after checking it in; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetCheckInParameters.Name">
      <summary>Gets or sets the name of the shelveset to check in.</summary>
      <returns>The name of the shelveset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetCheckInParameters.OwnerName">
      <summary>Gets or sets the owner of the shelveset to check in.</summary>
      <returns>The name of the shelveset owner.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetExistsException">
      <summary>Describes a ShelvesetExistsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetExistsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ShelvesetExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetExistsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ShelvesetExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetNotFoundException">
      <summary>Describes a ShelvesetNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ShelvesetNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ShelvesetNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetUpdatedEventArgs">
      <summary>Event arguments for the update of a shelveset.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetUpdatedEventArgs.RemovedProperties">
      <returns>Returns <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetUpdatedEventArgs.Shelveset">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetUpdatedEventHandler">
      <summary>Handler for the update of a shelveset.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions">
      <summary>Options for how to perform the shelving operation.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions.None">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions.Move">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions.Replace">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvingPartialRenameConflictException">
      <summary>Describes a ShelvingPartialRenameConflictException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvingPartialRenameConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvingPartialRenameConflictException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ShelvingPartialRenameConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ShelvingPartialRenameConflictException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ShelvingPartialRenameConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TargetCloakedException">
      <summary>Describes a TargetCloakedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetCloakedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetCloakedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a TargetCloakedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetCloakedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a TargetCloakedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TargetHasPendingChangeException">
      <summary>Describes a TargetHasPendingChangeException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetHasPendingChangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetHasPendingChangeException.#ctor(System.String)">
      <summary>Encapsulates a message string into a TargetHasPendingChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetHasPendingChangeException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a TargetHasPendingChangeException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TargetIsChildException">
      <summary>Describes a TargetIsChildException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetIsChildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetIsChildException.#ctor(System.String)">
      <summary>Encapsulates a message string into a TargetIsChildException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TargetIsChildException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a TargetIsChildException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject">
      <summary>Represents a team project with respect to Version Control functionalities.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.ArtifactUri">
      <summary>Gets the artifact uniform resource identifier (URI) for this team project.</summary>
      <returns>The artifact URI for this team project.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.Equals(System.Object)">
      <summary>Checks whether this TeamProject instance is equal to another object.</summary>
      <returns>Returns true if the two projects are the same; otherwise, false.</returns>
      <param name="obj">The team project with which to compare.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.ExclusiveCheckout">
      <summary>Gets or sets a flag that describes whether files modified in this team project will be exclusively locked.</summary>
      <returns>True if any item in this team project is locked for every pending change.  False if a pending change does not affect the lock status of items.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.GetCheckinNoteFields">
      <summary>Gets the field definitions that are associated with this project.</summary>
      <returns>The CheckinNoteFieldDefinition objects that define these fields.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.GetCheckinPolicies">
      <summary>Gets the array of check-in policies for this project.</summary>
      <returns>The array of check-in policies.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.GetHashCode">
      <summary>Gets the hash code for this TeamProject instance.</summary>
      <returns>The hash code.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.GetLatestOnCheckout">
      <summary>Gets or sets a flag that describes whether to get the latest version of a file on checkout.</summary>
      <returns>True to get the latest version of a file on checkout; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.Name">
      <summary>Gets the name of this team project.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.ServerItem">
      <summary>Gets the server path of this project in the repository.</summary>
      <returns>The server path of this project in the repository.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.SetCheckinNoteFields(Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition[])">
      <summary>Creates a new set of field definitions that is associated with this project.</summary>
      <param name="checkinNoteFields">An array of check-in note field definitions. Specify null or an empty array to clear the policies for this project.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.SetCheckinPolicies(Microsoft.TeamFoundation.VersionControl.Client.PolicyEnvelope[])">
      <summary>Sets the check-in policies for this project.</summary>
      <param name="policies">The check-in policies to set. Specify null or an empty array to clear the policies for this project.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.TeamFoundationServer">
      <summary>Gets the server that is running Team Foundation Server where this team project resides.</summary>
      <returns>The server that is running Team Foundation Server where this team project resides.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.TeamProjectCollection">
      <summary>Gets the TfsTeamProjectCollection where this team project resides.</summary>
      <returns>The TfsTeamProjectCollection where this team project resides.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProject.VersionControlServer">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer" /> that contains this team project.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer" /> that contains this team project.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectCannotDeleteException">
      <summary>Describes a TeamProjectCannotDeleteException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectCannotDeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectCannotDeleteException.#ctor(System.String)">
      <summary>Encapsulates a message string into a TeamProjectCannotDeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectCannotDeleteException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a TeamProjectCannotDeleteException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderCreatedEventArgs">
      <summary>Event arguments for creation of a team project folder</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderCreatedEventArgs.#ctor(Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderCreatedEventArgs.Options">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderCreatedEventHandler">
      <summary>Handler for creation of a team project folder.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions">
      <summary>Represents options for a team project folder.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.#ctor(System.String)">
      <summary>Initializes a new TeamProjectFolderOptions instance.</summary>
      <param name="teamProject">The path of a team project folder.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.#ctor(System.String,System.String)">
      <summary>Initializes a new TeamProjectFolderOptions instance.</summary>
      <param name="teamProject">The path of a team project folder.</param>
      <param name="sourceProject">The source project.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.#ctor(System.String,System.String,System.String,System.Boolean,Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderPermission[],Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition[])">
      <summary>Initializes a new TeamProjectFolderOptions instance.</summary>
      <param name="teamProject">The path of a team project folder.</param>
      <param name="sourceProject">The source project.</param>
      <param name="comment">A comment about this folder.</param>
      <param name="exclusiveCheckout">True to lock the file on checkout; otherwise, false.</param>
      <param name="permissions">An array of folder permissions.</param>
      <param name="checkinNoteDefinition">An array of check-in note definitions.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.#ctor(System.String,System.String,System.String,System.Boolean,Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderPermission[],Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition[],System.Boolean)">
      <summary>Initializes a new TeamProjectFolderOptions instance.</summary>
      <param name="teamProject">The path to a team project folder.</param>
      <param name="sourceProject">The source project.</param>
      <param name="comment">A comment about this folder.</param>
      <param name="exclusiveCheckout">True to lock the file on checkout; otherwise, false.</param>
      <param name="permissions">An array of folder permissions.</param>
      <param name="checkinNoteDefinition">An array of check-in note definitions.</param>
      <param name="getLatestOnCheckout">True to get the latest version of a file on checkout.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.CheckinNoteDefinition">
      <summary>Gets the check-in note definition for this project folder.</summary>
      <returns>The check-in note definition for this project folder.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.Comment">
      <summary>Gets a comment that describes this project folder.</summary>
      <returns>A comment that describes this project folder.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.ExclusiveCheckout">
      <summary>Gets a flag that describes whether this project folder has exclusive checkout.</summary>
      <returns>True if this project folder has exclusive checkout.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.GetLatestOnCheckout">
      <summary>Gets a flag that describes whether to get the latest version of this folder on checkout.</summary>
      <returns>True to get the latest version of this folder on checkout; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.Permissions">
      <summary>Gets the permissions on this project folder.</summary>
      <returns>The permissions on this project folder.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.SourceProject">
      <summary>Gets the source project.</summary>
      <returns>The source project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.TeamProject">
      <summary>Gets the path of this team project.</summary>
      <returns>The path of this team project.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions.ToString">
      <summary>Creates a user-readable string that describes the properties of the TeamProjectFolderOptions object.</summary>
      <returns>A user-readable string that describes the properties of the TeamProjectFolderOptions object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderPermission">
      <summary>Represents permissions on a team project folder.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderPermission.#ctor(System.String,System.String[],System.String[])"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderPermission.AllowPermission">
      <summary>Gets the allow permissions.</summary>
      <returns>An array of the allow permissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderPermission.DenyPermission">
      <summary>Gets the deny permissions.</summary>
      <returns>The deny permissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderPermission.IdentityName">
      <summary>Gets the identity name.</summary>
      <returns>The identity name.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderPermission.ToString">
      <summary>Creates a user-readable string that describes properties of this TeamProjectFolderPermission object.</summary>
      <returns>A user-readable string that describes properties of this TeamProjectFolderPermission object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectNotEmptyException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectNotEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectNotEmptyException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectNotEmptyException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectNotFoundException">
      <summary>Describes a TeamProjectNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a TeamProjectNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TeamProjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a TeamProjectNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge">
      <summary>Contains the methods to perform a three-way merge.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.#ctor">
      <summary>Initializes a new ThreeWayMerge instance.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.ContentMergeSummary">
      <summary>Gets the content merge summary.</summary>
      <returns>The content merge summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.IntermediateMergeEncoding">
      <summary>Gets or sets the intermediate merge encoding.</summary>
      <returns>The intermediate merge encoding.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.IsBaseless">
      <summary>Gets or sets a flag that describes whether the merge is baseless.</summary>
      <returns>True if the merge is baseless; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.LatestFileEncoding">
      <summary>Gets or sets the latest file encoding.</summary>
      <returns>The latest file encoding.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.LatestFileLabel">
      <summary>Gets or sets the latest file label.</summary>
      <returns>The latest file label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.LatestFileLabelFile"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.LatestFileLabelTag"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.LatestFileName">
      <summary>Gets or sets the latest file name.</summary>
      <returns>The latest file name.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.LatestFileSpec">
      <summary>The file spec of the latest file</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.MergedFileEncoding">
      <summary>Gets or sets the merged file encoding.</summary>
      <returns>The merged file encoding.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.MergedFileLabel">
      <summary>Gets or sets the merged file label.</summary>
      <returns>The merged file label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.MergedFileLabelFile"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.MergedFileLabelTag"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.MergedFileName">
      <summary>Gets or sets the merged file name.</summary>
      <returns>The merged file name.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.ModifiedFileEncoding">
      <summary>Gets or sets the modified file encoding.</summary>
      <returns>The modified file encoding.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.ModifiedFileLabel">
      <summary>Gets or sets the modified file label.</summary>
      <returns>The modified file label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.ModifiedFileLabelFile"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.ModifiedFileLabelTag"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.ModifiedFileName">
      <summary>Gets or sets the modified file name.</summary>
      <returns>The modified file name.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.ModifiedFileSpec">
      <summary>The file spec of the modified file</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.OriginalFileEncoding">
      <summary>Gets or sets the original file encoding.</summary>
      <returns>The original file encoding.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.OriginalFileLabel">
      <summary>Gets or sets the original file label.</summary>
      <returns>The original file label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.OriginalFileLabelFile"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.OriginalFileLabelTag"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.OriginalFileName">
      <summary>Gets or sets the original file name.</summary>
      <returns>The original file name.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.Run">
      <summary>Executes a three-way merge.</summary>
      <returns>True if the three-way merge successfully completed; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.Run(Microsoft.TeamFoundation.VersionControl.Common.IMergeChange[]@,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.UseExternalAutomergeTool"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.UseExternalMergeTool">
      <summary>Gets or sets a flag that describes whether to use an external merge tool.</summary>
      <returns>True to use an external merge tool. False not to use an external merge tool.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.ThreeWayMerge.VersionControlServerGuid">
      <summary>The version control server guid</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ToolOperations">
      <summary>Enum for the existing supported operations</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ToolOperations.Undefined">
      <summary>Value for undefined</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ToolOperations.Compare">
      <summary>Compare operation</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ToolOperations.Merge">
      <summary>Merge operation</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ToolOperations.Automerge">
      <summary>This option is not currently supported.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ToolProviderConstants">
      <summary>Constants used by tool providers.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.ToolProviderConstants.ExtensionFallback"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.ToolProviderCookieGenerator">
      <summary>The cookie generator. Uses a basic random number generator</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.ToolProviderCookieGenerator.GenerateNewCookie">
      <summary>Gets a new cookie</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.TrackMergesExceededMaxBranchesLimitException">
      <summary>Describes a TrackMergesExceededMaxBranchesLimitException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TrackMergesExceededMaxBranchesLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TrackMergesExceededMaxBranchesLimitException.#ctor(System.String)">
      <summary>Encapsulates a message string into a TrackMergesExceededMaxBranchesLimitException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.TrackMergesExceededMaxBranchesLimitException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a TrackMergesExceededMaxBranchesLimitException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UnableToLoadLocalPropertiesTableException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnableToLoadLocalPropertiesTableException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UnableToLoadLocalVersionTableException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnableToLoadLocalVersionTableException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UnableToLoadPendingChangesTableException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnableToLoadPendingChangesTableException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UndeleteAboveUnrelatedItemException">
      <summary>Describes an UndeleteAboveUnrelatedItemException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UndeleteAboveUnrelatedItemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UndeleteAboveUnrelatedItemException.#ctor(System.String)">
      <summary>Encapsulates a message string into an UndeleteAboveUnrelatedItemException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UndeleteAboveUnrelatedItemException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an UndeleteAboveUnrelatedItemException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UndeleteNewNameNotSupportedException">
      <summary>Describes an UndeleteNewNameNotSupportedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UndeleteNewNameNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UndeleteNewNameNotSupportedException.#ctor(System.String)">
      <summary>Encapsulates a message string into an UndeleteNewNameNotSupportedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UndeleteNewNameNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into an UndeleteNewNameNotSupportedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UndonePendingChangeEventHandler">
      <summary>Handler for all undone change events.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UnshelveException">
      <summary>Exception to indicate that problems occurred that prevented the unshelving of a shelveset.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnshelveException.#ctor">
      <summary>Initializes a new UnshelveException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnshelveException.#ctor(System.Exception)">
      <summary>Initializes a new UnshelveException instance.</summary>
      <param name="innerException">The exception that caused this exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnshelveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnshelveException.#ctor(System.String)">
      <summary>Initializes a new UnshelveException instance.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnshelveException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new UnshelveException instance.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="exception">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UnshelveShelvesetEventArgs">
      <summary>Argument for UnshelveShelveset event.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UnshelveShelvesetEventArgs.Changes">
      <summary>Gets the array of pending changes for the shelveset.</summary>
      <returns>The array of pending changes for the shelveset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UnshelveShelvesetEventArgs.Shelveset">
      <summary>Gets the shelveset to unshelve.</summary>
      <returns>The shelveset to unshelve.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UnshelveShelvesetEventArgs.Workspace">
      <summary>Gets the workspace associated with the shelveset.</summary>
      <returns>The workspace associated with the shelveset.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UnshelveShelvesetEventHandler">
      <summary>Handler for unshelving shelvesets.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UnshelvingPartialRenameException">
      <summary>Describes a ShelvingPartialRenameConflictException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnshelvingPartialRenameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnshelvingPartialRenameException.#ctor(System.String)">
      <summary>Encapsulates a message string into a ShelvingPartialRenameConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UnshelvingPartialRenameException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a ShelvingPartialRenameConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue">
      <summary>Represents a queue that is used to update the local version table of the workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace,Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueueOptions)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue.Dispose">
      <summary>Disposes of this queue and notifies other items of its disposal.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue.Flush">
      <summary>Flushes the queue.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue.QueueUpdate(System.Int32,System.String,System.Int32)">
      <summary>Queues the specified item for update.</summary>
      <param name="itemId">The ID of the item to update.</param>
      <param name="targetLocalItem">The local path. Null if the workspace does not contain the item.</param>
      <param name="localVersion">The changeset version of the local item. It is 0 if the workspace does not contain the item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue.QueueUpdate(System.String,System.Int32,System.String,System.Int32)">
      <summary>Queue a request to tell the server the local disk location of an item in the workspace.</summary>
      <param name="sourceServerItem">The committed server path of the item in the workspace, or the target server item if the item is uncommitted (pending add or branch)</param>
      <param name="itemId">Item ID of the item in the workspace (optional; used for backward compatibility with TFS 2010 and earlier servers)</param>
      <param name="targetLocalItem">New local path of the item, or null to remove it from the workspace</param>
      <param name="localVersion">The version of the item in the workspace. If zero, the request refers to the uncommitted slot for the item ID. If non-zero, the request refers to the committed slot for the item ID.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueue.QueueUpdate(System.String,System.Int32,System.String,System.Int32,System.DateTime,System.Int32,System.Byte[],System.Int64)">
      <summary>Queue a request to tell the server the local disk location of an item in the workspace.</summary>
      <param name="sourceServerItem">The committed server path of the item in the workspace, or the target server item if the item is uncommitted (pending add or branch)</param>
      <param name="itemId">Item ID of the item in the workspace (optional; used for backward compatibility with TFS 2010 and earlier servers)</param>
      <param name="targetLocalItem">New local path of the item, or null to remove it from the workspace</param>
      <param name="localVersion">The version of the item in the workspace. If zero, the request refers to the uncommitted slot for the item ID. If non-zero, the request refers to the committed slot for the item ID.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueueOptions">
      <summary>Options to control where and how the local versions are updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueueOptions.UpdateLocal">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.UpdateLocalVersionQueueOptions.UpdateServer">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters">
      <summary>An UpdateWorkspaceParameters object encapsulates all the information that is required to call Workspace.Update.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.Comment">
      <summary>If set, the comment of the workspace will be changed to this value.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.Computer">
      <summary>If set, the computer name of the workspace will be changed to this value.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.Folders">
      <summary>If set, the working folders (mappings) of the workspace will be replaced with these working folders.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.Location">
      <summary>If set, the workspace's location (local or server) will be changed to the value provided. This value may not be changed at the same time as other any other properties of the workspace. It requires its own call to UpdateWorkspace.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Common.WorkspaceLocation" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.OwnerName">
      <summary>If set, the owner of the workspace will be changed to this value. The owner of a workspace cannot be changed when the workspace has pending changes.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.PermissionProfile">
      <summary>If set, the workspace permissions for this workspace will be set to the values in the provided workspace permission profile. A workspace permission profile is a template fo the workspace's access control list.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.RemoveUnparentedCloaks">
      <summary>If true, any cloaks in the working folders set (this.Folders) which are not parented by a mapping are removed silently. The default value is false.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.WorkspaceName">
      <summary>If set, the name of the workspace will be changed to this value.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters.WorkspaceOptions">
      <summary>If set, the options for the workspace are replaced with these options.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Common.WorkspaceOptions" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.UploadFileException">
      <summary>Thrown when an exception occurs on upload file.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.UploadFileException.#ctor(System.Exception)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.UploadFileException.Errors">
      <returns>Returns <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionConflictException">
      <summary>Describes a VersionConflictException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionConflictException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionConflictException.#ctor(System.String)">
      <summary>Encapsulates a message string into a VersionConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionConflictException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a VersionConflictException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider">
      <summary>Provides methods to retrieve version control artifacts according to the object model.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetArtifactDocument(System.Uri)">
      <returns>Returns <see cref="T:System.Xml.XmlDocument" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetArtifactType(System.Uri)">
      <summary>Gets the type of the version control artifact that is associated with the specified URI.</summary>
      <returns>The type of the version control artifact that is associated with the specified URI, or VersionControlArtifactType. Returns none if it does not represent a known version control artifact type.</returns>
      <param name="artifactUri">The URI of the artifact of which the type is desired.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetChangeset(System.Uri)">
      <summary>Gets the changeset that is associated with the specified URI.</summary>
      <returns>The changeset that is associated with the specified URI.</returns>
      <param name="artifactUri">The URI of the desired changeset.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetLabel(System.Uri)">
      <summary>Gets the label that is associated with the specified URI.</summary>
      <returns>The label that is associated with the specified URI.</returns>
      <param name="artifactUri">The URI of the desired label.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetLatestItemVersion(System.Uri)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetShelveset(System.Uri)">
      <summary>Gets the shelveset that is associated with the specified URI.</summary>
      <returns>The shelveset that is associated with the specified URI.</returns>
      <param name="artifactUri">The URI of the desired shelveset.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactProvider.GetVersionedItem(System.Uri)">
      <summary>Gets a specific version of an item.</summary>
      <returns>The specified item.</returns>
      <param name="artifactUri">The URI of the desired item.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType">
      <summary>Describes the version control artifact type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType.None">
      <summary>Artifact type is unknown.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType.VersionedItem">
      <summary>Versioned item artifact.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType.LatestItemVersion">
      <summary>Latest item version artifact.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType.Changeset">
      <summary>Changeset artifact.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType.Label">
      <summary>Label artifact.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType.Shelveset">
      <summary>Shelveset artifact.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionControlArtifactType.ShelvedItem">
      <summary>Shelved item artifact.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException">
      <summary>This API supports the Team Foundation Server infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException.#ctor">
      <summary>Initializes a new VersionControlException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException.#ctor(System.String)">
      <summary>Initializes a new VersionControlException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new VersionControlException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="innerException">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel">
      <summary>Represents a version control label.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.#ctor(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String,System.String,System.String)">
      <summary>Creates a representation of a source control label that will be sent to the server.</summary>
      <param name="sourceControl">The repository that contains this label.</param>
      <param name="name">The label name.</param>
      <param name="ownerName">The label owner. May be null.</param>
      <param name="scope">The folder path defining the scope of the label. May be null.</param>
      <param name="comment">The label comment. May be null.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.ArtifactUri">
      <summary>Gets the artifact uniform resource identifier (URI) for this label.</summary>
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.Comment">
      <summary>Gets the comment of this label.</summary>
      <returns>The comment of this label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.Items">
      <summary>Gets the items that are associated with this label.</summary>
      <returns>The items that are associated with this label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.LabelId">
      <summary>Gets the ID of this label.</summary>
      <returns>The ID of this label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.LastModifiedDate">
      <summary>Gets the date+time of the last modification of this label.</summary>
      <returns>The date+time of the last modification of this label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.Name">
      <summary>Gets the name of this label.</summary>
      <returns>The name of this label.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.OwnerDisplayName">
      <summary>Display name of the user who owns this label.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.OwnerName">
      <summary>Gets the owner of this label.</summary>
      <returns>The owner of this label</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.Scope">
      <summary>Gets the scope of this label.</summary>
      <returns>The scope of this label.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.ToString">
      <summary>Creates a user-readable string that describes properties of this VersionControlLabel instance.</summary>
      <returns>A user-readable string that describes properties of this VersionControlLabel instance.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel.VersionControlServer">
      <summary>Gets the repository that contains this label.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer">
      <summary>Represents the version control repository.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.AddProxy(Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo)">
      <summary>Adds a new proxy server record.</summary>
      <param name="proxy">The proxy record to add.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.AddProxy(System.String)">
      <summary>Adds a new proxy server record.</summary>
      <param name="url">The URL of the proxy.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.AddProxy(System.String,System.String)">
      <summary>Adds a new proxy server record.</summary>
      <param name="url">The URL of the proxy.</param>
      <param name="friendlyName">The name of the proxy server. This may be an empty string.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.AfterWorkItemsUpdated">
      <summary>Raised after updating work items with a check-in.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ArtifactProvider">
      <summary>Gets the artifact provider for the server.</summary>
      <returns>The artifact provider for the server.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.AuthenticatedUser">
      <summary>Gets the identity that the server used to authenticate the user.</summary>
      <returns>The identity that the server used to authenticate the user.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.AuthorizedIdentity">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.AuthorizedUser">
      <summary>Gets the user who is authorized to use the specified server.  </summary>
      <returns>The user name to use in order to access the specified repository.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BaselineFolderNamePrefix">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BeforeCheckinPendingChange">
      <summary>Raised before checking in a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" />.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BeforeDeleteWorkspace">
      <summary>Raised before deleting an existing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BeforeShelvePendingChange">
      <summary>Raised before shelving a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" />.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BeforeWorkItemsUpdate">
      <summary>Raised before updating work items with a check-in.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BranchObjectCreated">
      <summary>This event is fired when a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> is created.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BranchObjectDeleted">
      <summary>This event is fired when a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> is deleted.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.BranchObjectUpdated">
      <summary>This event is fired when a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> is updated.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Canceled">
      <summary>Gets or sets a flag that describes whether the user has requested cancellation of the current operation.</summary>
      <returns>True if the user has requested cancellation of the current operation; otherwise, false.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ChangesetReconciled">
      <summary>Raised after a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> was reconciled to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CheckInShelveset(Microsoft.TeamFoundation.VersionControl.Client.ShelvesetCheckInParameters)">
      <summary>Submit an existing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> for check in to the repository. </summary>
      <returns>The changeset ID created if successful.</returns>
      <param name="checkinParameters">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ShelvesetCheckInParameters" /> that describe the shelveset to be checked in.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CheckInShelveset(System.String,System.String)">
      <summary>Submit an existing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> for check in to the repository. </summary>
      <returns>The changeset ID created if successful.</returns>
      <param name="shelvesetName">The name of the shelveset to submit.</param>
      <param name="ownerName">The owner of the shelveset.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ClientTracing">
      <summary>Gets or sets the tracing level for all instances of VersionControlServer.</summary>
      <returns>The tracing level for all instances of VersionControlServer.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CommitCheckin">
      <summary>Raised on the commit of a new check-in.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CommitShelveset">
      <summary>Raised on the creation of a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CommittedBranchCreated">
      <summary>This event is fired when a committed branch is created.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CompareLabels(System.String,System.String,System.String,System.String,System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ConfigureProxy(Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo)">
      <summary>Configures the specified proxy.</summary>
      <param name="proxy">The proxy to configure.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ConfigureProxy(System.String)">
      <summary>Configures the specified proxy URL.</summary>
      <param name="proxyUrl">The URL of the proxy to configure.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Conflict">
      <summary>Raised when a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Conflict" /> is created.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Creates a branch on the server and checks it in without downloading the branch to the client.</summary>
      <returns>
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> identifier for the check-in of the branch.</returns>
      <param name="sourcePath">Source path of the branch - must be a server path.</param>
      <param name="targetPath">Target path of the branch - must be a server path.</param>
      <param name="version">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> or <see cref="T:System.DateTime" /> version spec with which to create the branch.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo,Microsoft.TeamFoundation.VersionControl.Client.Mapping[])">
      <summary>Creates a branch on the server and checks it in without downloading the branch to the client.</summary>
      <returns>
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> identifier for the check in of the branch.</returns>
      <param name="sourcePath">Source path of the branch - must be a server path.</param>
      <param name="targetPath">Target path of the branch - must be a server path.</param>
      <param name="version">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> or <see cref="T:System.DateTime" /> version spec with which to create the branch.</param>
      <param name="owner">Owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.  If null, defaults to the authenticated user.</param>
      <param name="comment">Comment on the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.  Can be null.</param>
      <param name="checkinNote">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote" />.  Can be null.</param>
      <param name="policyOverride">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo" />.  Can be null.</param>
      <param name="mappings">An array of mappings under the target path to include or exclude from the branch.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateBranchObject(Microsoft.TeamFoundation.VersionControl.Client.BranchProperties)">
      <summary>Creates a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> in Team Foundation Server.</summary>
      <param name="properties">Properties of the branch object to create.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreatedWorkspace">
      <summary>Raised when a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> is created. </summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateLabel(Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel,Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption)">
      <summary>Create or update a label.</summary>
      <returns>Results of the label operations.</returns>
      <param name="label">The label definition to create or update.</param>
      <param name="itemSpecs">The item specs included in the label.</param>
      <param name="options">Options to handle existing items in a label.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateLabel(Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel,Microsoft.TeamFoundation.VersionControl.Client.LabelItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.LabelChildOption,Microsoft.TeamFoundation.VersionControl.Client.Failure[]@)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.LabelResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateTeamProjectFolder(Microsoft.TeamFoundation.VersionControl.Client.TeamProjectFolderOptions)">
      <summary>Creates a team project root folder and configures it.</summary>
      <param name="options">Options for the creation of the team project folder.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(Microsoft.TeamFoundation.VersionControl.Client.CreateWorkspaceParameters)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String)">
      <summary>Creates a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</summary>
      <returns>The newly created <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> object.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create. Must be unique for this owner.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String)">
      <summary>Creates a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</summary>
      <returns>The newly created <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />object.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create. Must be unique for this owner.</param>
      <param name="owner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String,System.String)">
      <summary>Creates a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</summary>
      <returns>The newly created <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> object.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create. Must be unique for this owner.</param>
      <param name="owner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create.</param>
      <param name="comment">A descriptive comment for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
      <summary>Creates a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</summary>
      <returns>The newly created <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> object.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create. Must be unique for this owner.</param>
      <param name="owner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create.</param>
      <param name="comment">A descriptive comment for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <param name="mappings">An array of working folders to establish for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],System.String)">
      <summary>Creates a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</summary>
      <returns>The newly created <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> object.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create. Must be unique for this owner.</param>
      <param name="owner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create.</param>
      <param name="comment">A descriptive comment for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <param name="mappings">An array of working folders to establish for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <param name="computer">The computer where the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />will exist.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile,System.Boolean)">
      <summary>Creates a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</summary>
      <returns>A reference to a workspace object that represents the new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create. Must be unique for this owner.</param>
      <param name="owner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create.</param>
      <param name="comment">A descriptive comment for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <param name="mappings">An array of working folders to establish for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <param name="computer">The computer where the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> will exist.</param>
      <param name="permissionProfile">The permission profile for this <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <param name="removeUnparentedCloaks">When true, will remove mapping errors that can be safely ignored.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CreateWorkspace(System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],System.String,System.Boolean)">
      <summary>Creates a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</summary>
      <returns>The newly created <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> object.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create. Must be unique for this owner.</param>
      <param name="owner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to create.</param>
      <param name="comment">A descriptive comment for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <param name="mappings">An array of working folders to establish for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <param name="computer">The computer where the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> will exist.</param>
      <param name="removeUnparentedCloaks">When true, will remove mapping errors that can be safely ignored.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.CurrentCommand">
      <summary>Gets or sets the command that is executed on the client side.</summary>
      <returns>The command that is executed on the client side.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteBranchObject(Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier)">
      <summary>Deletes a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> and all associated properties from Team Foundation Server.</summary>
      <param name="branch">Item identifier of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> to delete.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeletedShelveset">
      <summary>Raised on the deletion of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeletedWorkspace">
      <summary>Raised when a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> is deleted.       </summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteLabel(System.String,System.String)">
      <summary>Deletes the label with the specified name and scope.</summary>
      <returns>Results of the label operation.</returns>
      <param name="labelName">The name of the label to delete.</param>
      <param name="labelScope">The repository path representing the scope at which the label is defined.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteProxy(System.String)">
      <summary>Deletes the proxy server record for the specified proxy URL.</summary>
      <param name="proxyUrl">URL of the proxy record to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteShelveset(Microsoft.TeamFoundation.VersionControl.Client.Shelveset)">
      <summary>Removes a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> from the server.</summary>
      <param name="shelveset">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> to remove.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteShelveset(System.String,System.String)">
      <summary>Removes a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> from the server.</summary>
      <param name="shelvesetName">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> to remove.</param>
      <param name="shelvesetOwner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> to remove.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DeleteWorkspace(System.String,System.String)">
      <summary>Deletes the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> that has the specified name and owner.</summary>
      <returns>True if the workspace was deleted. False if it was canceled.</returns>
      <param name="workspaceName">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> to delete.</param>
      <param name="workspaceOwner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Destroy(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Common.DestroyFlags)">
      <summary>Permanently deletes the subtree, starting at the specified item.</summary>
      <returns>The array of items that were destroyed.</returns>
      <param name="itemSpec">The local or server path of an item that will be recursively destroyed.</param>
      <param name="versionSpec">The version of the item.</param>
      <param name="stopAt">The version spec (not label or workspace) that influences keepHistory mode behavior.</param>
      <param name="flags">The set of destroy flags that affects the Destroy: operation. KeepHistory: True to remove only the content of every version of a file up to but not including the changeset that is represented by stopAt. Force: True to asynchronously initialize content garbage collection. Preview: True to make sure that no database data will be deleted. Only a list of items that would have been destroyed is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Destroy(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Common.DestroyFlags,Microsoft.TeamFoundation.VersionControl.Client.PendingSet[]@,Microsoft.TeamFoundation.VersionControl.Client.PendingSet[]@)">
      <summary>Permanently deletes the subtree, starting at the specified item.</summary>
      <returns>The array of items that were destroyed. Null if the Silent flag is specified.</returns>
      <param name="itemSpec">The local or server path of an item that will be recursively destroyed.</param>
      <param name="versionSpec">The version of the item.</param>
      <param name="stopAt">The version spec (not label or workspace) that influences keepHistory mode behavior.</param>
      <param name="flags">The set of destroy flags that affects the Destroy: operation. KeepHistory: True to remove only the content of every version of a file up to but not including the changeset that is represented by stopAt. Force: True to asynchronously initialize content garbage collection. Preview: True to make sure that no database data will be deleted. Only a list of items that would have been destroyed is returned. Silent: True to return no data to the client. AffectedChanges: True to enable that pending changes and shelved changes that will be destroyed will be returned in affectedPendingChanges and affectedShelvedChanges. This can be set only if Preview is set. If set, the return value array will be empty.</param>
      <param name="affectedPendingChanges">The pending changes that will be destroyed.</param>
      <param name="affectedShelvedChanges">The shelved changes that will be destroyed.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Destroyed">
      <summary>This event is fired when a tree or an item is destroyed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DownloadFile(System.String,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.String)">
      <summary>Downloads the specified version of a file from the server to a local file.</summary>
      <param name="serverPath">The repository path of the file to download.</param>
      <param name="deletionId">The deletion ID of the file if it has been deleted.</param>
      <param name="version">The version of the file to download.</param>
      <param name="localFileName">The local path where the local file should be stored.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.DownloadFile(System.String,System.String)">
      <summary>Downloads the latest version of a file from the server to a local file.</summary>
      <param name="serverPath">The repository path of the file to download.</param>
      <param name="localFileName">The local path where the local file should be stored.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.FolderContentChanged"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetAllCheckinNoteFieldNames">
      <summary>Gets an array of all the check-in note fields used in this database.</summary>
      <returns>An array of check-in note field names.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetAllTeamProjects(System.Boolean)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> objects in the repository.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> objects in the repository.</returns>
      <param name="refresh">True to refresh the team project cache by calling the server. False to return cached projects without a call to server.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetBestProxies(System.String)">
      <summary>Gets a list of recommended proxy servers returned in preferential order for the given site.</summary>
      <returns>A list of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo" /> records corresponding to the best proxy matches for the given site, or an empty list if no recommended matches are found.</returns>
      <param name="site">The site to retrieve recommended proxies for.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetBranchHistory(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Gets the branch history of the requested items.</summary>
      <returns>Array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchHistoryTreeItem" /> arrays.</returns>
      <param name="itemSpecs">Array of requested <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> specifiers.</param>
      <param name="version">The version of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />s.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangeset(System.Int32)">
      <summary>Gets the details of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> (comment, changes, etc.).</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> object specifying these details.</returns>
      <param name="changesetId">The ID for the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangeset(System.Int32,System.Boolean,System.Boolean)">
      <summary>Gets the details of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> (comment, changes, etc.).</summary>
      <returns>A reference to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> object specifying these details.</returns>
      <param name="changesetId">The ID of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</param>
      <param name="includeChanges">True to include the changes in the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />. False to include only metadata.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangeset(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gets the details of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> (comment, changes, etc.).</summary>
      <returns>A reference to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> object specifying these details.</returns>
      <param name="changesetId">The ID of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</param>
      <param name="includeChanges">True to include the changes in the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />. False to include only metadata.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
      <param name="includeSourceRenames">Include rename sources in the changes returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangeset(System.Int32,System.Boolean,System.Boolean,System.String[])">
      <summary>Gets the details of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> (comment, changes, etc.).</summary>
      <returns>A reference to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> object specifying these details.</returns>
      <param name="changesetId">The ID of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</param>
      <param name="includeChanges">True to include the changes in the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />. False to include only metadata.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
      <param name="changesetPropertyFilters">List of the property name filters to filter the result.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangeset(System.Int32,System.Boolean,System.Boolean,System.String[],System.String[],System.String[])">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangesetProperty(System.Int32,System.String)">
      <summary>Gets the property value of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> specified by <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> ID and property name filter.</summary>
      <returns>An ArtifactPropertyValue object, which contains the property value. Null if the property does not exist on the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</returns>
      <param name="changesetId">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> ID.</param>
      <param name="propertyNameFilter">The property name filter.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangesetProperty(System.Int32,System.String[])">
      <summary>Gets the property value of a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> specified by <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> ID and an array of property name filters.</summary>
      <returns>An ArtifactPropertyValue object, which contains the set of property values. Null if none of the properties exist on the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</returns>
      <param name="changesetId">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> ID.</param>
      <param name="propertyNameFilters">The array of property name filters.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangesForChangeset(System.Int32,System.Boolean,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" /> objects within a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />. Allows the caller to page changes back from the server.</summary>
      <returns>Array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" /> objects.</returns>
      <param name="changesetId">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> for which to get <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" /> objects.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
      <param name="pageSize">The number of items to return.</param>
      <param name="lastItem">Instructs the server to return items which sort after this item. If null, the server will begin from the start of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangesForChangeset(System.Int32,System.Boolean,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String[])">
      <summary>Gets the changes within a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />. Allows the caller to page changes back from the server.</summary>
      <returns>Array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" /> objects.</returns>
      <param name="changesetId">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> for which to get <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" /> objects.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
      <param name="pageSize">The number of items to return.</param>
      <param name="lastItem">Instructs the server to return items which sort after this item. If null, the server will begin from the start of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</param>
      <param name="propertyNameFilters">Array of the property name filters to apply to each result.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangesForChangeset(System.Int32,System.Boolean,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String[],System.Boolean)">
      <summary>Gets the changes within a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />. Allows the caller to page changes back from the server.</summary>
      <returns>Array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" /> objects.</returns>
      <param name="changesetId">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> for which to get changes.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
      <param name="pageSize">The number of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects to return.</param>
      <param name="lastItem">Instructs the server to return items which sort after this item. If null, the server will begin from the start of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</param>
      <param name="itemAttributeFilters">Array of the property name filters to apply to each result.</param>
      <param name="includeMergeSourceInfo">True to include source information about renames / merges. False to not include these.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetChangesForChangeset(System.Int32,System.Boolean,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String[],System.String[],System.Boolean)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Change" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetCheckinNoteDefinitions(Microsoft.TeamFoundation.VersionControl.Client.TeamProject[])">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition" /> objects supported for <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote" /> data.</summary>
      <returns>
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition" /> array that combines the fields of the server items.</returns>
      <param name="teamProjects">List of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> objects to search through.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetCheckinNoteDefinitionsForServerPaths(System.String[])">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition" /> objects supported for <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote" /> data.</summary>
      <returns>
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition" /> array that unions the fields of the server items.</returns>
      <param name="serverItems">Server items to look up.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetCheckinPoliciesForServerPaths(System.String[])">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition" /> supported for <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote" /> data.</summary>
      <returns>
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNoteFieldDefinition" /> array that unions the fields of the server items.</returns>
      <param name="serverItems">Server items to look up.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetCompleted">
      <summary>Raised when a get operation completes on a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.  </summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetEffectiveGlobalPermissions(System.String)">
      <summary>Gets the global permissions of a user.</summary>
      <returns>Array of permission names.</returns>
      <param name="userName">Name of user to check.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetEffectivePermissions(System.String,System.String)">
      <summary>Gets the permissions of a user for a particular <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />.</summary>
      <returns>Array of permission names.</returns>
      <param name="userName">Name of user to check.</param>
      <param name="item">The path to the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> to check (server or local path).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetExtendedItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem" /> objects in the repository that match the specified criteria, for each <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" />.</summary>
      <returns>An array containing the matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem" /> instances associated with each specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" />.</returns>
      <param name="itemSpecs">The item specifiers for the item(s), may be server or local.</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetExtendedItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem" /> objects in the repository that match the specified criteria, for each <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" />.</summary>
      <returns>An array containing the matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem" /> instances associated with each specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" />.</returns>
      <param name="itemSpecs">The item specifiers for the item(s), may be server or local.</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
      <param name="options">Options for the get operation (see <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions" />).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetExtendedItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions,System.String[])">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetExtendedItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem" /> objects in the repository that match the specified criteria.</summary>
      <returns>An array containing the matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedItem" /> instances.</returns>
      <param name="path">The path to the item(s), may be server or local.</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetFileTypes">
      <summary>Gets the array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.FileType" /> objects registered on the server.</summary>
      <returns>The array <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.FileType" /> objects registered on the server.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetGlobalPermissions(System.String[])">
      <summary>Gets the global permissions of the selected users in the repository.</summary>
      <returns>The permissions from the repository.</returns>
      <param name="identityNames">The user or group names (specify null for all identities).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetIdentityDisplayName(Microsoft.TeamFoundation.Framework.Client.TeamFoundationIdentity)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.Int32,System.Int32)">
      <summary>Gets an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> from the repository, based on <paramref name="itemId" /> and <paramref name="changesetNumber" />.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Null if not found.</returns>
      <param name="itemId">Item ID.</param>
      <param name="changesetNumber">Changeset version of the item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.Int32,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>Gets an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> from the repository, based on <paramref name="itemId" />, <paramref name="changesetNumber" />, and <paramref name="options" />.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Null if not found.</returns>
      <param name="itemId">Item ID.</param>
      <param name="changesetNumber">Changeset version of the item.</param>
      <param name="options">Additional behavior flags (see <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions" />).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.Int32,System.Int32,System.Boolean)">
      <summary>Gets an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> from the repository, based on <paramref name="itemId" /> and <paramref name="changesetNumber" />.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Null if not found.</returns>
      <param name="itemId">Item ID.</param>
      <param name="changesetNumber">Changeset version of the item.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary. </param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> at the specified path.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Throws an exception if an item is not found.</returns>
      <param name="path">The path to the item, may be server or local.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> at the specified path.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Throws an exception if an item is not found.</returns>
      <param name="path">The path to the item, may be server or local.</param>
      <param name="version">The version of the item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> at the specified path.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Throws an exception if an item is not found.</returns>
      <param name="path">The path to the item, may be server or local.</param>
      <param name="version">The version of the item.</param>
      <param name="deletedState">A flag describing to return deleted items and/or non-deleted items.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> at the specified path.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Throws an exception if an item is not found.</returns>
      <param name="path">The path to the item, may be server or local.</param>
      <param name="version">The version of the item.</param>
      <param name="deletedState">A flag describing to return deleted items and/or non-deleted items.</param>
      <param name="options">Additional behavior flags (see <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions" />).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,System.Boolean)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> at the specified path.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Throws an exception if an item is not found.</returns>
      <param name="path">The path to the item, may be server or local.</param>
      <param name="version">The version of the item.</param>
      <param name="deletedState">A flag describing to return deleted items and/or non-deleted items.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> at the specified path.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Throws an exception if an item is not found.</returns>
      <param name="path">The path to the item, may be server or local.</param>
      <param name="version">The version of the item.</param>
      <param name="deletionId">The deletion ID of the specified item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> at the specified path.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Throws an exception if an item is not found.</returns>
      <param name="path">The path to the item, may be server or local.</param>
      <param name="version">The version of the item.</param>
      <param name="deletionId">The deletion ID of the specified item.</param>
      <param name="options">Additional behavior flags (see GetItemsOptions).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.Boolean)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> at the specified path.</summary>
      <returns>The specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />. Throws an exception if an item is not found.</returns>
      <param name="path">The path to the item, may be server or local.</param>
      <param name="version">The version of the item.</param>
      <param name="deletionId">The deletion ID of the specified item.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects in the repository that match the specified path and version.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects matching the path.</returns>
      <param name="itemSpec">The item specifier for the item(s), may be server or local.</param>
      <param name="version">The version of the item(s).</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
      <param name="options">Additional behavior flags (see <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions" />).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.Boolean)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects in the repository that match the specified path and version.</summary>
      <returns>An array of items matching the path.</returns>
      <param name="itemSpec">The item specifier for the item(s), may be server or local.</param>
      <param name="version">The version of the item(s).</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects in the repository that match the specified path and version.</summary>
      <returns>An array of items matching the path.</returns>
      <param name="itemSpecs">The item specifier for the item(s), may be server or local.</param>
      <param name="version">The version of the item(s).</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects in the repository that match the specified path and version.</summary>
      <returns>An array of items matching the path.</returns>
      <param name="itemSpecs">The item specifier for the item(s), may be server or local.</param>
      <param name="version">The version of the item(s).</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
      <param name="options">Additional behavior flags (see <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions" />).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions,System.String[],System.String[])">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.Boolean)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects in the repository that match the specified path and version.</summary>
      <returns>An array of items matching the path.</returns>
      <param name="itemSpecs">The item specifier for the item(s), may be server or local.</param>
      <param name="version">The version of the item(s).</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.Int32[],System.Int32)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects from repository, based on <paramref name="itemIds" /> and <paramref name="changesetNumber" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects that match the parameters.</returns>
      <param name="itemIds">Item ID.</param>
      <param name="changesetNumber">Changeset version of the item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.Int32[],System.Int32,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects from repository, based on <paramref name="itemIds" /> and <paramref name="changesetNumber" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects that match the parameters.</returns>
      <param name="itemIds">Item ID.</param>
      <param name="changesetNumber">Changeset version of the item.</param>
      <param name="options">Options for the query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.Int32[],System.Int32,System.Boolean)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects from repository, based on <paramref name="itemIds" /> and <paramref name="changesetNumber" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects that match the parameters.</returns>
      <param name="itemIds">Item ID.</param>
      <param name="changesetNumber">Changeset version of the item.</param>
      <param name="includeDownloadInfo">True to include information to download files from the server.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects from repository that match the specified <paramref name="path" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects matching the path.</returns>
      <param name="path">The path to the item(s), may be server or local.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects from repository that match the specified <paramref name="path" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects matching the path.</returns>
      <param name="path">The path to the item(s), may be server or local.</param>
      <param name="recursion">A flag describing whether the items should be listed from subfolders.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects from repository that match the specified <paramref name="path" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects matching the path.</returns>
      <param name="path">The path to the item(s), may be server or local.</param>
      <param name="version">The version of the item(s).</param>
      <param name="recursion">A flag describing whether the items should be listed from subfolders.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects from repository that match the specified <paramref name="path" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects matching the path.</returns>
      <param name="path">The path to the item(s), may be server or local.</param>
      <param name="version">The version of the item(s).</param>
      <param name="recursion">A flag describing whether the items should be listed from subfolders.</param>
      <param name="deletedState">A flag describing to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetItems(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.Boolean)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects from repository that match the specified <paramref name="path" />.</summary>
      <returns>An <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSet" /> object containing a collection of matching <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" /> objects.</returns>
      <param name="path">The path to the item(s), may be server or local.</param>
      <param name="version">The version of the item(s).</param>
      <param name="recursion">A flag describing whether the items should be listed from subfolders.</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetLatestChangesetId">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> ID for the latest <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> in the repository.</summary>
      <returns>The latest <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />ID.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetMergeCandidates(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String)">
      <summary>Gets the candidates for merging between the requested items.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.MergeCandidate" /> objects.</returns>
      <param name="source">The source <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> for the potential merge.</param>
      <param name="targetPath">The path of the target for the potential merge.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetMergeCandidates(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String,Microsoft.TeamFoundation.VersionControl.Common.MergeOptionsEx)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.MergeCandidate" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetMergeCandidates(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets the candidates for merging between the requested items.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.MergeCandidate" /> objects.</returns>
      <param name="sourcePath">The path of the source for the potential merge.</param>
      <param name="targetPath">The path of the target for the potential merge.</param>
      <param name="recursion">The level of recursion to apply in the search.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingChange(System.Int32)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> object from the repository, with the specified ID.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> that matches the specified ID. Otherwise, null.</returns>
      <param name="pendingChangeId">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> ID.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingChange(System.Int32,System.Boolean)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> object from the repository, with the specified ID.  Also gets information to download files.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> that matches the specified ID. Otherwise, null.</returns>
      <param name="pendingChangeId">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> ID.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth, if downloading is not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingChanges(System.Int32[])">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> objects from the repository with the specified IDs.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> objects that match the specified IDs.</returns>
      <param name="pendingChangeIds">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> IDs.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingChanges(System.Int32[],System.Boolean)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> objects from the repository with the specified IDs.  Also gets information to download files.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> objects that match the specified IDs.</returns>
      <param name="pendingChangeIds">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> IDs.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth, if downloading is not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPendingSets(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects for the specified query.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects that contain the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> objects for each of the specified items.  If a path in <paramref name="items" /> did not resolve to an <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />, the element in the corresponding index of the returned array will be null.</returns>
      <param name="items">An array of paths to the items to query for pending changes.</param>
      <param name="recursion">Recursion level to query pending changes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPermissions(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets the permissions of the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />s.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSecurity" /> objects representing the permissions of the corresponding <paramref name="items" />.</returns>
      <param name="items">Array of paths to the items to get permissions for.</param>
      <param name="recursion">The recursion level to use for querying items.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetPermissions(System.String[],System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets the permissions of the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Item" />s.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSecurity" /> objects representing the permissions of the corresponding <paramref name="items" />.</returns>
      <param name="identityNames">The user or group names (may be null).</param>
      <param name="items">An array of paths to the items to get permissions for.</param>
      <param name="recursion">The recursion level to use for querying items.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetProxies">
      <summary>Gets an array of all configured proxy servers.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo" /> records for all known proxies configured for the server, or null if there are no proxy records.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetProxies(System.String[])">
      <summary>Gets an array of proxy server records based on the specified URLs.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo" /> records for all known proxies configured for the server.</returns>
      <param name="proxyUrls">An array of proxy server URLs.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetProxy(System.String)">
      <summary>Gets the record for a proxy server at the specified URL.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ProxyInfo" /> object corresponding to the specified URL. Null if one is not found.</returns>
      <param name="proxyUrl">URL of the proxy record to get.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetServerSettingsWithFallback(System.Boolean@)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ServerSettings" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetTeamProject(System.String)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> in the repository with the specified name.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> with the specified name.</returns>
      <param name="name">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> to get.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException">Thrown if the specified path does resolve to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" />.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetTeamProjectForServerPath(System.String)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> for the specified server path.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> with the specified path.</returns>
      <param name="serverPath">The server path of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> to get.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException">Thrown if the specified path does not resolve to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" />.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetTeamProjectsForServerPaths(System.String[])">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> objects in the repository with the specified paths.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.TeamProject" /> objects with the specified paths. Elements in the array will be null if a corresponding project was not found for specified path.</returns>
      <param name="serverPaths">The server paths of the projects to get.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Getting">
      <summary>Raised during a get operation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetVersionedItemProperty(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String)">
      <summary>Gets a property value for the specified item.</summary>
      <returns> An array of <see cref="T:Microsoft.TeamFoundation.Framework.Client.ArtifactPropertyValue" /> objects matched by the filters which have the requested property set on it.</returns>
      <param name="itemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> for which the property value is desired.</param>
      <param name="versionSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
      <param name="propertyNameFilter">The property name to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetVersionedItemProperty(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String[])">
      <summary>Gets a set of property values for the specified items.</summary>
      <returns>An array of  <see cref="T:Microsoft.TeamFoundation.Framework.Client.ArtifactPropertyValue" /> object matched by the filters which have at least one of the specified properties set.</returns>
      <param name="itemSpecs">Array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> objects for which the property value is desired.</param>
      <param name="versionSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="deletedState">A flag describing whether to return deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to return files and/or folders.</param>
      <param name="propertyNameFilters">An array of properties filters to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetWorkspace(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo" /> object.</summary>
      <returns>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo" /> object.</returns>
      <param name="workspaceInfo">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo" /> object to get the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> for. </param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if no <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> is found associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo" />.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetWorkspace(System.String)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> that is mapped to the specified local path.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> object that is associated with the specified local path.</returns>
      <param name="localPath">The local path of the desired <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if no <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> is found associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo" />.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.GetWorkspace(System.String,System.String)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> associated with the specified name and owner.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> that is associated with the specified name and owner.</returns>
      <param name="workspaceName">The name of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to get.</param>
      <param name="workspaceOwner">The owner of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> to get.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if no <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> is found associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo" />.</exception>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.IgnoreFileName">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.MaxBackgroundThreads">
      <summary>Gets or sets the maximum number of background threads that will be used for file uploads and downloads.</summary>
      <returns>The maximum number of background threads that will be used for file uploads and downloads.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.MaxResults">
      <summary>Gets or sets the maximum number of Get operation results that the server may return from a single call.</summary>
      <returns>The maximum number of Get operation results that the server may return from a single call.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.Merging">
      <summary>Raised during a merge operation.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.NewPendingChange">
      <summary>Raised on the creation of a new <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" />.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.NonFatalError">
      <summary>Raised on errors that do not prevent the operation from completing.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.OperationFinished">
      <summary>This event is sent when an operation, such as pending a set of changes, is finished.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.OperationStarting">
      <summary>This event is raised when an operation, such as pending a set of changes, begins.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.PendingChangeCandidatesChanged"></member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.PendingChangesChanged">
      <summary>Raised when a workspace's set of pending changes is modified. </summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryBranchObjectOwnership(System.Int32[])">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectOwnership" /> objects associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> IDs.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectOwnership" /> objects associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> IDs.</returns>
      <param name="changesetIds">Array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> IDs to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryBranchObjectOwnership(System.Int32[],Microsoft.TeamFoundation.VersionControl.Client.ItemSpec)">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectOwnership" /> objects associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> IDs, constrained by the specified path filter.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObjectOwnership" /> objects associated with the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> IDs.</returns>
      <param name="changesetIds">Array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> IDs to query.</param>
      <param name="pathFilter">Optional path filter restricts the paths traversed in the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryBranchObjects(Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Queries a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> objects.</returns>
      <param name="rootItem">The item identifier of the <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> to traverse.</param>
      <param name="recursion">The number of levels to traverse. <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.None" /> will only return the branch object. <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.OneLevel" /> will return children. <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.Full" /> will return all descendants.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.Int32)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(Microsoft.TeamFoundation.VersionControl.Client.QueryHistoryParameters)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Int32)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.Boolean,System.Boolean)">
      <summary>Gets a collection of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> objects matching the specified items and versions.</summary>
      <returns>A collection of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> objects matching the query.</returns>
      <param name="path">The local path to an item for which history will be queried. This parameter can include wildcards.</param>
      <param name="version">The version of the item for which history will be queried.</param>
      <param name="deletionId">The unique deletion ID for the item, if it is deleted. Otherwise, specify 0.</param>
      <param name="recursion">A flag describing whether history will be recursively queried.</param>
      <param name="user">The user for whom history will be queried. Specify null for any user.</param>
      <param name="versionFrom">The earliest version for which history will be queried. Specify null to begin with the first changeset.</param>
      <param name="versionTo">The latest version for which history will be queried. Specify null to end with the latest changeset.</param>
      <param name="maxCount">The maximum number of history entries to return. Specify Int32.MaxValue to get all changes.</param>
      <param name="includeChanges">A flag that describes whether the individual item changes will be included with the changesets. Otherwise, only changeset metadata is included.</param>
      <param name="slotMode">A flag that describes how history entries are searched. If 'true', the returned history entries may reflect multiple different items that have occupied the requested path in the repository. If 'false', the returned history entries will reflect the single item currently occupying the requested path.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gets a collection of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> objects matching the specified items and versions.</summary>
      <returns>A collection of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> objects matching the query.</returns>
      <param name="path">The local path to an item for which history will be queried. This parameter can include wildcards.</param>
      <param name="version">The version of the item for which history will be queried.</param>
      <param name="deletionId">The unique deletion ID for the item, if it is deleted. Otherwise, specify 0.</param>
      <param name="recursion">A flag describing whether history will be recursively queried.</param>
      <param name="user">The user for whom history will be queried. Specify null for any user.</param>
      <param name="versionFrom">The earliest version for which history will be queried. Specify null to begin with the first changeset.</param>
      <param name="versionTo">The latest version for which history will be queried. Specify null to end with the latest changeset.</param>
      <param name="maxCount">The maximum number of history entries to return. Specify Int32.MaxValue to get all changes.</param>
      <param name="includeChanges">A flag that describes whether the individual item changes will be included with the changesets. Otherwise, only changeset metadata is included.</param>
      <param name="slotMode">A flag that describes how history entries are searched. If 'true', the returned history entries may reflect multiple different items that have occupied the requested path in the repository. If 'false', the returned history entries will reflect the single item currently occupying the requested path.</param>
      <param name="includeDownloadInfo">A flag that describes whether to get the information necessary to download the changesets from the server.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryHistory(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Gets a collection of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> objects matching the specified items and versions.</summary>
      <returns>A collection of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> objects matching the query.</returns>
      <param name="path">The local path to an item for which history will be queried. This parameter can include wildcards.</param>
      <param name="version">The version of the item for which history will be queried.</param>
      <param name="deletionId">The unique deletion ID for the item, if it is deleted. Otherwise, specify 0.</param>
      <param name="recursion">A flag describing whether history will be recursively queried.</param>
      <param name="user">The user for whom history will be queried. Specify null for any user.</param>
      <param name="versionFrom">The earliest version for which history will be queried. Specify null to begin with the first changeset.</param>
      <param name="versionTo">The latest version for which history will be queried. Specify null to end with the latest changeset.</param>
      <param name="maxCount">The maximum number of history entries to return. Specify <see cref="F:System.Int32.MaxValue" /> to get all changes.</param>
      <param name="includeChanges">A flag that describes whether the individual item changes will be included with the changesets. Otherwise, only changeset metadata is included.</param>
      <param name="slotMode">A flag that describes how history entries are searched. If 'true', the returned history entries may reflect multiple different items that have occupied the requested path in the repository. If 'false', the returned history entries will reflect the single item currently occupying the requested path.</param>
      <param name="includeDownloadInfo">A flag that describes whether to get the information necessary to download the changesets from the server.</param>
      <param name="sortAscending">A flag that describes whether to sort the results in ascending order.  Specify false to not sort the results.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryLabels(System.String,System.String,System.String,System.Boolean)">
      <summary>Queries for an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel" /> objects applied to items in the repository.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel" /> objects resulting from the query.</returns>
      <param name="labelName">The name of the label being queried.</param>
      <param name="labelScope">The repository path representing the scope at which the label is defined.</param>
      <param name="owner">The user who created the label. Specify null to match all owners.</param>
      <param name="includeItems">True to include items in the labels. False to not include.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryLabels(System.String,System.String,System.String,System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Queries for an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel" /> objects applied to items in the repository.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel" /> objects resulting from the query.</returns>
      <param name="labelName">The name of the label being queried.</param>
      <param name="labelScope">The repository path representing the scope at which the label is defined.</param>
      <param name="owner">The user who created the label. Specify null to match all owners.</param>
      <param name="includeItems">True to include items in the labels. False to not include.</param>
      <param name="filterItem">If not-null, returns only labels containing this item (server or local path).</param>
      <param name="versionFilterItem">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> for <paramref name="filterItem" />. Ignored if <paramref name="filterItem" /> is null.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryLabels(System.String,System.String,System.String,System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Boolean)">
      <summary>Queries for an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel" /> objects applied to items in the repository.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlLabel" /> objects applied to items in the repository.</returns>
      <param name="labelName">The name of the label being queried.</param>
      <param name="labelScope">The repository path representing the scope at which the label is defined.</param>
      <param name="owner">The user who created the label. Specify null to match all owners.</param>
      <param name="includeItems">True to include items in the labels. False to not include.</param>
      <param name="filterItem">If not-null, returns only labels containing this item (server or local path).</param>
      <param name="versionFilterItem">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> for <paramref name="filterItem" />. Ignored if <paramref name="filterItem" /> is null.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMergeRelationships(System.String)">
      <summary>Gets an array of all items that have a merge relationship to the specified item.</summary>
      <returns>Array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier" /> objects.</returns>
      <param name="serverItem">Path to the server item to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMerges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Gets the merge history of the specified target item with an optional source.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge" /> objects.</returns>
      <param name="sourceItemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> of the optional source item. </param>
      <param name="sourceVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the optional source item.</param>
      <param name="targetItemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> of the required target item.</param>
      <param name="targetVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the required target item.</param>
      <param name="versionFrom">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the earliest point of the merge history range to query. Specify null for "start of time".</param>
      <param name="versionTo">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the latest point of the merge history range. Specify null for "end of time".</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMerges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Boolean)">
      <summary>Gets the merge history of the requested item with an optional source.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge" /> objects.</returns>
      <param name="sourceItemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> of the optional source item.</param>
      <param name="sourceVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the optional source item.</param>
      <param name="targetItemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> of the required target item.</param>
      <param name="targetVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the required target item.</param>
      <param name="versionFrom">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the earliest point of the merge history range to query. Specify null for "start of time".</param>
      <param name="versionTo">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the latest point of the merge history range. Specify null for "end of time".</param>
      <param name="showAll">True to include merge history of renamed items. False to not include.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMerges(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets the merge history of the requested item with an optional source.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge" /> objects.</returns>
      <param name="sourcePath">The local or server path to the optional source item.</param>
      <param name="sourceVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the optional source item.</param>
      <param name="targetPath">The local or server path to the required target item.</param>
      <param name="targetVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the required target item.</param>
      <param name="versionFrom">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the earliest point of the merge history range to query. Specify null for "start of time".</param>
      <param name="versionTo">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the latest point of the merge history range. Specify null for "end of time".</param>
      <param name="recursion">The level of recursion applied to the target search.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMerges(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
      <summary>Gets the merge history of the requested item with an optional source.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMerge" /> objects.</returns>
      <param name="sourcePath">The local or server path to the optional source item.</param>
      <param name="sourceVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the optional source item.</param>
      <param name="targetPath">The local or server path to the required target item.</param>
      <param name="targetVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the required target item.</param>
      <param name="versionFrom">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the earliest point of the merge history range to query. Specify null for "start of time".</param>
      <param name="versionTo">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the latest point of the merge history range. Specify null for "end of time".</param>
      <param name="recursion">The level of recursion applied to the target search.</param>
      <param name="showAll">True to include merge history of renamed items. False to not include.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMergesExtended(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Gets the merge history for a specific item and version range.</summary>
      <returns>A set of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge" /> objects for the specified item and version range.</returns>
      <param name="targetItemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> of the target item of the merge.</param>
      <param name="targetVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the target item.</param>
      <param name="versionFrom">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the earliest point of the merge history range to query. Specify null for "start of time".</param>
      <param name="versionTo">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the latest point of the merge history range to query. Specify null for "end of time".</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMergesExtended(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Common.QueryMergesExtendedOptions)">
      <summary>Gets the merge history for a specific item and version range.</summary>
      <returns>A set of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge" /> objects for the specified item and version range.</returns>
      <param name="targetItemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> of the target item of the merge.</param>
      <param name="targetVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the target item.</param>
      <param name="versionFrom">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the earliest point of the merge history range to query. Specify null for "start of time".</param>
      <param name="versionTo">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the latest point of the merge history range to query. Specify null for "end of time".</param>
      <param name="options">Options for the query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMergesWithDetails(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets the merge history with details of the specified target item with an optional source.</summary>
      <returns>
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMergeDetails" /> object.</returns>
      <param name="sourcePath">The local or server path of the optional source item.</param>
      <param name="sourceVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the optional source item.</param>
      <param name="sourceDeletionId">The deletion ID of the optional source item.</param>
      <param name="targetPath">The local or server path of the required target item.</param>
      <param name="targetVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the required target item.</param>
      <param name="targetDeletionId">The deletion ID of the target item.</param>
      <param name="versionFrom">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the earliest point of the merge history range to query. Specify null for "start of time".</param>
      <param name="versionTo">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the latest point of the merge history range to query. Specify null for "end of time".</param>
      <param name="recursion">The level of recursion applied to the target search.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryMergesWithDetails(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Int32,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
      <summary>Gets the merge history with details of the specified target item with an optional source.</summary>
      <returns>
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangesetMergeDetails" /> object.</returns>
      <param name="sourcePath">The local or server path of the optional source item.</param>
      <param name="sourceVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the optional source item.</param>
      <param name="sourceDeletionId">The deletion ID of the optional source item.</param>
      <param name="targetPath">The local or server path of the required target item.</param>
      <param name="targetVersion">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the required target item.</param>
      <param name="targetDeletionId">The deletion ID of the target item.</param>
      <param name="versionFrom">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the earliest point of the merge history range to query. Specify null for "start of time".</param>
      <param name="versionTo">A <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> denoting the latest point of the merge history range to query. Specify null for "end of time".</param>
      <param name="recursion">The level of recursion applied to the target search.</param>
      <param name="showAll">True to include merge history of renamed items. False to not include.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String)">
      <summary>Gets the pending changes for the specified query.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects containing the pending changes for the specified server items.</returns>
      <param name="itemSpecs">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> objects representing the items to query.</param>
      <param name="queryWorkspaceName">The workspace name (may be null).</param>
      <param name="queryUserName">The user name (may be null), which is the workspace owner if the workspace name is not null.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String,System.Boolean)">
      <summary>Gets the pending changes for the specified query.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects containing the pending changes for the specified server items.</returns>
      <param name="itemSpecs">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> objects representing the items to query.</param>
      <param name="queryWorkspaceName">The workspace name (may be null).</param>
      <param name="queryUserName">The user name (may be null), which is the workspace owner if the workspace name is not null.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String,System.Boolean,System.Boolean)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String,System.Boolean,System.Boolean,System.String[])">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryPendingSets(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,System.String)">
      <summary>Gets the pending changes for the specified query.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects containing the pending changes for the specified server items.</returns>
      <param name="items">An array of local or server paths to the items to query for.</param>
      <param name="recursion">Recursion level for the query.</param>
      <param name="queryWorkspaceName">The workspace name (may be null).</param>
      <param name="queryUserName">The user name (may be null), which is the workspace owner if the workspace name is not null.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryRootBranchObjects(Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Queries all <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> objects that have no parent.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> objects.</returns>
      <param name="recursion">The number of levels to traverse. <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.None" /> will only return the branch object. <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.OneLevel" /> will return children. <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.RecursionType.Full" /> will return all descendants.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(Microsoft.TeamFoundation.VersionControl.Client.Shelveset)">
      <summary>Gets the shelved changes in the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects with the pending changes for the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</returns>
      <param name="shelveset">The shelveset to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(Microsoft.TeamFoundation.VersionControl.Client.Shelveset,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
      <summary>Gets the shelved changes in the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects with the pending changes for the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</returns>
      <param name="shelveset">The shelveset to query.</param>
      <param name="itemSpecs">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> objects for the items to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(System.String,System.String)">
      <summary>Gets the shelved changes in the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects with the pending changes for the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</returns>
      <param name="shelvesetName">The shelveset name. May be null.</param>
      <param name="shelvesetOwner">The shelveset owner. May be null.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
      <summary>Gets the shelved changes in the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects with the pending changes for the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</returns>
      <param name="shelvesetName">The shelveset name. May be null.</param>
      <param name="shelvesetOwner">The shelveset owner. May be null.</param>
      <param name="itemSpecs">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> objects for the items to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
      <summary>Gets the shelved changes in the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" /> objects with the pending changes for the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</returns>
      <param name="shelvesetName">The shelveset name. May be null.</param>
      <param name="shelvesetOwner">The shelveset owner. May be null.</param>
      <param name="itemSpecs">Gets the shelved changes in the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</param>
      <param name="includeDownloadInfo">True to get the information needed to download files. Specify false to save bandwidth if not necessary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,System.String[])">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingSet" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvesets(System.String,System.String)">
      <summary>Queries an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> objects with the specified name and/or owner.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" /> objects matching the query.</returns>
      <param name="shelvesetName">The name of the shelveset to look for. Specify null to match all shelvesets regardless of name.</param>
      <param name="shelvesetOwner">The owner of the shelvesets to look for. Specify null to match all shelvesets regardless of owner.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryShelvesets(System.String,System.String,System.String[])">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryWorkspaces(System.String,System.String,System.String)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> objects that match the specified name, owner, computer, or any combination of these criteria.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> objects that match the specified filters.</returns>
      <param name="workspaceName">The name of the workspace, or null to query all workspace names.</param>
      <param name="workspaceOwner">The user name of the owner, or null to query all users.</param>
      <param name="computer">The name of the host computer, or null to query all computers.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.QueryWorkspaces(System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions)">
      <summary>Gets an array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> objects that match the specified name, owner, computer, or any combination of these criteria. Also allows filtering by permission.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> objects that match the specified filters.</returns>
      <param name="workspaceName">The name of the workspace, or null for all workspace names.</param>
      <param name="workspaceOwner">The user name of the owner, or null for all users.</param>
      <param name="computer">The name of the host computer, or null for all computers.</param>
      <param name="permissionsFilter">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions" /> to use to filter by the authorization level. Specify <see cref="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions.NoneOrNotSupported" /> to not use permission filtering.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.RenameCheckinNoteFieldName(System.String,System.String,System.String)">
      <summary>Rename all instances of the specified <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckinNote" /> field to the new specified name for the given team project folder.</summary>
      <param name="path">The path to a team project folder.</param>
      <param name="oldName">Old check-in note field name.</param>
      <param name="newName">New check-in note field name.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ResetCheckinDates(System.DateTime)"></member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ResolvedConflict">
      <summary>Raised when a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Conflict" /> is resolved.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ServerGuid">
      <summary>Gets the GUID of the Version Control Server repository.</summary>
      <returns>The GUID of the Version Control Server repository.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ServerItemExists(System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
      <summary>Checks to see if the item of the specified path and type exists in the repository.</summary>
      <returns>True if the specified item is in the repository. False otherwise.</returns>
      <param name="path">The path of the item to check for, may be server or local.</param>
      <param name="itemType">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemType" /> of the item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ServerItemExists(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
      <summary>Checks to see if the item of the specified path, version, and type exists in the repository.</summary>
      <returns>True if the specified item in the repository. False otherwise.</returns>
      <param name="path">The path of the item to check for, may be server or local.</param>
      <param name="version">The version of the item to check for.</param>
      <param name="deletedState">Whether the item must be non-deleted, deleted, or any state.</param>
      <param name="itemType">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemType" /> of the item to check for.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetChangesetProperty(System.Int32,Microsoft.TeamFoundation.Framework.Client.PropertyValue[])">
      <summary>Sets a list of <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> objects to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</summary>
      <param name="changesetId">A valid changeset ID.</param>
      <param name="propertyValues">A list of <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> objects.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetChangesetProperty(System.Int32,System.Collections.Generic.List{Microsoft.TeamFoundation.Framework.Client.PropertyValue})">
      <summary>Sets a  list of <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> objects to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</summary>
      <param name="changesetId">A valid changeset ID.</param>
      <param name="propertyValues">A list of <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> objects.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetChangesetProperty(System.Int32,System.String,System.Byte[])">
      <summary>Sets a <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> object to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</summary>
      <param name="changesetId">The changeset ID.</param>
      <param name="propertyName">The name of the property.</param>
      <param name="value">The value to assign to the property.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetChangesetProperty(System.Int32,System.String,System.Nullable{System.DateTime})">
      <summary>Sets a <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> object to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</summary>
      <param name="changesetId">The changeset ID.</param>
      <param name="propertyName">The name of the property.</param>
      <param name="value">The value to assign to the property.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetChangesetProperty(System.Int32,System.String,System.Nullable{System.Double})">
      <summary>Sets a <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> object to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</summary>
      <param name="changesetId">The changeset ID.</param>
      <param name="propertyName">The name of the property.</param>
      <param name="value">The value to assign to the property.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetChangesetProperty(System.Int32,System.String,System.Nullable{System.Int32})">
      <summary>Sets a of <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> object to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</summary>
      <param name="changesetId">The changeset ID.</param>
      <param name="propertyName">The name of the property.</param>
      <param name="value">The value to assign to the property.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetChangesetProperty(System.Int32,System.String,System.String)">
      <summary>Sets a of <see cref="T:Microsoft.TeamFoundation.Framework.Client.PropertyValue" /> object to a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" />.</summary>
      <param name="changesetId">The changeset ID.</param>
      <param name="propertyName">The name of the property.</param>
      <param name="value">The value to assign to the property.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetFileTypes(Microsoft.TeamFoundation.VersionControl.Client.FileType[])">
      <summary>Sets the file types registered on the server.</summary>
      <param name="fileTypes">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.FileType" /> objects to register on the server.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetGlobalPermissions(Microsoft.TeamFoundation.VersionControl.Client.PermissionChange[])">
      <summary>Sets the permissions for items in the repository.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange" /> objects representing the successful changes returned from the server.</returns>
      <param name="permissionChanges">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PermissionChange" /> objects to send to the server.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetPermissions(Microsoft.TeamFoundation.VersionControl.Client.SecurityChange[])">
      <summary>Sets the permissions for items in the repository.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.SecurityChange" /> representing the successful changes to the server.</returns>
      <param name="securityChanges">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.SecurityChange" /> objects to send to the server.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetServerSettings(Microsoft.TeamFoundation.VersionControl.Client.ServerSettings)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemAttribute(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.Byte[])"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemAttribute(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.Nullable{System.DateTime})"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemAttribute(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.Nullable{System.Double})"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemAttribute(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.Nullable{System.Int32})"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemAttribute(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemAttribute(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.Framework.Client.PropertyValue[])"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemProperty(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.Byte[])">
      <summary>Sets a property on a versioned item.</summary>
      <param name="itemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> of the item.</param>
      <param name="versionSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="deletedState">A flag describing whether to set the property on deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to set the property on files and/or folders.</param>
      <param name="propertyName">The property to set.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemProperty(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.Nullable{System.DateTime})">
      <summary>Sets a property on a versioned item.</summary>
      <param name="itemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> of the item.</param>
      <param name="versionSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="deletedState">A flag describing whether to set the property on deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to set the property on files and/or folders.</param>
      <param name="propertyName">The property to set.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemProperty(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.Nullable{System.Double})">
      <summary>Sets a property on a versioned item.</summary>
      <param name="itemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="versionSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="deletedState">A flag describing whether to set the property on deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to set the property on files and/or folders.</param>
      <param name="propertyName">The property to set.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemProperty(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.Nullable{System.Int32})">
      <summary>Sets a property on a versioned item.</summary>
      <param name="itemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="versionSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="deletedState">A flag describing whether to set the property on deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to set the property on files and/or folders.</param>
      <param name="propertyName">The property to set.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemProperty(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.String,System.String)">
      <summary>Sets a property on a versioned items.</summary>
      <param name="itemSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="versionSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="deletedState">A flag describing whether to set the property on deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to set the property on files and/or folders.</param>
      <param name="propertyName">The property to set.</param>
      <param name="value">The property value to set.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetVersionedItemProperty(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.Framework.Client.PropertyValue[])">
      <summary>Sets a property on an array of versioned items.</summary>
      <param name="itemSpecs">The array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> objects of the items.</param>
      <param name="versionSpec">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec" /> of the item.</param>
      <param name="deletedState">A flag describing whether to set the property on deleted items and/or non-deleted items.</param>
      <param name="itemType">A flag describing whether to set the property on files and/or folders.</param>
      <param name="propertyValues">The property values to set.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SetWorkspaceLocationProgress"></member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.ShelvesetUpdated"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.StripUnsupportedCheckinOptions(Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters)">
      <summary>Remove unsupported check-in parameters from a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters" /> instance.</summary>
      <param name="checkInParameters">The <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.CheckInParameters" /> instance to modify.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.SupportedFeatures">
      <summary>Gets the features supported by the Version Control Server.  </summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TeamFoundationServer">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.Client.TeamFoundationServer" /> that owns this VersionControlServer instance. </summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.Client.TeamFoundationServer" /> that owns this VersionControlServer instance.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TeamProjectCollection">
      <summary>Gets the <see cref="T:Microsoft.TeamFoundation.Client.TfsTeamProjectCollection" /> that owns this VersionControlServer instance.</summary>
      <returns>The <see cref="T:Microsoft.TeamFoundation.Client.TfsTeamProjectCollection" /> that owns this VersionControlServer instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TrackMerges(System.Int32[],Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier,Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier[],Microsoft.TeamFoundation.VersionControl.Client.ItemSpec)">
      <summary>Gets merges that occurred from a source item to a set of target items, for a list of source <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> IDs.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge" /> objects representing the changes from the source item to the target item. Returns an empty array if no merge chain exists.</returns>
      <param name="sourceChangesetIds">An array of source changeset IDs.</param>
      <param name="sourceItem">Source item to track merges from (recursive).</param>
      <param name="targetItems">Target item to track merges to (recursive).</param>
      <param name="pathFilter">Optional path filter to reduce the scope of source item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TrackMerges(System.Int32[],Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier,Microsoft.TeamFoundation.VersionControl.Client.ItemIdentifier[],Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String[]@)">
      <summary>Gets merges that occurred from a source item to a set of target items, for a list of source <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> IDs.</summary>
      <returns>An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ExtendedMerge" /> objects representing the changes from the source item to the target item. Returns an empty array if no merge chain exists.</returns>
      <param name="sourceChangesetIds">An array of source changeset IDs.</param>
      <param name="sourceItem">Source item to track merges from (recursive).</param>
      <param name="targetItems">Target item to track merges to (recursive).</param>
      <param name="pathFilter">Optional path filter to reduce the scope of source item.</param>
      <param name="partialTargetItems">An array of target items where the source changeset has only been partially merged.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TryGetTeamProject(System.String)">
      <summary>Gets the team project in the repository with the specified name.</summary>
      <returns>The team project with the specified name. Null if a project was not found.</returns>
      <param name="name">The name of the team project to get.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TryGetTeamProjectForServerPath(System.String)">
      <summary>Gets the team project for the specified server path.</summary>
      <returns>The team project with the specified path. Null otherwise.</returns>
      <param name="serverPath">The server path of the team project to get.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.TryGetWorkspace(System.String)">
      <summary>Gets the workspace that is mapped to the specified local path. Does not throw an exception.</summary>
      <returns>The workspace object that is associated with the specified local path. Null if a workspace is not found.</returns>
      <param name="localPath">The local path of the desired workspace.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UndonePendingChange">
      <summary>Raised when an existing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.PendingChange" /> is undone.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UnlabelItem(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Removes a label applied to an item.</summary>
      <returns>Results of the label operations.</returns>
      <param name="labelName">The name of the label to remove.</param>
      <param name="labelScope">The repository path representing the scope at which the label is defined.</param>
      <param name="itemSpecs">An array of <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemSpec" /> objects from which to remove the specified label.</param>
      <param name="version">The version of the items to remove -- typically the label's LabelVersionSpec.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UnlabelItem(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,System.Predicate{Microsoft.TeamFoundation.VersionControl.Client.Failure},Microsoft.TeamFoundation.VersionControl.Client.Failure[]@)"></member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UnshelveConflict"></member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UnshelveShelveset">
      <summary>Raised when unshelving a <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Shelveset" />.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UpdateBranchObject(Microsoft.TeamFoundation.VersionControl.Client.BranchProperties)">
      <summary>Updates an existing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.BranchObject" /> in Team Foundation Server.</summary>
      <param name="properties">
        <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Changeset" /> to update.</param>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UpdatedWorkspace">
      <summary>Raised when an existing <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" /> is updated.     </summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UpdateShelveset(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.Shelveset)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.UpdateUserName">
      <summary>Fixes the display name for the current user on this server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.WebServiceLevel">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer.WorkItemUpdated">
      <summary>Raised when a work item has been updated with a check-in.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec">
      <summary>A utility class to parse version specifications.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.#ctor">
      <summary>Initializes a new VersionSpec instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.AddDeletionModifierIfNecessary(Microsoft.TeamFoundation.VersionControl.Client.Item)">
      <summary>Formats an item path to include the deletion ID if it is nonzero.</summary>
      <returns>A string that represents the path and deletion ID.</returns>
      <param name="item">The item to format.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.AddDeletionModifierIfNecessary(System.String,System.Int32)">
      <summary>Formats a path to include the deletion ID if it is nonzero.</summary>
      <returns>A string that represents the path that has a formatted deletion modifier added, if it is nonzero.</returns>
      <param name="path">The path.</param>
      <param name="deletionId">The deletion ID.</param>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.DeletionModifier">
      <summary>Deletion identifier; a version modifier.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.DisplayString">
      <summary>Gets the string representation of the version specification.</summary>
      <returns>The string representation of the version specification.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Format(System.String)">
      <summary>Formats a path by using the version specifier.</summary>
      <returns>A version-specified string that represents the path and version.</returns>
      <param name="path">The server or local path.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.FormatRange(System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Formats a server or local path by using the version range that is specified.</summary>
      <returns>A version-specified string that represents the path and version range.</returns>
      <param name="path">The server or local path.</param>
      <param name="from">The start of the version range.</param>
      <param name="to">The end of the version range.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Latest">
      <summary>Gets the latest version of this VersionSpec in the repository.</summary>
      <returns>The latest version of this VersionSpec in the repository.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Parse(System.String,System.String)">
      <summary>Converts a version specification string to an array of VersionSpec objects. Accommodates a range specifier.</summary>
      <returns>The encapsulated version specifications in an array.</returns>
      <param name="versionSpec">Version specification to encapsulate.</param>
      <param name="user">The current user.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Parse(System.String,System.String,System.String)">
      <summary>Given a version string convert it to an array VersionSpec objects. If the version specification did not contain a range specifier then this will return an array of size one. Otherwise, an array of size two.</summary>
      <returns>The version specification(s) encapsulated in an array.</returns>
      <param name="versionSpec">version specification to encapsulate</param>
      <param name="user">the current user (only used by workspace version specs)</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ParseSingleSpec(System.String,System.String)">
      <summary>Converts a version specification string to a VersionSpec object.</summary>
      <returns>The encapsulated version specification as an object.</returns>
      <param name="versionSpec">Version specification to encapsulate.</param>
      <param name="user">The current user.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ParseSingleSpec(System.String,System.String,System.String)">
      <summary>Given a version string (without a range specifier), convert it to a VersionSpec object.</summary>
      <returns>The version specification encapsulated in an object.</returns>
      <param name="versionSpec">version specification to encapsulate</param>
      <param name="user">the current user's unique name (only used by workspace version specs)</param>
      <param name="userDisplay">the current user's display name (only used by workspace version specs)</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ParseVersionedFileSpec(System.String,System.String,System.Int32@,System.String@,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec[]@)">
      <summary>Parses a versioned file specification string of the form "filename;version" or "filename;version;deletionID".</summary>
      <param name="spec">The versioned file specification to parse.</param>
      <param name="user">The current user.</param>
      <param name="deletionId">The parsed deletion ID.</param>
      <param name="fileName">The parsed file name.</param>
      <param name="versions">The parsed VersionSpec array.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ParseVersionedFileSpec(System.String,System.String,System.String,System.Int32@,System.String@,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec[]@)">
      <summary>Parse a versioned file spec of the form filename;version or filename;version;deletionID.</summary>
      <param name="spec">the versioned file spec to parse</param>
      <param name="user">the current user's unique name (only used by workspace version specs)</param>
      <param name="userDisplay">the current user's display name (only used by workspace version specs)</param>
      <param name="deletionId">returned deletion id (orphan id)</param>
      <param name="fileName">returned file name</param>
      <param name="versions">returned versionSpec array</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ParseVersionedFileSpec(System.String,System.String,System.String@,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec[]@)">
      <summary>Parses a versioned file specification string of the form "filename;version".</summary>
      <param name="spec">The versioned file specification to parse.</param>
      <param name="user">The current user.</param>
      <param name="fileName">The parsed file name.</param>
      <param name="versions">The parsed VersionSpec array.</param>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.RangeSeparator">
      <summary>Character that is used to separate the components of a version specification range.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ReorderVersionSpecs(Microsoft.TeamFoundation.VersionControl.Client.VersionSpec@,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec@)">
      <summary>Swaps two VersionSpec instances if they are out of order.</summary>
      <returns>True if the VersionSpec positions were reversed; otherwise, false.</returns>
      <param name="start">The VersionSpec that should occur first.</param>
      <param name="end">The VersionSpec that should occur second.</param>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.Separator">
      <summary>Character that is used to separate a file name from its version specification.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.VersionSpec.ToString">
      <summary>Creates a user-readable string that describes this VersionSpec instance.</summary>
      <returns>A user-readable string that describes this VersionSpec instance.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Warning">
      <summary>Represents a warning.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Warning.ChangeType">
      <summary>Gets the changetype.</summary>
      <returns>The changetype.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Warning.ParentOrChildPath">
      <summary>Gets the parent or child path.</summary>
      <returns>The parent or child path.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Warning.ToString">
      <summary>Creates a user-readable string that describes the properties of a Warning object.</summary>
      <returns>A user-readable string that describes the properties of a Warning object.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Warning.User">
      <summary>Gets the user to whom the warning was issued.</summary>
      <returns>The user to whom the warning was issued.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Warning.UserDisplayName">
      <summary>The user who has the conflicting change pended.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Warning.WarningType">
      <summary>Gets the warning type.</summary>
      <returns>The warning type.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Warning.Workspace">
      <summary>Gets the workspace where the warning occurred.</summary>
      <returns>The workspace where the warning occurred.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WarningType">
      <summary>Describes the type of a warning.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WarningType.Invalid">
      <summary>Invalid.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WarningType.NamespacePendingChangeWarning">
      <summary>Namespace is pending a change.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WarningType.ResourcePendingChangeWarning">
      <summary>Resource is pending a change.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WarningType.StaleVersionWarning">
      <summary>Stale version.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WebMethodNotSupportedException">
      <summary>Describes a WebMethodNotSupportedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WebMethodNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WebMethodNotSupportedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WebMethodNotSupportedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WebMethodNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WebMethodNotSupportedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel">
      <summary>Represents the version of the web services on the server. For the value PreTfs2010, check for specific features using the VersionControlServer.SupportedFeatures property.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel.Unknown">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel.PreTfs2010">
      <summary>TFS 2005 through TFS 2008 SP1</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel.Tfs2010">
      <summary>TFS 2010</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel.Tfs2012">
      <summary>TFS 2012</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel.Tfs2012_1">
      <summary>TFS 2012.1</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel.Tfs2012_2">
      <summary>TFS 2012.2</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WebServiceLevel.Tfs2012_3">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WildcardNotAllowedException">
      <summary>Describes a WildcardNotAllowedException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WildcardNotAllowedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WildcardNotAllowedException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WildcardNotAllowedException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WildcardNotAllowedException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WildcardNotAllowedException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder">
      <summary>Represents a working folder setting.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.#ctor(System.String,System.String)">
      <summary>Initializes a new working folder object that represents a mapping of serverItem to localItem.</summary>
      <param name="serverItem">The server item that is being mapped.</param>
      <param name="localItem">The local item that is mapped from the server item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.#ctor(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderType)">
      <summary>Creates a working folder object.</summary>
      <param name="serverItem">The server item that is being mapped.</param>
      <param name="localItem">The local item that is mapped from the server item. May be null if the server item is cloaked.</param>
      <param name="type">Type of mapping to create.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.#ctor(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderType,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Creates a working folder object.</summary>
      <param name="serverItem">The server item that is being mapped.</param>
      <param name="localItem">The local item that is mapped from the server item. May be null if the server item is cloaked.</param>
      <param name="type">Type of mapping to create.</param>
      <param name="depth">The folder depth that mapping affects.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.AreSetsEqual(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
      <summary>Returns true if two sets of WorkingFolders are identical.</summary>
      <returns>True if the two sets are identical, false otherwise</returns>
      <param name="set1">The first set of working folders</param>
      <param name="set2">The second set of working folders</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.Clone">
      <summary>Creates a copy of this WorkingFolder instance.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.DepthOneString">
      <summary>Returns the string which represents a one depth mapping.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.Equals(System.Object)">
      <summary>Compare this instance to another WorkingFolder instance for equality.</summary>
      <returns>True if the two WorkingFolder instances are equivalent; otherwise, false.</returns>
      <param name="obj">The other WorkingFolder instance.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.GetHashCode">
      <summary>Generates a hash code for this instance.</summary>
      <returns>A hash code for this instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.GetWorkspaceRoots(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.IsCloaked">
      <summary>Gets a flag that describes whether this mapping is a cloak.</summary>
      <returns>True if this mapping is a cloak; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.LocalItem">
      <summary>Gets the local folder for this item map.</summary>
      <returns>The local folder for this item map.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.LocalItemComparer">
      <summary>Comparer to sort WorkingFolder instances that are based on a local path.</summary>
      <returns>This method is culture-sensitive and case-insensitive.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.op_Equality(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder)">
      <summary>Compares two WorkingFolder instances for equality.</summary>
      <returns>True if the two WorkingFolder instances are equivalent; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.op_Inequality(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder)">
      <summary>Compares two WorkingFolder instances for inequality.</summary>
      <returns>True if the two WorkingFolder instances are not equivalent; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.ServerItemComparer">
      <summary>Comparer to sort WorkingFolder instances that are based on a server path.</summary>
      <returns>This method is culture-sensitive and case-insensitive.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder.ToString">
      <summary>Describes this WorkingFolder object in a user-readable string.</summary>
      <returns>A string that describes this object.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderCreationException">
      <summary>Describes a WorkingFolderCreationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderCreationException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WorkingFolderCreationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderCreationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WorkingFolderCreationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderException">
      <summary>Describes a WorkingFolderException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WorkingFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WorkingFolderException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderInUseException">
      <summary>Describes a WorkingFolderInUseException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderInUseException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WorkingFolderInUseException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderInUseException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WorkingFolderInUseException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderType">
      <summary>Describes the type of a working folder.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderType.Cloak">
      <summary>Working folder is cloaked.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkingFolderType.Map">
      <summary>Working folder is mapped.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo">
      <summary>Represents supplementary information about a work item.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo.#ctor(System.Int32,System.Boolean,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinAction)">
      <summary>Initializes a new WorkItemCheckedInfo instance.</summary>
      <param name="id">The work item ID.</param>
      <param name="checkedOnOff">True to set the checked state to On. False to set the checked state to Off.</param>
      <param name="action">Action to perform on the work item.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo.Checked">
      <summary>Gets or sets the checked state of the work item.</summary>
      <returns>True if the work item is checked. False if the work item is not checked.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo.CheckinAction">
      <summary>Gets or sets the action to perform.</summary>
      <returns>The action to perform on the work item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo.Equals(Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo)">
      <summary>Checks whether the specified checked info object is the same as this one.</summary>
      <returns>True if the two objects are equal; otherwise, false.</returns>
      <param name="source">The WorkItemCheckedInfo object to compare.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo.Id">
      <summary>Gets the ID of the work item.</summary>
      <returns>The ID of the work item.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinAction">
      <summary>Describes the check-in action for work items.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinAction.None">
      <summary>Do nothing.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinAction.Resolve">
      <summary>Resolve the work item on check-in.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinAction.Associate">
      <summary>Associate the work item on checkin.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo">
      <summary>Represents information about a work item checkin.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo.#ctor(Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinAction)">
      <summary>Initializes a new WorkItemCheckinInfo instance.</summary>
      <param name="workItem">The work item.</param>
      <param name="checkinAction">The action to perform on checkin.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo.CheckinAction">
      <summary>Gets or sets the action to perform on checkin.</summary>
      <returns>The action to perform on checkin.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo.FromWorkItemCheckedInfo(Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo[],Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItemStore)">
      <summary>Convert WorkItemCheckedInfo objects into WorkItemCheckinInfo objects.</summary>
      <returns>An array of the converted <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo" /> objects.</returns>
      <param name="checkedInfo">An array of the WorkItemCheckedInfo objects to convert.</param>
      <param name="workItemStore">The work item store from which to obtain work items.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo.FromWorkItemCheckedInfo(Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckedInfo[],Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItemStore,System.Boolean)">
      <summary>Convert WorkItemCheckedInfo objects (persisted data) into WorkItemCheckinInfo objects.</summary>
      <param name="checkedInfo">WorkItemCheckedInfo objects to convert</param>
      <param name="workItemStore">the work item store from which to obtain WorkItem objects</param>
      <param name="filterDestroyed">Ignores work items that have been destroyed in when set to true. When set to false, DeniedOrNotExistException will be thrown when a destroyed work item is encountered.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo.WorkItem">
      <summary>Gets or sets the work item.</summary>
      <returns>The work item.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemsUpdateEventArgs">
      <summary>Event argument providing information about the work items in an update.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemsUpdateEventArgs.WorkItemInfo">
      <summary>Get the work item information.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemsUpdateEventArgs.Workspace">
      <summary>Get the workspace involved in the checkin.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdatedEventArgs">
      <summary>Event arguments describing actions on a transitioned work item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdatedEventArgs.ErrorMessage">
      <summary>Gets the error message if the work item did not transition successfully.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdatedEventArgs.Successful">
      <summary>Gets the work item transition and link status.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdatedEventArgs.WorkItemInfo">
      <summary>Gets the work item information.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdatedEventArgs.Workspace">
      <summary>Gets the workspace involved in the checkin.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdatedEventHandler">
      <summary>Handler for all work item transitioned events.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdateException">
      <summary>Exception for a failure that occurred during update of a work item.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdateException.#ctor">
      <summary>Initializes a new WorkItemUpdateException instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdateException.#ctor(System.Exception)">
      <summary>Initializes a new WorkItemUpdateException instance.</summary>
      <param name="innerException">The exception that caused this error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdateException.#ctor(System.String)">
      <summary>Initializes a new WorkItemUpdateException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkItemUpdateException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new WorkItemUpdateException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="innerException">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace">
      <summary>Describes the properties and methods of a workspace. For more information about how to use this type, see Team Foundation Build Activities.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.AddIgnoreFileExclusion(System.String,System.String)">
      <summary>Adds an ignore file exclusion to the specified .tfignore file.</summary>
      <param name="fileSpecToExclude">Ignore glob to add to the .tfignore file</param>
      <param name="ignoreFileDirectory">Directory whose .tfignore file should be used</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.AutoResolveValidConflicts(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.Conflict},Microsoft.TeamFoundation.VersionControl.Client.AutoResolveOptions)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String)">
      <summary>Checks in the specified set of pending changes to the version-control repository.</summary>
      <returns>If successful, a positive changeset number for this check-in.</returns>
      <param name="changes">The set of pending changes to check in. If you do not specify this parameter, all changes in the workspace are checked in.</param>
      <param name="comment">The comment to be associated with this check-in. May be null.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException">This workspace has been deleted.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[],Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo)">
      <summary>Checks in the specified set of pending changes to the version-control repository.</summary>
      <returns>If successful, a positive changeset number for this check-in.</returns>
      <param name="changes">The set of pending changes to check in. If you do not specify this parameter, all changes in the workspace are checked in.</param>
      <param name="comment">The comment to be associated with this check-in. May be null.</param>
      <param name="checkinNote">CheckinNote information to be associated with this check-in. The default check-in notes are for security reviewer, performance reviewer, and code reviewer. May be null.</param>
      <param name="workItemChanges">Information about associated work items. May be null.</param>
      <param name="policyOverride">Information that the user provided to override a check-in policy. May be null.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException">This workspace has been deleted.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[],Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo)">
      <summary>Checks in the specified set of pending changes to the version-control repository.</summary>
      <returns>If successful, a positive changeset number for this check-in.</returns>
      <param name="changes">The set of pending changes to check in. If you do not specify this parameter, all changes in the workspace are checked in.</param>
      <param name="author">The author of the changeset. If you do not specify this parameter, the user who is making the check-in call is identified as the author.</param>
      <param name="comment">The comment to be associated with this check-in. May be null.</param>
      <param name="checkinNote">CheckinNote information to be associated with this check-in. The default check-in notes are for security reviewer, performance reviewer, and code reviewer. May be null.</param>
      <param name="workItemChanges">Information about associated work items. May be null.</param>
      <param name="policyOverride">Information that the user provided to override a check-in policy. May be null.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException">This workspace has been deleted.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[],Microsoft.TeamFoundation.VersionControl.Client.PolicyOverrideInfo,Microsoft.TeamFoundation.VersionControl.Client.CheckinOptions)">
      <summary>Checks in the specified set of pending changes to the version-control repository.</summary>
      <returns>If successful, a positive changeset number for this check-in.</returns>
      <param name="changes">The set of pending changes to check in. If you do not specify this parameter, all changes in the workspace are checked in.</param>
      <param name="author">The author of the changeset. If you do not specify this parameter, the user who is making the check-in call is identified as the author.</param>
      <param name="comment">The comment to be associated with this check-in. May be null.</param>
      <param name="checkinNote">CheckinNote information to be associated with this check-in. The default check-in notes are for security reviewer, performance reviewer, and code reviewer. May be null.</param>
      <param name="workItemChanges">Information about associated work items. May be null.</param>
      <param name="policyOverride">Information that the user provided to override a check-in policy. May be null.</param>
      <param name="checkinOptions">One of the following enum values (None, SuppressEvent, or ValidateCheckinOwner) for the check-in.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException">This workspace has been deleted.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CheckIn(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters)">
      <summary>Checks in the specified set of pending changes to the version-control repository.</summary>
      <returns>If successful, a positive changeset number for this check-in.</returns>
      <param name="checkinParameters">An instance of WorkspaceCheckInParameters that you create to supply instructions for this check-in, such as (but not limited to) the items to check in, the comment to associate with the changeset, and the work items that are associated with this check-in.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException">This workspace has been deleted.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Cloak(System.String)">
      <summary>Marks a file or folder in the version-control repository as being excluded from this workspace.</summary>
      <param name="serverPath">The server path of the folder that is being excluded.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Comment">
      <summary>Gets the comment about the workspace.</summary>
      <returns>The comment about the workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Computer">
      <summary>Gets the name of the computer on which this workspace exists.</summary>
      <returns>The name of the computer on which this workspace exists.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.CreateMapping(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder)">
      <summary>Maps the specified server path to a location on the local disk.</summary>
      <param name="mapping">A WorkingFolder object that associates a server path with a local path.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Delete">
      <summary>Delete this workspace.</summary>
      <returns>True if the workspace was deleted successfully; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.DeleteMapping(Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder)">
      <summary>Removes a working-folder mapping from the workspace.</summary>
      <param name="mapping">A WorkingFolder object that associates a server path with a local path.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.DisambiguatedDisplayName">
      <summary>This is the formatted display name of the workspace containing both the display and unique owner names.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.DisplayName">
      <summary>Gets the formatted display name of the workspace.</summary>
      <returns>The formatted display name of the workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.EffectivePermissions">
      <summary>Gets the effective permissions that the AuthenticatedUser has on this workspace.</summary>
      <returns>The effective permissions that the AuthenticatedUser has on this workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Equals(Microsoft.TeamFoundation.VersionControl.Client.Workspace,Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Compares two Workspace objects for equivalence.</summary>
      <returns>True if the two Workspace objects are equivalent; otherwise, false.</returns>
      <param name="x">The first Workspace object to compare.</param>
      <param name="y">The second Workspace object to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Equals(System.Object)">
      <summary>Compares this Workspace object to another Workspace object.</summary>
      <returns>True if this workspace and <paramref name="obj" /> are equivalent; otherwise, false.</returns>
      <param name="obj">The second Workspace object to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.EvaluateCheckin(Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[])">
      <summary>Evaluates the pending changes to verify whether they are ready for check-in.</summary>
      <returns>The result of the evaluation.</returns>
      <param name="options">One or more of the enum values (Notes, Policies, Conflicts, or All) as options for the check-in evaluation.</param>
      <param name="allChanges">The complete set of pending changes for the workspace. If you do not specify this parameter, all pending changes are evaluated.</param>
      <param name="changes">The candidate changes for evaluation.</param>
      <param name="comment">Check-in comment for validation.</param>
      <param name="checkinNote">One or more check-in notes. </param>
      <param name="workItemChanges">The work items that are associated with this check-in.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.EvaluateCheckin2(Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.PendingChange},System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.PendingChange},System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[])">
      <summary>Evaluate the pending changes to verify whether they are ready to check in.</summary>
      <returns>The result of the evaluation.</returns>
      <param name="options">One or more of the enum values (Notes, Policies, Conflicts, or All) as options for the check-in evaluation.</param>
      <param name="allChanges">The complete set of pending changes for the workspace. If you do not specify this parameter, all pending changes are evaluated.</param>
      <param name="changes">The candidate changes for evaluation.</param>
      <param name="comment">Check-in comment for validation.</param>
      <param name="checkinNote">Check-in notes.</param>
      <param name="workItemChanges">Associated work items for this check-in.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.EvaluateCheckin2(Microsoft.TeamFoundation.VersionControl.Client.CheckinEvaluationOptions,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.PendingChange},System.String,Microsoft.TeamFoundation.VersionControl.Client.CheckinNote,Microsoft.TeamFoundation.VersionControl.Client.WorkItemCheckinInfo[])">
      <summary>Evaluate the pending changes to verify whether they are ready to check in.</summary>
      <returns>The result of the evaluation.</returns>
      <param name="options">One or more of the enum values (Notes, Policies, Conflicts, or All) as options for the check-in evaluation.</param>
      <param name="changes">The candidate changes for evaluation.</param>
      <param name="comment">Check-in comment for validation.</param>
      <param name="checkinNote">Check-in notes.</param>
      <param name="workItemChanges">Associated work items for this check-in.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Folders">
      <summary>Gets the mappings for this workspace.</summary>
      <returns>The mappings for this workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.FormatWorkspaceNameForException(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Formats the conflicting workspace name for an exception when two names conflict.</summary>
      <returns>The formatted workspace name.</returns>
      <param name="conflictingWorkspace">The workspace that conflicts with this workspace.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get">
      <summary>Request the server to update the current workspace with the most recent versions of all mapped items.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest,Microsoft.TeamFoundation.VersionControl.Client.GetOptions)">
      <summary>Request that the server update the specified items.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="request">The item and version that is being requested.</param>
      <param name="options">One of the enum values (GetAll, None, Overwrite, Preview, or Remap) for the Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest,Microsoft.TeamFoundation.VersionControl.Client.GetOptions,Microsoft.TeamFoundation.VersionControl.Client.GetFilterCallback,System.Object)">
      <summary>Request that the server update the specified items.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="request">The item and version that is being requested.</param>
      <param name="options">One or more of the enum values (None, Overwrite, GetAll, Preview, or Remap) for the Get operation.</param>
      <param name="filterCallback">A delegate to be called before the operations are processed.</param>
      <param name="userData">An object to pass to the delegate when it is called.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest[],Microsoft.TeamFoundation.VersionControl.Client.GetOptions)">
      <summary>Request that the server update the specified items.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="requests">The item and version that is being requested.</param>
      <param name="options">One of the enum values (GetAll, None, Overwrite, Preview, or Remap) for the Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest[],Microsoft.TeamFoundation.VersionControl.Client.GetOptions,Microsoft.TeamFoundation.VersionControl.Client.GetFilterCallback,System.Object)">
      <summary>Request that the server update the specified items.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="requests">The item and version that is being requested.</param>
      <param name="options">One of the enum values (GetAll, None, Overwrite, Preview, or Remap) for the Get operation.</param>
      <param name="filterCallback">A delegate to be called before the operations are processed.</param>
      <param name="userData">An object to pass to the delegate when it is called.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest[],Microsoft.TeamFoundation.VersionControl.Client.GetOptions,Microsoft.TeamFoundation.VersionControl.Client.GetFilterCallback,System.Object,System.String[])">
      <summary>Request that the server update the specified items.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="requests">The item and version that is being requested.</param>
      <param name="options">One of the enum values (GetAll, None, Overwrite, Preview, or Remap) for the Get operation.</param>
      <param name="filterCallback">A delegate to be called before the operations are processed.</param>
      <param name="userData">An object to pass to the delegate when it is called.</param>
      <param name="itemAttributeFilters">An array of versioned item properties to return with each Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest[],Microsoft.TeamFoundation.VersionControl.Client.GetOptions,Microsoft.TeamFoundation.VersionControl.Client.GetFilterCallback,System.Object,System.String[],Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@)">
      <summary>Get requests that the server update the current workspace with the specified versions of the items. The filtering delegate allows the caller to discard operations before they are processed by setting the Ignore property on each operation to be discarded.</summary>
      <returns>a GetStatus object describing the number of operations, conflicts, errors, and so on that occurred when processing the get</returns>
      <param name="requests">the items and versions being requested</param>
      <param name="options">options for the get (all, overwrite, etc.)</param>
      <param name="filterCallback">a delegate to be called by using the operations obtained from the server before the operations are processed</param>
      <param name="userData">a user-specified object passed to the delegate when it is called</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.GetRequest[],Microsoft.TeamFoundation.VersionControl.Client.GetOptions,Microsoft.TeamFoundation.VersionControl.Client.GetFilterCallback,System.Object,System.String[],System.String[],Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@)">
      <summary>Get requests that the server update the current workspace with the specified versions of the items. The filtering delegate allows the caller to discard operations before they are processed by setting the Ignore property on each operation to be discarded.</summary>
      <returns>a GetStatus object describing the number of operations, conflicts, errors, and so on that occurred when processing the get</returns>
      <param name="requests">the items and versions being requested</param>
      <param name="options">options for the get (all, overwrite, etc.)</param>
      <param name="filterCallback">a delegate to be called by using the operations obtained from the server before the operations are processed</param>
      <param name="userData">a user-specified object passed to the delegate when it is called</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.GetOptions)">
      <summary>Request that the server update the current workspace with the specified version of all mapped items.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="version">The version of the items that are being requested.</param>
      <param name="options">One of the enum values (GetAll, None, Overwrite, Preview, or Remap) for the Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Get(System.String[],Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.GetOptions)">
      <summary>Request that the server update the specified items.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="items">The items that are being requested.</param>
      <param name="version">The version of the items that are being requested.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="options">One of the enum values (GetAll, None, Overwrite, Preview, or Remap) for the Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetExtendedItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType)">
      <summary>Gets an array of extended items in the version-control repository that match the criteria that are specified in each ItemSpec.</summary>
      <returns>An array of ExtendedItem arrays, each of which contains the matching ExtendedItem instances that are associated with each specified ItemSpec.</returns>
      <param name="itemSpecs">The specifiers for each item, which may be on the server or a local computer.</param>
      <param name="deletedState">A flag that specifies whether to include items that are deleted, items that are not deleted, or both.</param>
      <param name="itemType">A flag that specifies whether to include files, folders, or both.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetExtendedItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>Gets an array of extended items in the version-control repository that match the specified criteria, for each ItemSpec.</summary>
      <returns>An array of ExtendedItem arrays, each of which contains the matching ExtendedItem instances that are associated with each specified ItemSpec.</returns>
      <param name="itemSpecs">The specifiers for each item, which may be on the server or a local computer.</param>
      <param name="deletedState">Flag that specifies whether to include deleted items, items that are not deleted, or both.</param>
      <param name="itemType">Flag that specifies whether to include files, folders, or both.</param>
      <param name="getItemsOptions">One or more of the enum values (None, Download, Unsorted, IncludeBranchInfo, IncludeSourceRenames) for getting items.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetExtendedItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions,System.String[])">
      <summary>For each input ItemSpec, retrieves a list of extended items in the repository that match the specified criteria. If the 'path' argument is a file, returns a set of items that contain just that file. If the 'path' is a folder, returns a set of items that contain all items in that folder. If the 'path' contains a wildcard character, returns a set of items in the specified folder that match the wildcard.</summary>
      <returns>An array of ExtendedItem arrays, each containing the matching ExtendedItem instances associated with each specified ItemSpec</returns>
      <param name="itemSpecs">The item specifiers for the item(s) being listed, may be server or local</param>
      <param name="deletedState">A flag representing whether to return deleted items, non-deleted items, or both</param>
      <param name="itemType">A flag representing whether to return files, folders, or both</param>
      <param name="getItemsOptions">Options</param>
      <param name="itemPropertyFilters">A list of properties to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetHashCode">
      <summary>Gets the hash code for this Workspace instance.</summary>
      <returns>The hash code for this Workspace instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetHashCode(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Gets the hash code for the specified Workspace instance.</summary>
      <returns>The hash code for the specified Workspace instance.</returns>
      <param name="obj">The Workspace for which to compute a hash code. </param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetItems(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.DeletedState,Microsoft.TeamFoundation.VersionControl.Client.ItemType,System.Boolean,Microsoft.TeamFoundation.VersionControl.Client.GetItemsOptions)">
      <summary>For each provided ItemSpec, returns a corresponding WorkspaceItemSet containing data about items in the workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetLocalItemForServerItem(System.String)">
      <summary>Gets the corresponding local item for the specified server item.</summary>
      <returns>The corresponding local item for the specified server item.</returns>
      <param name="serverItem">The server item.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if the server item is not mapped in the workspace.</exception>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException">Thrown if the server item is cloaked in the workspace.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetLocalItemForServerItem(System.String,System.Boolean)">
      <summary>Gets the corresponding local item for the specified server item.</summary>
      <returns>The corresponding local item for the specified server item.</returns>
      <param name="serverItem">The server item to translate.</param>
      <param name="detectImplicitCloak">True to detect whether the server item is implicitly cloaked in the workspace. Forces this method to return false if the server item is implicitly cloaked. False to ignore implicit cloaking.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if the server item is not mapped in the workspace.</exception>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException">Thrown if the server item is cloaked in the workspace.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetLocalVersions(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
      <summary>Gets local item information about items in a workspace.</summary>
      <returns>An array of local version lists for each item.</returns>
      <param name="itemSpecs">The specifiers for each item, which may be on the server or a local computer.</param>
      <param name="sortData">True to sort the returned data; false not to sort.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges">
      <summary>Gets the pending changes for this workspace.</summary>
      <returns>The pending changes for this workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
      <summary>Gets the pending changes for these items and sub-items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="itemSpecs">The specifiers for each item, which may be on the server or a local computer.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
      <summary>Get the pending changes for specified items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="itemSpecs">The specifiers for each item, which may be on the server or a local computer.</param>
      <param name="includeDownloadInfo">True to include the information that is required to download files; false not to download the additional information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,System.Int32,System.String)">
      <summary>Gets the pending changes for the items and sub-items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="itemSpecs">The specifiers for each item, which may be on the server or a local computer.</param>
      <param name="includeDownloadInfo">True to include the information that is required to download files; false not to download the additional information.</param>
      <param name="pageSize">The maximum number of pending changes to return in this page.</param>
      <param name="lastChange">The server path of the last pending change in the previous page.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,System.Int32,System.String,System.Boolean)">
      <summary>Gets the pending changes for the items and sub-items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="itemSpecs">The specifiers for each item, which may be on the server or a local computer.</param>
      <param name="includeDownloadInfo">True to include the information that is required to download files; false not to include it.</param>
      <param name="pageSize">The maximum number of pending changes to return in this page.</param>
      <param name="lastChange">The server path of the last pending change in the previous page.</param>
      <param name="includeMergeSourceInfo">True to include source information about rename and merge operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,System.Int32,System.String,System.Boolean,System.String[])">
      <summary>Gets all of the pending changes for these items and potentially subitems in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace</returns>
      <param name="itemSpecs">A list of item specifications for the items being queried</param>
      <param name="includeDownloadInfo">If true, the server will include the information that is required to download files. Only set this to true if you will be downloading the files by using the objects that are returned. The call will be faster and require less bandwidth when this parameter is false (default for overloads that do not specify it)</param>
      <param name="pageSize">The maximum number of pending changes to return in this page. Fewer pending changes could be returned if there are not enough pending changes for a full page.</param>
      <param name="lastChange">The server path of the last pending change in the previous page. For the first page this value should be null. For subsequent pages, the server path of the last pending change in the page should be used.</param>
      <param name="includeMergeSourceInfo">Whether to include source information about renames / merges</param>
      <param name="itemPropertyFilters">List of property names to return on the pending change object if they exist.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String)">
      <summary>Gets the pending changes for the specified item in this workspace.</summary>
      <returns>The pending changes for the specified item in this workspace.</returns>
      <param name="item">The path, local or server, to the item that is being queried.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets the pending changes for this item and sub-items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="item">The path, local or server, to the item that is being queried.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
      <summary>Gets the pending changes for this item and sub-items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="item">The path, local or server, to the item that is being queried.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="includeDownloadInfo">True to include the information that is required to download files; false not to download the additional information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String[])">
      <summary>Gets the pending changes for the items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="items">An array of paths, local or server, to the items that are being queried.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets the pending changes for the items and sub-items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="items">An array of paths, local or server, to the items that are being queried.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChanges(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
      <summary>Gets the pending changes for the items and sub-items in this workspace.</summary>
      <returns>The pending changes for the specified items in this workspace.</returns>
      <param name="items">An array of paths, local or server, to the items that are being queried.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="includeDownloadInfo">True to include the information that is required to download files; false not to download the additional information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChangesEnumerable">
      <summary>Gets an enumerable collection of the pending changes for this workspace.</summary>
      <returns>An enumerable collection of the pending changes for this workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChangesEnumerable(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
      <summary>Gets an enumerable collection of the pending changes for the items and sub-items in this workspace.</summary>
      <returns>An enumerable collection of the pending changes for the specified items in this workspace.</returns>
      <param name="itemSpecs">The specifiers for each item, which may be on the server or a local computer.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChangesEnumerable(System.String)">
      <summary>Gets an enumerable collection of the pending changes for the specified item in this workspace.</summary>
      <returns>An enumerable collection of the pending changes for the specified item in this workspace.</returns>
      <param name="item">The item for which to obtain pending changes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChangesEnumerable(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Gets an enumerable collection of pending changes for this item and sub-items in this workspace.</summary>
      <returns>An enumerable collection of pending changes for the specified items in this workspace.</returns>
      <param name="item">The path, local or server, to the item that is being queried.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChangesWithCandidates(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[]@)">
      <summary>Gets all of the pending changes and candidate changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetPendingChangesWithCandidates(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,System.String[],Microsoft.TeamFoundation.VersionControl.Client.PendingChange[]@)">
      <summary>Gets all of the pending changes and candidate changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetServerItemForLocalItem(System.String)">
      <summary>Gets the corresponding server item for the specified local item.</summary>
      <returns>The corresponding server item for the specified local item.</returns>
      <param name="localItem">The path to the local item.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if the local item is not mapped in the workspace.</exception>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemCloakedException">Thrown if the local item is cloaked in the workspace.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetTeamProjectForLocalPath(System.String)">
      <summary>Gets the TeamProject instance that contains the specified path.</summary>
      <returns>The TeamProject instance for the specified local path or a VersionControlException.</returns>
      <param name="localPath">The local path.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.VersionControlException"></exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetTeamProjectsForLocalPaths(System.String[])">
      <summary>Gets the team projects on the version-control repository that have the specified paths.</summary>
      <returns>The team projects that contain the specified paths.</returns>
      <param name="localPaths">The local paths for which to get the team projects.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetWorkingFolderForLocalItem(System.String)">
      <summary>Gets a WorkingFolder instance that describes how the specified local item is mapped in the workspace.</summary>
      <returns>A WorkingFolder instance that describes how the local path is mapped in the workspace.</returns>
      <param name="localItem">The local path for which to construct a WorkingFolder instance.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if the local item is not mapped in the workspace.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetWorkingFolderForServerItem(System.String)">
      <summary>Gets a WorkingFolder instance that describes how the specified server item is mapped in the workspace.</summary>
      <returns>A WorkingFolder instance that describes how the server path is mapped in the workspace.</returns>
      <param name="serverItem">The server path in the workspace.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if the server item is not mapped in the workspace.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.GetWorkingFolderForServerItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
      <summary>Gets a WorkingFolder instance that describes how the specified server item is mapped in the workspace.</summary>
      <returns>A WorkingFolder instance that describes how the server path is mapped by the specified WorkingFolder objects.</returns>
      <param name="serverItem">A server path that is mapped by the specified WorkingFolder objects.</param>
      <param name="folders">The WorkingFolder objects.</param>
      <exception cref="T:Microsoft.TeamFoundation.VersionControl.Client.ItemNotMappedException">Thrown if the server item is not mapped by the specified WorkingFolder objects.</exception>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.HasAdministerPermission">
      <summary>Gets a flag that indicates whether the AuthorizedUser has Administer permissions for this workspace.</summary>
      <returns>True if the AuthorizedUser has Administer permissions for this workspace; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.HasCheckInPermission">
      <summary>Gets a flag that indicates whether the AuthorizedUser has CheckIn permissions for this workspace.</summary>
      <returns>True if the AuthorizedUser has CheckIn permissions for this workspace; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.HasReadPermission">
      <summary>Gets a flag that indicates whether the AuthorizedUser has Read permissions for this workspace.</summary>
      <returns>True if the AuthorizedUser has Read permissions for this workspace; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.HasUsePermission">
      <summary>Gets a flag that indicates whether the AuthorizedUser has Use permissions for this workspace.</summary>
      <returns>True if the AuthorizedUser has Use permissions for this workspace; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.HasWorkspacePermission(Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions)">
      <summary>Verifies whether the AuthorizedUser object has the specified WorkspacePermissions objects for this workspace.</summary>
      <returns>True if the AuthorizedUser object has the requested permissions; otherwise, false.</returns>
      <param name="toCheck">WorkspacePermissions to check.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsDeleted">
      <summary>Gets a flag that indicates whether this workspace has been deleted.</summary>
      <returns>True if the workspace has been deleted; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsLocal">
      <summary>Gets a flag that indicates whether this workspace exists on the current computer.</summary>
      <returns>True if this workspace exists on the current computer; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsLocalPathMapped(System.String)">
      <summary>Verifies whether the specified local path is mapped and not cloaked.</summary>
      <returns>True if the local item is mapped and not cloaked; otherwise, false.</returns>
      <param name="localPath">The path to the local item.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsScannerAsynchronous">
      <summary>This flag applies only to local workspaces (Location == WorkspaceLocation.Local). If true, then the VersionControlServer which owns this Workspace will raise the PendingChangesChanged and GetCompleted events as soon the disk scanner notices that something has changed on disk. That is, the generation of those events is truly asynchronous. If false, the disk scanner only runs when it is required for correctness -- as a part of calls to this Workspace object's public methods. The events will still raise, but they will raise after the scanned API call which notices them, instead of as soon as they occur on disk. The default is false. Setting this flag to true may decrease performance, but it is useful for the construction of a feature such as an always-up-to-date list of pending changes in the workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsServerPathMapped(System.String)">
      <summary>Returns true if the server item is mapped and not cloaked. This method may return a false positive for implicitly cloaked server paths.</summary>
      <returns>True if the server item is mapped and not cloaked; otherwise, false.</returns>
      <param name="serverPath">The server item to check.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.IsServerPathMapped(System.String,System.Boolean)">
      <summary>Verifies whether the specified server item is mapped and not cloaked.</summary>
      <returns>True if the server item is mapped and not cloaked; otherwise, false.</returns>
      <param name="serverPath">The server item.</param>
      <param name="detectImplicitCloak">True to detect whether the server item is implicitly cloaked in the workspace. Forces this method to return false if the server item is implicitly cloaked.False to ignore implicit cloaking.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.LastAccessDate">
      <summary>Gets the date when this workspace was most recently accessed.</summary>
      <returns>The date when this workspace was most recently accessed.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.LastSavedCheckin">
      <summary>Gets or sets the metadata from the most recent unshelving or unsuccessful check-in.</summary>
      <returns>The metadata from the most recent unshelving or unsuccessful check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Location">
      <summary>Indicates the location where data (pending changes, local versions) for this workspace are stored.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Map(System.String,System.String)">
      <summary>Maps the specified server path to a location on the local disk.</summary>
      <param name="serverPath">The server path of the folder that is being mapped.</param>
      <param name="localPath">The path of the local location that is being mapped.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.MappingsAvailable">
      <summary>Returns true if the working folders held by this Workspace object are believed to be current. If true, a call to perform mapping translations will not result in a server call.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.MatchName(System.String,System.String)">
      <summary>Compares two workspace names.</summary>
      <returns>True if the names match; otherwise, false.</returns>
      <param name="workspaceName1">The first workspace name to compare.</param>
      <param name="workspaceName2">The second workspace name to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.MatchOwnerName(System.String,System.String)">
      <summary>Compares the names of two workspace owners.</summary>
      <returns>True if the names match; otherwise, false.</returns>
      <param name="workspaceOwnerName1">The first name to compare.</param>
      <param name="workspaceOwnerName2">The second name to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Merge(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Common.MergeOptionsEx)">
      <summary>Merges the source to the target.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="source">The source path of the Merge operation.</param>
      <param name="targetPath">The target path of the Merge operation.</param>
      <param name="versionFrom">The starting version. May be null.</param>
      <param name="versionTo">The ending version. May be null.</param>
      <param name="lockLevel">The lock level to apply to each item that the target specifies.</param>
      <param name="mergeOptions">One or more of the enum values in MergeOptionsEx.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Merge(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Common.MergeOptionsEx,System.String[])">
      <summary>Merges the source to the target.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="source">The source ItemSpec of the merge operation.</param>
      <param name="targetPath">The target path of the merge operation.</param>
      <param name="versionFrom">The starting version. May be null.</param>
      <param name="versionTo">The ending version. May be null.</param>
      <param name="lockLevel">The lock level to apply to each item that the target specifies.</param>
      <param name="mergeOptions">One or more of the enum values in MergeOptionsEx.</param>
      <param name="itemAttributeFilters">A list of property filters to include with the Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Merge(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Common.MergeOptionsEx,System.String[],System.String[])">
      <summary>Performs a merge of the source to the target.</summary>
      <returns>status information</returns>
      <param name="source">the source of the merge includes path (local or server), recursion and deletionId.</param>
      <param name="targetPath">the target of the merge (local or server path -- must be mapped)</param>
      <param name="versionFrom">the starting version (may be null)</param>
      <param name="versionTo">the ending version (may be null)</param>
      <param name="lockLevel">the lock level to apply to each item specified by the target</param>
      <param name="mergeOptions">the merge options specified</param>
      <param name="itemAttributeFilters">List of property filters to include with the get op</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Merge(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Merges the source to the target.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="sourcePath">The source path of the merge.</param>
      <param name="targetPath">The target path of the merge.</param>
      <param name="versionFrom">The starting version. May be null.</param>
      <param name="versionTo">The ending version. May be null.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Merge(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.MergeOptions)">
      <summary>Merges the source to the target.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="sourcePath">The source path of the merge.</param>
      <param name="targetPath">The target path of the merge.</param>
      <param name="versionFrom">The starting version. May be null.</param>
      <param name="versionTo">The ending version. May be null.</param>
      <param name="lockLevel">The lock level to apply to each item that the target specifies.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="mergeOptions">One or more of the enum values in MergeOptionsEx.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Merge(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Common.MergeOptionsEx)">
      <summary>Merges the source to the target.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="sourcePath">The source path of the merge.</param>
      <param name="targetPath">The target path of the merge.</param>
      <param name="versionFrom">The starting version. May be null.</param>
      <param name="versionTo">The ending version. May be null.</param>
      <param name="lockLevel">The lock level to apply to each item specified by the target.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="mergeOptions">One or more of the enum values in MergeOptionsEx.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.MergeContent(Microsoft.TeamFoundation.VersionControl.Client.Conflict,System.Boolean)">
      <summary>Merges content based on the requested conflict.</summary>
      <returns>True if the merge was successful; otherwise, false.</returns>
      <param name="conflict">Conflict for which to merge content.</param>
      <param name="useExternalMergeTool">True to use a registered external merge tool; otherwise, false.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Name">
      <summary>Gets the name of this workspace.</summary>
      <returns>The name of this workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.OwnerAliases">
      <summary>The aliases for the owner of this workspace excluding the display name or unique name.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.OwnerDescriptor">
      <summary>Gets the IdentityDescriptor for the workspace owner, if it is available.</summary>
      <returns>The IdentityDescriptor for the workspace owner, if it is available.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.OwnerDisplayName">
      <summary>The owner's display name</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.OwnerIdentifier">
      <summary>Gets or sets the identifier of the owner of this workspace.</summary>
      <returns>The identifier of the owner of this workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.OwnerIdentityType">
      <summary>Gets or sets the identity type of the owner of this workspace.</summary>
      <returns>The identity type of the owner of this workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.OwnerName">
      <summary>Gets the owner of this workspace.</summary>
      <returns>The owner of this workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.OwnerNameMatches(System.String)">
      <summary>Returns true if the owner name matches any of the valid owner names for this workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String)">
      <summary>Queues files or a folder for addition to the version-control repository.</summary>
      <returns>The number of files or folders that were queued for addition.</returns>
      <param name="path">A local path that represents the items to be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String,System.Boolean)">
      <summary>Queues files, folders, and subitems for addition to the version-control repository.</summary>
      <returns>The number of files or folders that were queued for addition.</returns>
      <param name="path">A local path that represents the items to be added.</param>
      <param name="isRecursive">True to recurse through subitems; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[])">
      <summary>Queues files or folders for addition to the version-control repository.</summary>
      <returns>The number of files or folders that were queued for addition.</returns>
      <param name="paths">An array of paths that represent items that should be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[],System.Boolean)">
      <summary>Queues files or folders for addition to the version-control repository.</summary>
      <returns>The number of files or folders that were queued for addition.</returns>
      <param name="paths">An array of paths that represent items that should be added.</param>
      <param name="isRecursive">True to recurse through subitems; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[],System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Queues files or folders for addition to the version-control repository.</summary>
      <returns>The number of files or folders that are queued for addition.</returns>
      <param name="paths">An array of paths that represent items that should be added.</param>
      <param name="isRecursive">True to recurse through subitems; otherwise, false.</param>
      <param name="fileType">The file type for the new item. May be null.</param>
      <param name="lockLevel">The lock level to apply to each file added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[],System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
      <summary>Queues files or folders for addition to the version-control repository.</summary>
      <returns>The number of files or folders that are queued for addition.</returns>
      <param name="paths">An array of paths that represent items that should be added.</param>
      <param name="isRecursive">True to recurse through subitems; otherwise, false.</param>
      <param name="fileType">The file type for the new item. May be null.</param>
      <param name="lockLevel">The lock level to apply to each file added.</param>
      <param name="treatMissingItemsAsFiles">True to assume that items that are missing on disk are files.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[],System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
      <summary>Queues files or folders for addition to the version-control repository.</summary>
      <returns>The number of files or folders that are queued for addition.</returns>
      <param name="paths">An array of paths that represent items that should be added.</param>
      <param name="isRecursive">True to recurse through subitems; otherwise, false.</param>
      <param name="fileType">The file type for the new item. May be null.</param>
      <param name="lockLevel">The lock level to apply to each file added.</param>
      <param name="treatMissingItemsAsFiles">True to assume that items that are missing on disk are files.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendAdd(System.String[],System.Boolean,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Queues files or folders for addition to the repository. This method can recurse through the specified path to queue subitems in addition to the items matched by the specified path.</summary>
      <returns>The number of files or folders queued for addition</returns>
      <param name="paths">A list of paths representing items that should be added.</param>
      <param name="isRecursive">A boolean value indicating whether to recurse</param>
      <param name="fileType">if non-null, the file type for the new item</param>
      <param name="lockLevel">the lock level to apply to each file added</param>
      <param name="treatMissingItemsAsFiles">whether items missing on disk should be assumed to be files</param>
      <param name="silent">Specifies whether server should return get ops</param>
      <param name="applyLocalItemExclusions">If true, applies the local item exlusion lists for items found by searching in a directory or matching a wildcard.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec)">
      <summary>Schedules a file or folder for branching.</summary>
      <returns>The number of pending changes.</returns>
      <param name="sourcePath">The path of the item to branch.</param>
      <param name="targetPath">The location of the branch that will be created.</param>
      <param name="version">The version of the source item to branch.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
      <summary>Schedules a file or folder for branching.</summary>
      <returns>The number of pending changes.</returns>
      <param name="sourcePath">The path of the item to branch.</param>
      <param name="targetPath">The location of the branch that will be created.</param>
      <param name="version">The version of the source item to branch.</param>
      <param name="lockLevel">The lock level to apply to each branched item.</param>
      <param name="updateDisk">True to populate the branch on local disk. Otherwise, the disk is not modified.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
      <summary>Schedules a file or folder for branching.</summary>
      <returns>The number of pending changes.</returns>
      <param name="sourcePath">The path of the item to branch.</param>
      <param name="targetPath">The location of the branch that will be created.</param>
      <param name="version">The version of the source item to branch.</param>
      <param name="lockLevel">The lock level to apply to each branched item.</param>
      <param name="updateDisk">True to populate the branch on local disk. Otherwise, the disk is not modified.</param>
      <param name="detectFolderAtTarget">True to search for a local folder that exists at the target and then notify the server. False not to search.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Schedules a file or folder for branching.</summary>
      <returns>The number of pending changes.</returns>
      <param name="sourcePath">The path of the item to branch.</param>
      <param name="targetPath">The location of the branch that will be created.</param>
      <param name="version">The version of the source item to branch.</param>
      <param name="lockLevel">The lock level to apply to each branched item.</param>
      <param name="updateDisk">True to populate the branch on the local disk. Otherwise, the disk is not modified.</param>
      <param name="detectFolderAtTarget">True to look for a local folder that exists at the target and then notify the server. False not to search.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendBranch(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean,System.String[])">
      <summary>Schedules a file or folder for branching (branching occurs at check in). Branching a folder is implicitly recursive.</summary>
      <returns>the number of pending changes</returns>
      <param name="sourcePath">the item to branch</param>
      <param name="targetPath">the location for the branch that will be created</param>
      <param name="version">the version to branch</param>
      <param name="lockLevel">the lock level to apply to each file checked out</param>
      <param name="updateDisk">if true, populate the branch on disk; otherwise, the disk is not modified</param>
      <param name="detectFolderAtTarget">if true, look for a local folder existing at the target and tell the server if that is the case; otherwise, do not check</param>
      <param name="silent">Specifies whether server should return get ops</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String)">
      <summary>Queues files or folders for deletion from the version-control repository.</summary>
      <returns>The number of files or folders that are queued for deletion.</returns>
      <param name="path">The local path of the item to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Queues files or folders for deletion from the version-control repository.</summary>
      <returns>The number of files or folders that are queued for deletion.</returns>
      <param name="path">The local path of the item to delete.</param>
      <param name="recursion">The recursion level.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[])">
      <summary>Queues files or folders for deletion from the version-control repository.</summary>
      <returns>The number of files or folders that are queued for deletion.</returns>
      <param name="paths">An array of local paths to the items to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Queues files or folders for deletion from the version-control repository.</summary>
      <returns>The number of files or folders that are queued for deletion.</returns>
      <param name="paths">An array of local paths to the items to delete.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Queues files or folders for deletion from the version-control repository.</summary>
      <returns>The number of files or folders that are queued for deletion.</returns>
      <param name="paths">An array of local paths to the items to delete.</param>
      <param name="recursion">True to recurse through subitems.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
      <summary>Queues files or folders for deletion from the version-control repository.</summary>
      <returns>The number of files or folders that are queued for deletion.</returns>
      <param name="paths">An array of local paths to the items to delete.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">True to delete files from the local disk.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
      <summary>Queues files or folders for deletion from the version-control repository.</summary>
      <returns>The number of files or folders that are queued for deletion.</returns>
      <param name="paths">An array of local paths to the items to delete.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">True to delete files from the local disk.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.String[])">
      <summary>Queues files or folders for deletion from the version-control repository.</summary>
      <returns>The number of files or folders that are queued for deletion.</returns>
      <param name="paths">An array of local paths to the items to delete.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">True to delete files from the local disk.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
      <param name="itemAttributeFilters">The list of properties to return with Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendDelete(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.String[],System.String[])">
      <summary>Queues files or folders for deletion from the repository and deletes them in the local workspace. This method can recurse through the specified path to queue subitems in addition to the items matched by the specified path.</summary>
      <returns>The number of files or folders queued for deletion</returns>
      <param name="paths">A list of paths, local or server, representing items to be deleted</param>
      <param name="recursion">recursion level</param>
      <param name="lockLevel">the lock level to apply to each item</param>
      <param name="updateDisk">Specifies whether the deleted files should be deleted on the local disk</param>
      <param name="silent">Specifies whether server should return get ops</param>
      <param name="itemAttributeFilters">List of properties to return with get ops</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String)">
      <summary>Checks out files for editing from the version-control repository.</summary>
      <returns>The number of files that were checked out.</returns>
      <param name="path">The path of the items to check out.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Checks out files for editing from the version-control repository.</summary>
      <returns>The number of files that were checked out.</returns>
      <param name="path">The path of the items to check out.</param>
      <param name="recursion">A flag that indicates the recursion level.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[])">
      <summary>Checks out files for editing from the version-control repository.</summary>
      <returns>The number of files that were checked out.</returns>
      <param name="paths">An array of paths to files to check out for editing.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Checks out files for editing from the version-control repository.</summary>
      <returns>The number of files that were checked out.</returns>
      <param name="paths">An array of paths of files to check out for editing.</param>
      <param name="recursion">A flag that indicates the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Checks out files for editing from the version-control repository.</summary>
      <returns>The number of files that were checked out.</returns>
      <param name="paths">An array of paths of files to check out for editing.</param>
      <param name="recursion">A flag that indicates the type of recursion.</param>
      <param name="fileType">The new file type. May be null.</param>
      <param name="lockLevel">The lock level to apply to each file that is checked out.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
      <summary>Checks out files for editing from the version-control repository.</summary>
      <returns>The number of files that were checked out.</returns>
      <param name="paths">An array of paths of files to check out for editing.</param>
      <param name="recursion">A flag that indicates the type of recursion.</param>
      <param name="fileType">The new file type. May be null.</param>
      <param name="lockLevel">The lock level to apply to each file that is checked out.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,Microsoft.TeamFoundation.VersionControl.Common.PendChangesOptions)">
      <summary>Checks out files for editing from the version-control repository.</summary>
      <returns>The number of files that were checked out.</returns>
      <param name="paths">An array of paths of files to check out for editing.</param>
      <param name="recursion">A flag that indicates the type of recursion.</param>
      <param name="fileType">The new file type. May be null.</param>
      <param name="lockLevel">The lock level to apply to each file that is checked out.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
      <param name="options">One or more of the enum values (ForceCheckOutLatestVersion, GetLatestOnCheckout, Silent, or None) in PendChangesOptions.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,Microsoft.TeamFoundation.VersionControl.Common.PendChangesOptions,System.String[])">
      <summary>Checks out files for editing from the version-control repository.</summary>
      <returns>The number of files that were checked out.</returns>
      <param name="paths">An array of paths of files to check out for editing.</param>
      <param name="recursion">A flag that indicates the type of recursion.</param>
      <param name="fileType">The new file type. May be null.</param>
      <param name="lockLevel">The lock level to apply to each file that is checked out.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
      <param name="options">One of the PendChanges options (None, GetLatestOnCheckout, Silent, or ForceCheckOutLocalVersion).</param>
      <param name="itemAttributeFilters">An array of property name filters.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendEdit(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,Microsoft.TeamFoundation.VersionControl.Common.PendChangesOptions,System.String[],System.String[])">
      <summary>Checks out files for editing from the repository. Note that fileSpec may have wildcard characters only in the last element of the path (e.g., c:\abc*z\def\xyz is not allowed, but c:\abc\def\*.cs is).</summary>
      <returns>The number of files checked out</returns>
      <param name="paths">A list of paths, local or server, to checkout for editing</param>
      <param name="recursion">recursion level</param>
      <param name="fileType">if non-null, the new file type</param>
      <param name="lockLevel">the lock level to apply to each file checked out</param>
      <param name="silent">Specifies whether server should return get ops</param>
      <param name="options">The set of PendChanges options. Some relevant flags for PendEdit are as follows: GetLatestOnCheckout: Pend an edit against the latest version of the item instead of the workspace version.</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendPropertyChange(Microsoft.TeamFoundation.VersionControl.Client.ItemProperties[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Common.PendChangesOptions,System.String[],System.String[])">
      <summary>Pends changes on the passed in paths giving each of them the passed in properties. Note, property changes are merged with existing properties on the server. To delete an existing property pass in a property that has the desired name and a value of null.</summary>
      <returns>The number of files checked out</returns>
      <param name="specs">The property changes to make</param>
      <param name="recursion">The amount of recursion to use on the items.</param>
      <param name="lockLevel">The lock level to put on the resulting pending change.</param>
      <param name="options">The set of PendChanges options. Some relevant flags for PendPropertyChange are as follows: Silent: Don't return GetOps for the changes pended.</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendPropertyChange(System.String,Microsoft.TeamFoundation.Framework.Client.PropertyValue)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendPropertyChange(System.String,Microsoft.TeamFoundation.Framework.Client.PropertyValue,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Pends changes on the passed in path giving it the passed in properties. Note, property changes are merged with existing properties on the server. To delete an existing property pass in a property that has the desired name and a value of null.</summary>
      <returns>The number of files checked out</returns>
      <param name="path">The path to pend the property changes on.</param>
      <param name="recursion">The amount of recursion to use on the items.</param>
      <param name="lockLevel">The lock level to put on the resulting pending change.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendPropertyChange(System.String,Microsoft.TeamFoundation.Framework.Client.PropertyValue[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Pends changes on the passed in path giving it the passed in properties. Note, property changes are merged with existing properties on the server. To delete an existing property pass in a property that has the desired name and a value of null.</summary>
      <returns>The number of files checked out</returns>
      <param name="path">The path to pend the property changes on.</param>
      <param name="properties">The properties to pend as changes.</param>
      <param name="recursion">The amount of recursion to use on the items.</param>
      <param name="lockLevel">The lock level to put on the resulting pending change.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendPropertyChange(System.String[],Microsoft.TeamFoundation.Framework.Client.PropertyValue,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Pends changes on the passed in paths giving each of them the passed in property. Note, property changes are merged with existing properties on the server. To delete an existing property pass in a property that has the desired name and a value of null.</summary>
      <returns>The number of files checked out</returns>
      <param name="paths">The paths to pend the property changes on.</param>
      <param name="property">The property to pend as a change.</param>
      <param name="recursion">The amount of recursion to use on the items.</param>
      <param name="lockLevel">The lock level to put on the resulting pending change.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendPropertyChange(System.String[],Microsoft.TeamFoundation.Framework.Client.PropertyValue[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Common.PendChangesOptions,System.String[],System.String[])">
      <summary>Pends changes on the passed in paths giving each of them the passed in properties. Note, property changes are merged with existing properties on the server. To delete an existing property pass in a property that has the desired name and a value of null.</summary>
      <returns>The number of files checked out</returns>
      <param name="paths">The paths to pend the property changes on.</param>
      <param name="properties">The properties to pend as changes.</param>
      <param name="recursion">The amount of recursion to use on the items.</param>
      <param name="lockLevel">The lock level to put on the resulting pending change.</param>
      <param name="options">The set of PendChanges options. Some relevant flags for PendPropertyChange are as follows: Silent: Don't return GetOps for the changes pended.</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendRename(System.String,System.String)">
      <summary>Moves or renames a file or directory.</summary>
      <returns>The number of items that were moved or renamed.</returns>
      <param name="oldPath">The current path to the item that is being moved or renamed.</param>
      <param name="newPath">The new path to the item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendRename(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
      <summary>Moves or renames a file or directory.</summary>
      <returns>The number of items that were moved or renamed.</returns>
      <param name="oldPath">The current path to the item being renamed.</param>
      <param name="newPath">The new path to the item.</param>
      <param name="lockLevel">The level of locking for the pending change.</param>
      <param name="updateDisk">True to update the local disk according to the pending changes. False to preview the number of items that were changed but not modify the disk.</param>
      <param name="detectFolderAtTarget">True to search for a local folder that exists at the target and then notify the server. False not to search.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendRename(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,Microsoft.TeamFoundation.VersionControl.Common.PendChangesOptions,System.String[])">
      <summary>Moves or renames a file or directory. The source may contain wildcard characters if the target is a directory. The target may never have wildcard characters. If the target is an existing directory, the source will be moved to be a child of the target.</summary>
      <returns>The number of items renamed</returns>
      <param name="oldPath">The current path, local or server, to the item being renamed.</param>
      <param name="newPath">The new path, local or server, for the item</param>
      <param name="lockLevel">The level of locking for the pending change</param>
      <param name="updateDisk">if true, the local disk is updated according to the pending changes; if false, the disk is not modified and changes are not acknowledged</param>
      <param name="detectFolderAtTarget">if true, look for a local folder existing at the target and tell the server if that is the case; otherwise, do not check</param>
      <param name="options">Options for the call to PendChanges</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendRename(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,Microsoft.TeamFoundation.VersionControl.Common.PendChangesOptions,System.String[],System.String[])">
      <summary>Moves or renames a file or directory. The source may contain wildcard characters if the target is a directory. The target may never have wildcard characters. If the target is an existing directory, the source will be moved to be a child of the target.</summary>
      <returns>The number of items renamed</returns>
      <param name="oldPath">The current path, local or server, to the item being renamed.</param>
      <param name="newPath">The new path, local or server, for the item</param>
      <param name="lockLevel">The level of locking for the pending change</param>
      <param name="updateDisk">if true, the local disk is updated according to the pending changes; if false, the disk is not modified and changes are not acknowledged</param>
      <param name="detectFolderAtTarget">if true, look for a local folder existing at the target and tell the server if that is the case; otherwise, do not check</param>
      <param name="options">Options for the call to PendChanges</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendRename(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Moves or renames a file or directory.</summary>
      <returns>The number of items that were moved or renamed.</returns>
      <param name="oldPath">The current path to the item that is being renamed.</param>
      <param name="newPath">The new path for the item.</param>
      <param name="lockLevel">The level of locking for the pending change.</param>
      <param name="updateDisk">True to update the local disk according to the pending changes. False to preview the number of items that were changed but not modify the disk.</param>
      <param name="detectFolderAtTarget">True to search for a local folder that exists at the target and notify the server. False not to search.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendRename(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean,System.String[])">
      <summary>Moves or renames a file or directory.</summary>
      <returns>The number of items that were moved or renamed.</returns>
      <param name="oldPath">The current path to the item that is being renamed.</param>
      <param name="newPath">The new path for the item.</param>
      <param name="lockLevel">The level of locking for the pending change.</param>
      <param name="updateDisk">True to update the local disk according to the pending changes. False to preview the number of items that were changed but not modify the disk.</param>
      <param name="detectFolderAtTarget">True to search for a local folder that exists at the target and notify the server. False not to search.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
      <param name="itemAttributeFilters">An array of versioned item properties to return with each Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
      <summary>Queues deleted files or folders for restoration to the version-control repository.</summary>
      <returns>The number of files that were queued for restoration.</returns>
      <param name="itemSpecs">The path to the items to restore.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">True to write restored items to the local disk. False to leave the local disk unaltered.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
      <summary>Queues deleted files or folders for restoration from the version-control repository.</summary>
      <returns>The number of files that were queued for restoration.</returns>
      <param name="itemSpecs">An array of deleted items to restore.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">Specifies whether the files or folders should be restored to the local disk.</param>
      <param name="detectFolderAtTarget">True to search for a local folder that exists at the target.  False not to search.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Queues deleted files or folders for restoration to the version-control repository.</summary>
      <returns>The number of files that were queued for restoration.</returns>
      <param name="itemSpecs">An array of deleted items to restore to the repository.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">Specifies whether the files or folders should be restored to the local disk.</param>
      <param name="detectFolderAtTarget">True to search for a local folder that exists at the target. False not to search.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32)">
      <summary>Queues deleted files or folders for restoration to the version-control repository.</summary>
      <returns>The number of files that were queued for restoration.</returns>
      <param name="path">The path to the items to restore.</param>
      <param name="deletionId">The deletion ID of the item to restore.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String)">
      <summary>Queues deleted files or folders for restoration to the version-control repository.</summary>
      <returns>The number of pending changes.</returns>
      <param name="path">The path to the items to restore.</param>
      <param name="deletionId">The deletion ID of the item to restore.</param>
      <param name="newPath">Optional new path for the item to restore.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean)">
      <summary>Queues deleted files or folders for restoration to the version-control repository.</summary>
      <returns>The number of pending changes.</returns>
      <param name="path">The path to the items to restore.</param>
      <param name="deletionId">The deletion ID of the item to restore.</param>
      <param name="newPath">Optional new path for the item to restore.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">True to write restored items to the local disk. False to leave the local disk unaltered.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean)">
      <summary>Queues deleted files or folders for restoration to the version-control repository.</summary>
      <returns>The number of pending changes.</returns>
      <param name="path">The path to the items to restore.</param>
      <param name="deletionId">He deletion ID of the item to restore.</param>
      <param name="newPath">Optional new path for the item to restore.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">True to write restored items to the local disk. False to leave the local disk unaltered.</param>
      <param name="detectFolderAtTarget">True to search for a local folder that exists at the target.  False not to search.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean)">
      <summary>Queues deleted files or folders for restoration to the version-control repository.</summary>
      <returns>The number of pending changes.</returns>
      <param name="path">The path to the items to restore.</param>
      <param name="deletionId">The deletion IDs of the items to restore.</param>
      <param name="newPath">Optional new path for the items to restore.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">True to write restored items to the local disk. False to leave local disk unaltered.</param>
      <param name="detectFolderAtTarget">True to search for a local folder existing at the target.  False not to search.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean,System.String[])">
      <summary>Queues deleted files or folders for restoration to the version-control repository.</summary>
      <returns>The number of pending changes.</returns>
      <param name="path">The path to the items to restore.</param>
      <param name="deletionId">The deletion IDs of the items to restore.</param>
      <param name="newPath">Optional new path for the items to restore.</param>
      <param name="lockLevel">The lock level to apply to each item.</param>
      <param name="updateDisk">True to write restored items to the local disk. False to leave local disk unaltered.</param>
      <param name="detectFolderAtTarget">True to search for a local folder existing at the target.  False not to search.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
      <param name="itemAttributeFilters">A list of the property name filters to return with Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PendUndelete(System.String,System.Int32,System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,System.Boolean,System.Boolean,System.Boolean,System.String[],System.String[])">
      <summary>Queues files or folders for undeletion from the repository and optionally restores them in the current workspace.</summary>
      <returns>the number of pending changes</returns>
      <param name="path">the items to undelete (multiple with wildcard characters); both server and local paths are allowed</param>
      <param name="deletionId">deletion id for the item to undelete</param>
      <param name="newPath">optional new path for the item to undelete</param>
      <param name="lockLevel">the lock level to apply to each item</param>
      <param name="updateDisk">for undelete, whether to retrieve undeleted items from the repository and create directories on disk; when false, the local disk is not changed</param>
      <param name="detectFolderAtTarget">if true, look for a local folder existing at the target and tell the server if that is the case; otherwise, do not check</param>
      <param name="silent">Specifies whether server should return get ops</param>
      <param name="itemAttributeFilters">List of the property name filters to return with get ops.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.PermissionsProfile">
      <summary>Gets the effective permissions that the AuthenticatedUser has on this workspace.</summary>
      <returns>The effective permissions that the AuthenticatedUser has on this workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QualifiedName">
      <summary>This is the formatted unique display name of the workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryConflicts(System.String[],System.Boolean)">
      <summary>Gets the array of conflicts that match the specified path filters.</summary>
      <returns>The array of conflicts that match the specified paths.</returns>
      <param name="pathFilters">The paths to filter the conflicts.</param>
      <param name="recursive">True to recursively match the path with the filters.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String,System.Boolean)">
      <summary>Gets the pending changes for the specified query.</summary>
      <returns>An array of pending sets with the pending changes for the server items.</returns>
      <param name="itemSpecs">The items to query for pending changes.</param>
      <param name="queryWorkspaceName">The workspace name. May be null.</param>
      <param name="queryUserName">The user name. May be null.</param>
      <param name="includeDownloadInfo">True to include the information that is required to download files. False not to include the additional information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryPendingSets(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String,System.String,System.Boolean,System.String[])"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryPendingSets(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,System.String,System.Boolean)">
      <summary>Gets the pending changes for the specified query.</summary>
      <returns>An array of pending sets with the pending changes for the server items.</returns>
      <param name="items">The item paths to query for pending changes.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="queryWorkspaceName">The workspace name. May be null.</param>
      <param name="queryUserName">The user name. May be null.</param>
      <param name="includeDownloadInfo">True to include the information that is required to download files. False not to include the additional information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryPendingSets(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.String,System.String,System.Boolean,System.String[])">
      <summary>Gets the pending changes for the specified query.</summary>
      <returns>an array of pending sets with the pending changes for the server items</returns>
      <param name="items">the paths to query for pending changes</param>
      <param name="recursion">Recursion level for querying pending changes</param>
      <param name="queryWorkspaceName">the workspace name (may be null)</param>
      <param name="queryUserName">the user name (may be null), which is the workspace owner if the workspace name is not null</param>
      <param name="includeDownloadInfo">If true, the server will include the information that is required to download files. Only set this to true if you will be downloading the files by using the objects that are returned. The call will be faster and require less bandwidth when this parameter is false (default for overloads that do not specify it)</param>
      <param name="itemPropertyFilters">A list of property names that indicate which item properties should be returned for these pending changes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
      <summary>Gets the shelved changes for the specified query.</summary>
      <returns>An array of pending sets with the shelved changes.</returns>
      <param name="shelvesetName">The shelveset name. May be null.</param>
      <param name="shelvesetOwner">The user name. May be null.</param>
      <param name="itemSpecs">The items for which to obtain shelved changes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
      <summary>Gets the shelved changes for the specified query.</summary>
      <returns>An array of pending sets with the pending changes for the shelved changes.</returns>
      <param name="shelvesetName">The shelveset name. May be null.</param>
      <param name="shelvesetOwner">The user name. May be null.</param>
      <param name="itemSpecs">The items for which to obtain shelved changes.</param>
      <param name="includeDownloadInfo">True to include the information that is required to download files. False not to include.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueryShelvedChanges(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,System.String[])">
      <summary>Gets the shelved changes for the specified query.</summary>
      <returns>an array of pending sets with the pending changes for the shelved changes</returns>
      <param name="shelvesetName">the shelveset name (may be null)</param>
      <param name="shelvesetOwner">the user name (may be null), which is the shelveset owner if the shelveset name is not null</param>
      <param name="itemSpecs">the items</param>
      <param name="includeDownloadInfo">If true, the server will include the information needed to download files. Only set this to true if you will be downloading the files by using the objects that are returned. The call will be faster and require less bandwidth when this parameter is false (default for overloads that do not specify it)</param>
      <param name="itemPropertyFilters">List of property names to retrieve for the PendingChanges.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.QueueForEdit(System.String)">
      <summary>Marks the provided local item for check-out the next time we would make a call to the server. This method is only supported for server workspaces.</summary>
      <param name="localItem">Local item to check out</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Reconcile(System.Boolean,System.Boolean@)">
      <summary>Reconciles a local workspace with the server.</summary>
      <param name="reconcileMissingLocalItems">True to remove local version rows for items that no longer exist on disk</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Refresh">
      <summary>Refreshes this Workspace instance from the server.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.RefreshIfNeeded">
      <summary>Refreshes this Workspace instance from the server if properties that cannot be cached are stale or have not been loaded. Properties that cannot be cached include working folders and effective permissions.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.RefreshMappings">
      <summary>Gets the current set of mappings for this Workspace instance from the server.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.RemoveLocalConflict(Microsoft.TeamFoundation.VersionControl.Client.Conflict)">
      <summary>Removes a local conflict from the list of conflicts on the server for this workspace.</summary>
      <param name="conflict">The local conflict to remove.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.RemoveLocalConflicts(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.Conflict})">
      <summary>Removes local conflicts from the server's list of conflicts for this workspace.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.RepositoryComparer">
      <summary>Gets a comparer for repositories that is culture-sensitive and case-insensitive.</summary>
      <returns>A comparer for repositories.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ResolveConflict(Microsoft.TeamFoundation.VersionControl.Client.Conflict)">
      <summary>Attempt to resolve a conflict based on its Resolution property.</summary>
      <param name="conflict">The conflict to resolve.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ResolveConflict(Microsoft.TeamFoundation.VersionControl.Client.Conflict,Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@)">
      <summary>Attempt to resolve a conflict based on its Resolution property.</summary>
      <param name="conflict">The conflict to resolve.</param>
      <param name="resolvedConflicts">The array of conflicts that were deleted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ResolveConflict(Microsoft.TeamFoundation.VersionControl.Client.Conflict,Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@,System.String[])">
      <summary>Attempt to resolve a conflict based on its Resolution property.</summary>
      <param name="conflict">The conflict to resolve.</param>
      <param name="resolvedConflicts">The array of conflicts that were deleted.</param>
      <param name="itemAttributeFilters">An array of versioned item properties to return with each Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ResolveConflict(Microsoft.TeamFoundation.VersionControl.Client.Conflict,Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@,System.String[],System.String[])">
      <summary>Attempts to resolve a conflict according to the conflict's Resolution property. If the conflict is successfully resolved, the IsResolved property will be true. If resolving this conflict caused other conflicts to be deleted besides the current conflict, then the list of other deleted conflicts will be returned in resolvedConflicts.</summary>
      <param name="conflict">the conflict to resolve</param>
      <param name="resolvedConflicts">The other Conflicts that were deleted</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ResolveConflicts(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.Conflict},System.String[],Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@)">
      <summary>Attempts to resolve a conflict according to the conflict's Resolution property. If the conflict is successfully resolved, the IsResolved property will be true. If resolving these conflicts caused other conflicts to be deleted besides the current conflicts, then the list of other deleted conflicts will be returned in resolvedConflicts. Note: For this method, all resolution options for the conflicts must be the same.</summary>
      <param name="conflicts">the conflicts to resolve</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
      <param name="resolvedConflicts">The other Conflicts that were deleted</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ResolveConflicts(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.Conflict},System.String[],System.String[],Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@)">
      <summary>Attempts to resolve a conflict according to the conflict's Resolution property. If the conflict is successfully resolved, the IsResolved property will be true. If resolving these conflicts caused other conflicts to be deleted besides the current conflicts, then the list of other deleted conflicts will be returned in resolvedConflicts. Note: For this method, all resolution options for the conflicts must be the same.</summary>
      <param name="conflicts">the conflicts to resolve</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
      <param name="resolvedConflicts">The other Conflicts that were deleted</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Rollback(Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Common.RollbackOptions)">
      <summary>Pends a rollback for all changes between the specified versions.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="versionFrom">The version to roll back from (later version).</param>
      <param name="versionTo">The version to roll back to (earlier version).</param>
      <param name="lockLevel">The lock level to apply to each item that is being rolled back.</param>
      <param name="options">Options to use.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Rollback(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Common.RollbackOptions,System.String[])">
      <summary>Pends a rollback for changes on a certain path, throughout the specified versions.</summary>
      <returns>A GetStatus object that indicates how many operations, conflicts, errors, and so on occurred when the Get operation was being processed.</returns>
      <param name="paths">The array of path filters to apply.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="itemSpecVersion">The version spec that identifies the item to which the user is referring.</param>
      <param name="versionFrom">The version to roll back from (later version).</param>
      <param name="versionTo">The version to roll back to (earlier version).</param>
      <param name="lockLevel">The lock level to apply to each item that is being rolled back.</param>
      <param name="options">Options to use.</param>
      <param name="itemAttributeFilters">The array of properties to include for each Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Rollback(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.VersionSpec,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Common.RollbackOptions,System.String[],System.String[])">
      <summary>Pends a rollback for changes which occurred to a certain path, in the specified versions</summary>
      <returns>Status information</returns>
      <param name="paths">Array of path filters to apply</param>
      <param name="itemSpecVersion">The version spec used to identify the item the user is referring to</param>
      <param name="versionFrom">The version we are rolling back from</param>
      <param name="versionTo">The version we are rolling back to</param>
      <param name="lockLevel">The lock level to apply to each item being rolled back</param>
      <param name="options">Options to use.</param>
      <param name="itemAttributeFilters">Array of properties to include for each get operation.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SecurityToken">
      <summary>Gets the security token of this workspace for the workspace security namespace.</summary>
      <returns>The security token of this workspace for the workspace security namespace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Applies the selected lock level to the specified path.</summary>
      <returns>The number of locks that are set.</returns>
      <param name="path">The path on which to set the lock.</param>
      <param name="lockLevel">The lock level to apply.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String,Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Applies the selected lock level to the specified path.</summary>
      <returns>The number of locks that are set.</returns>
      <param name="path">The path on which to set the lock.</param>
      <param name="lockLevel">The lock level to apply.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel)">
      <summary>Applies the selected lock level to the specified paths.</summary>
      <returns>The number of locks that are set.</returns>
      <param name="paths">The array of paths on which to set the lock.</param>
      <param name="lockLevel">The lock level to apply.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Applies the selected lock level to the specified paths.</summary>
      <returns>The number of locks that are set.</returns>
      <param name="paths">The array of paths on which to set the lock.</param>
      <param name="lockLevel">The lock level to apply.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
      <summary>Applies the selected lock level to the specified paths.</summary>
      <returns>The number of locks that are set.</returns>
      <param name="paths">The array of paths on which to set the lock.</param>
      <param name="lockLevel">The lock level to apply.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean,System.String[])">
      <summary>Applies the selected lock level to the specified paths.</summary>
      <returns>The number of locks that are set.</returns>
      <param name="paths">The array of paths on which to set the lock.</param>
      <param name="lockLevel">The lock level to apply.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="silent">Specifies whether the server should return Get operations.</param>
      <param name="itemAttributeFilters">An array of versioned item properties to return with each Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetLock(System.String[],Microsoft.TeamFoundation.VersionControl.Client.LockLevel,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean,System.String[],System.String[])">
      <summary>Apply the selected lock level to the specified paths.</summary>
      <returns>number of locks set</returns>
      <param name="paths">paths to set the lock on</param>
      <param name="lockLevel">requested lock for the paths</param>
      <param name="recursion">recursion level</param>
      <param name="silent">Specifies whether server should return get ops</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetPendingChangeAttribute(System.Collections.Generic.List{Microsoft.TeamFoundation.Framework.Client.ArtifactPropertyValue})">
      <summary>Sets properties on existing pending changes</summary>
      <param name="pendingChangePropertyValues">A list of artifact property values to set.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.SetPendingChangeProperty(System.Collections.Generic.List{Microsoft.TeamFoundation.Framework.Client.ArtifactPropertyValue})">
      <summary>Sets properties on existing pending changes.</summary>
      <param name="pendingChangePropertyValues">A list of artifact property values to set.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Shelve(Microsoft.TeamFoundation.VersionControl.Client.Shelveset,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[],Microsoft.TeamFoundation.VersionControl.Client.ShelvingOptions)">
      <summary>Collects a set of pending changes and shelves them to the server.</summary>
      <param name="shelveset">The shelveset to create.</param>
      <param name="changes">An array of pending changes to shelve.</param>
      <param name="options">One or more of the enum values (Move, None, or Replace) for the shelving command.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.System#IComparable#CompareTo(System.Object)">
      <summary>Compares two workspace objects, comparing first the repository URLs, and then the workspace names, and finally the owners.</summary>
      <returns>-1, 0, 1 for this workspace being less than, equal to, or greater than the specified workspace, respectively.</returns>
      <param name="obj">The workspace to which this workspace will be compared.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.ToString">
      <summary>Creates a user-readable string that describes the properties of this workspace.</summary>
      <returns>A user-readable string that describes the properties of this workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetLocalItemForServerItem(System.String)">
      <summary>Gets the corresponding local item for the specified server item.</summary>
      <returns>The corresponding local item for the specified server item.</returns>
      <param name="serverItem">The server item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetLocalItemForServerItem(System.String,System.Boolean)">
      <summary>Gets the corresponding local item for the specified server item.</summary>
      <returns>The corresponding local item for the specified server item.</returns>
      <param name="serverItem">The server item.</param>
      <param name="detectImplicitCloak">True to detect whether the server item is implicitly cloaked in the workspace. Forces this method to return false if the server item is implicitly cloaked.  False to ignore implicit cloaking.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetServerItemForLocalItem(System.String)">
      <summary>Gets the corresponding server item for the specified local item. Does not throw exceptions.</summary>
      <returns>The corresponding server item for the specified local item.</returns>
      <param name="localItem">The path to the local item.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetServerItemForLocalItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
      <summary>Gets the corresponding server item for the specified local item.</summary>
      <returns>The corresponding server item for the specified local item.</returns>
      <param name="localItem">The local path to the item.</param>
      <param name="folders">The WorkingFolder objects that are used to translate the path.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetServerItemForLocalItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],System.Boolean)">
      <summary>Gets the corresponding server item for a local item. Does not throw ItemNotMappedException or ItemCloakedException.</summary>
      <returns>The corresponding server item for the local item</returns>
      <param name="localItem">The local item to translate</param>
      <param name="folders">The WorkingFolder objects to use to translate the path</param>
      <param name="detectImplicitCloak">If true, detect and return null if the local item is implicitly cloaked in the workspace</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetServerItemForLocalItem(System.String,System.Boolean)">
      <summary>Gets the corresponding server item for a local item. Does not throw ItemNotMappedException or ItemCloakedException.</summary>
      <returns>The corresponding server item for the local item</returns>
      <param name="localItem">The local item to translate</param>
      <param name="detectImplicitCloak">If true, detect and return null if the local item is implicitly cloaked in the workspace</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetWorkingFolderForLocalItem(System.String)">
      <summary>Gets a WorkingFolder instance that describes how the local item is mapped in the workspace.</summary>
      <returns>A WorkingFolder instance that describes how the local path is mapped in the workspace. Null if the specified local item is not mapped in the workspace.</returns>
      <param name="localItem">The local path for which to construct a WorkingFolder instance.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetWorkingFolderForServerItem(System.String)">
      <summary>Gets a WorkingFolder instance that describes how the specified WorkingFolder objects map the server item.</summary>
      <returns>A WorkingFolder instance that describes how the specified WorkingFolder objects map the server path in the workspace. Null if the server path is not mapped.</returns>
      <param name="serverItem">A server path in the workspace.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetWorkingFolderForServerItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
      <summary>Gets a WorkingFolder instance that describes how the specified WorkingFolder objects map the server item.</summary>
      <returns>A WorkingFolder instance that describes how the specified WorkingFolder objects map the server path. Null if the server path is not mapped.</returns>
      <param name="serverItem">A server path that the provided WorkingFolder objects map.</param>
      <param name="folders">The WorkingFolder objects.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.TryGetWorkingFolderForServerItem(System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],System.Boolean)">
      <summary>Gets a WorkingFolder instance that describes how the specified WorkingFolder objects map the server item.</summary>
      <returns>A WorkingFolder instance that describes how the specified WorkingFolder objects map the server path. Null if the server path is not mapped.</returns>
      <param name="serverItem">A server path that is mapped by the provided WorkingFolder objects.</param>
      <param name="folders">The WorkingFolder objects.</param>
      <param name="matchPattern">If false, WorkingFolder objects that have RecursionType.OneLevel are interpreted as having RecursionType.Full.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="itemSpecs">The array of item specifiers for which to revert pending changes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean)">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="itemSpecs">The array of item specifiers for which to revert pending changes.</param>
      <param name="updateDisk">True to update the items on the local disk for the Undo operation.  False not to modify the disk.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,System.String[])">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="itemSpecs">The array of item specifiers for which to revert pending changes.</param>
      <param name="updateDisk">True to update the items on the local disk for the Undo operation.  False not to modify the disk.</param>
      <param name="itemAttributeFilters">An array of versioned item properties to return with each Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.Boolean,System.String[],System.String[])">
      <summary>Undo the pending changes for the specified items. The items may contain wildcard characters.</summary>
      <returns>returns the number of undone changes</returns>
      <param name="itemSpecs">the items for which to undo pending changes</param>
      <param name="updateDisk">if true, update the items on disk for the undo; otherwise, the disk is not modified</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="pendingChanges">The pending changes to revert.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String)">
      <summary>Revert the pending changes for the specified item.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="item">The item for which to revert pending changes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="item">The item for which to revert pending changes.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String[])">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="items">The array of item specifiers for which to revert pending changes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType)">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="items">The array of item specifiers for which to revert pending changes.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String[],Microsoft.TeamFoundation.VersionControl.Client.RecursionType,System.Boolean)">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="items">The array of item specifiers for which to revert pending changes.</param>
      <param name="recursion">A flag that specifies the type of recursion.</param>
      <param name="updateDisk">True to update the items on the local disk for the Undo operation.  False not to modify the disk.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Undo(System.String[],System.Boolean)">
      <summary>Revert the pending changes for the specified items.</summary>
      <returns>The number of reverted changes.</returns>
      <param name="items">The array of item specifiers for which to revert pending changes.</param>
      <param name="updateDisk">True to update the items on the local disk for the Undo operation.  False not to modify the disk.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.UnqueueForEdit(System.String)">
      <summary>Unmarks the provided local item for check-out the next time we would make a call to the server. This method is only supported for server workspaces.</summary>
      <param name="localItem">Local item which should no longer be queued for check-out</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Unshelve(System.String,System.String)">
      <summary>Reproduces in this workspace a set of pending changes that have been previously shelved to the server.</summary>
      <returns>The shelveset that was unshelved.</returns>
      <param name="shelvesetName">The name of the shelveset to unshelve.</param>
      <param name="shelvesetOwner">The name of the user who created the shelveset.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Unshelve(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[])">
      <summary>Reproduces in this workspace a set of pending changes that have been previously shelved to the server.</summary>
      <returns>The shelveset that was unshelved.</returns>
      <param name="shelvesetName">The name of the shelveset to unshelve.</param>
      <param name="shelvesetOwner">The name of the user who created the shelveset.</param>
      <param name="items">An array of files, folders, or both in the shelveset that should be unshelved. Specify null for all files and folders.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Unshelve(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.PendingChange[]@)">
      <summary>Reproduces in this workspace a set of pending changes that have been previously shelved to the server.</summary>
      <returns>The shelveset that was unshelved.</returns>
      <param name="shelvesetName">The name of the shelveset to unshelve.</param>
      <param name="shelvesetOwner">The name of the user who created the shelveset.</param>
      <param name="items">An array of files, folders, or both in the shelveset that should be unshelved. Specify null for all files and folders.</param>
      <param name="changes">The array of unshelved pending changes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Unshelve(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],Microsoft.TeamFoundation.VersionControl.Client.PendingChange[]@,System.String[])">
      <summary>Reproduces in this workspace a set of pending changes that have been previously shelved to the server.</summary>
      <returns>The shelveset that was unshelved.</returns>
      <param name="shelvesetName">The name of the shelveset to unshelve.</param>
      <param name="shelvesetOwner">The name of the user who created the shelveset.</param>
      <param name="items">An array of files, folders, or both in the shelveset that should be unshelved. Specify null for all files and folders.</param>
      <param name="changes">The array of unshelved pending changes.</param>
      <param name="itemAttributeFilters">An array of versioned item properties to return with each Get operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Unshelve(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String[],System.String[],System.String[],System.Boolean,System.Boolean,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[]@,Microsoft.TeamFoundation.VersionControl.Client.Conflict[]@)">
      <summary>Reproduces in this workspace a set of pending changes that have been previously shelved to the server.</summary>
      <returns>The shelveset that was unshelved</returns>
      <param name="shelvesetName">The name of the shelveset to unshelve</param>
      <param name="shelvesetOwner">The name of the user who created the shelveset</param>
      <param name="items">A list of files and folders in the shelveset that should be unshelved or null for all</param>
      <param name="itemAttributeFilters">A list of versioned item properties to return with each get operation</param>
      <param name="shelvesetPropertyNameFilters">The list of properties to be returned on the shelvesets. To get all properties pass a single filter that is just "*".</param>
      <param name="merge">True if "merge" should be performed when unshelving. This will file merge and version conflicts for items that have conflicting pending changes and different pended versions respectively.</param>
      <param name="noAutoResolve">Prevents any conflicts from being auto resolved even if the option is set in the registry.</param>
      <param name="changes">Return the set of unshelved pending changes</param>
      <param name="conflicts">The list of conflicts that were generated by the unshelve operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Update(Microsoft.TeamFoundation.VersionControl.Client.UpdateWorkspaceParameters)">
      <summary>Update a workspace using an UpdateWorkspaceParameters object as the source for update instructions. Only those properties on the UpdateWorkspaceParameters that you want to change must be populated.</summary>
      <param name="updateWorkspaceParameters">UpdateWorkspaceParameters object by using new values set</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Update(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[])">
      <summary>Updates the properties of a workspace.</summary>
      <param name="newName">The new name.</param>
      <param name="newComment">The new comment.</param>
      <param name="newMappings">The new mappings.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Update(System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],System.Boolean)">
      <summary>Update the properties of a workspace.</summary>
      <param name="newName">The new name.</param>
      <param name="newComment">The new comment.</param>
      <param name="newMappings">The new mappings.</param>
      <param name="removeUnparentedCloaks">True to remove mapping errors that can be safely ignored.  False not to remove mapping errors.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Update(System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],System.Boolean)">
      <summary>Updates the properties of a workspace.</summary>
      <param name="newName">The new name.</param>
      <param name="newOwner">The new owner.</param>
      <param name="newComment">The new comment.</param>
      <param name="newMappings">The new mappings.</param>
      <param name="removeUnparentedCloaks">True to remove mapping errors that can be safely ignored.  False not to remove mapping errors.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.Update(System.String,System.String,System.String,System.String,Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder[],Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile,System.Boolean)">
      <summary>Updates the properties of a workspace.</summary>
      <param name="newName">The new name.</param>
      <param name="newOwner">The new owner.</param>
      <param name="newComment">The new comment.</param>
      <param name="newComputer">The new computer name.</param>
      <param name="newMappings">The new mappings.</param>
      <param name="newPermissionProfile">The new permission profile.</param>
      <param name="removeUnparentedCloaks">True to remove mapping errors that can be safely ignored.  False not to remove mapping errors.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.UpdateComputerName">
      <summary>Updates the name of the computer in the repository.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.UpdateLastSavedCheckin(Microsoft.TeamFoundation.VersionControl.Client.Shelveset)">
      <summary>Updates the information from the most recent tried check-in with the information from the shelveset.</summary>
      <param name="shelveset">The shelveset that contains the relevant information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workspace.UpdateLastSavedCheckin(Microsoft.TeamFoundation.VersionControl.Client.Shelveset,Microsoft.TeamFoundation.VersionControl.Client.PendingChange[])">
      <summary>Updates the information from the most recent tried check-in with the information from the shelveset and makes sure that the specified set of pending changes have a checked state set.</summary>
      <param name="shelveset">The shelveset that contains the relevant metadata.</param>
      <param name="unshelvedChanges">The pending changes that were unshelved.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.VersionControlServer">
      <summary>Gets the VersionControlServer object that hosts this workspace.</summary>
      <returns>The VersionControlServer object that hosts this workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workspace.WorkspaceOptions">
      <summary>The options for the workspace (including the SetFileTimeToCheckin flag).</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCancelEventArgs">
      <summary>Arguments for a workspace cancel event.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCancelEventArgs.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Initializes a new WorkspaceCancelEventArgs instance.</summary>
      <param name="workspace">The workspace to which to associate this instance.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCancelEventArgs.Cancel">
      <summary>Gets or sets a flag that describes whether the workspace operation was canceled.</summary>
      <returns>True if a cancellation occurred; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCancelEventHandler">
      <summary>Handler for a workspace cancel event.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters">
      <summary>Represents the information that is required to check in pending changes located in a workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.#ctor(Microsoft.TeamFoundation.VersionControl.Client.ItemSpec[],System.String)">
      <summary>Initializes a new WorkspaceCheckInParameters instance.</summary>
      <param name="itemSpecs">The work items to check-in.</param>
      <param name="comment">A comment about the check-in.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.#ctor(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.PendingChange},System.String)">
      <summary>Initializes a new WorkspaceCheckInParameters instance.</summary>
      <param name="pendingChanges">The pending changes to check-in.</param>
      <param name="comment">A comment about the check-in.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.AssociatedWorkItems">
      <summary>Gets or sets the work items associated with this check-in.</summary>
      <returns>The work items associated with this check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.CheckinDate">
      <summary>Optionally, the checkin date to use for the checkin It must be between the date of the last committed checkin and the current server time.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.CheckinNotes">
      <summary>Gets or sets the check-in note describing this check-in.</summary>
      <returns>The check-in note describing this check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.Comment">
      <summary>Gets or sets a comment about the check-in.</summary>
      <returns>A comment about the check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.ItemSpecs">
      <summary>Gets the array of items to check-in.</summary>
      <returns>The array of items to check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.NoConflictsCheckForGatedCheckin">
      <summary>This flag only affects the server's behavior when the server paths being checked in affect a gated build definition. In this case the server will ordinarily call CheckPendingChanges before shelving the workspace and throwing back a GatedCheckinException. If the call to CheckPendingChanges creates conflicts, then no GatedCheckinException will be thrown; instead CheckIn fails and informs the user that they must resolve their conflicts. If this flag is specified, this call to CheckPendingChanges is skipped. This allows the gated checkin shelveset to be created even when the items being checked in are not at latest, for example. The build agent workspace will unshelve the shelveset and attempt to resolve conflicts at that time. This is a liberalization of the default behavior. Therefore, the default value for this flag is false.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.PendingChanges">
      <summary>Gets the enumerable collection of pending changes to check-in.</summary>
      <returns>The enumerable collection of pending changes to check-in.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCheckInParameters.PolicyOverride">
      <summary>Gets or sets the policy override information.</summary>
      <returns>The policy override information.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCreationException">
      <summary>Describes a WorkspaceCreationException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCreationException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WorkspaceCreationException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceCreationException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WorkspaceCreationException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceDeletedException"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceDeletedException.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace)"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceDeletedException.Workspace">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceDeletionException">
      <summary>Describes a WorkspaceDeletionException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceDeletionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceDeletionException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WorkspaceDeletionException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceDeletionException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WorkspaceDeletionException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventArgs">
      <summary>Event arguments for workspace changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventArgs.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Initializes a new WorkspaceEventArgs instance for the specified workspace.</summary>
      <param name="workspace">The workspace for which to initialize a new event arguments object.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventArgs.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace,Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventSource)">
      <summary>Initializes a new WorkspaceEventArgs instance for the specified workspace and event source.</summary>
      <param name="workspace">The workspace for which to initialize a new event arguments object.</param>
      <param name="eventSource">The event source.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventArgs.EventSource">
      <summary>Gets the source of the workspace event.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventArgs.Flags">
      <summary>The meaning of this property varies by event. It may be used to provide information to event handlers, or for event handlers to provide information (such as a cancel request) back to the sender of the event.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventArgs.Workspace">
      <summary>Gets workspace that was created, updated, or deleted.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventHandler">
      <summary>Handler for workspace changes.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventSource">
      <summary>Describes the source of a workspace event.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventSource.Internal">
      <summary>This event was raised by an action that occurred on this VersionControlServer object.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventSource.External">
      <summary>This event was raised by an action that occurred externally (such as through a cross- process notification from the NotificationManager). External events can be received only when the notification manager has been started with NotificationManager.Initialize().</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceEventSource.ExternalScanned">
      <summary>This event was raised by an action which occurred externally, but not through a cross-process notification -- instead, it was discovered by the local workspace scanner. Events with this source are raised only for local workspaces (Workspace.Location == WorkspaceLocation.Local).</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceException">
      <summary>Describes a WorkspaceException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WorkspaceException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WorkspaceException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceExistsException">
      <summary>Describes a WorkspaceExistsException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceExistsException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WorkspaceExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceExistsException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WorkspaceExistsException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo">
      <summary>Contains the properties of a cached local workspace.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.Comment">
      <summary>Gets the comment that is associated with this workspace.</summary>
      <returns>The comment that is associated with this workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.Computer">
      <summary>Gets the computer where the workspace is located.</summary>
      <returns>The computer where the workspace is located.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.DisplayName">
      <summary>Gets the formatted display name of the workspace.</summary>
      <returns>The formatted display name of the workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.Equals(System.Object)">
      <summary>Compares this WorkspaceInfo instance with another.</summary>
      <returns>True if the two WorkspaceInfo objects are equivalent; otherwise, false.</returns>
      <param name="obj">The other instance to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.FormatWorkspaceNameForException(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
      <summary>Formats the conflicting workspace name for exception when a conflict between names occurs.</summary>
      <returns>The formatted workspace name.</returns>
      <param name="conflictingWorkspace">The WorkspaceInfo object that conflicts with this one.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.GetHashCode">
      <summary>Gets the hash code for this WorkspaceInfo instance.</summary>
      <returns>The hash code for this WorkspaceInfo instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.GetWorkspace(Microsoft.TeamFoundation.Client.TeamFoundationServer)">
      <summary>Gets the workspace object that matches this WorkspaceInfo instance.</summary>
      <returns>The workspace object that is associated with this WorkspaceInfo instance.</returns>
      <param name="teamFoundationServer">The TeamFoundationServer that hosts the workspace.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.GetWorkspace(Microsoft.TeamFoundation.Client.TfsTeamProjectCollection)">
      <summary>Gets the workspace object that matches this WorkspaceInfo instance.</summary>
      <returns>The workspace object that is associated with this WorkspaceInfo instance.</returns>
      <param name="teamProjectCollection">The TfsTeamProjectCollection that hosts the workspace.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.LastSavedCheckin">
      <summary>Gets or sets the settings that are associated with the last saved check-in try.</summary>
      <returns>The settings that are associated with the last saved check-in try.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.Location">
      <summary>Indicates the location where data (pending changes, local versions) for this workspace are stored.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.MappedPaths">
      <summary>Gets the mappings of the workspace.</summary>
      <returns>The mappings of the workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.Name">
      <summary>Gets the name of the workspace.</summary>
      <returns>The name of the workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.op_Equality(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo,Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
      <summary>Compares two WorkspaceInfo objects.</summary>
      <returns>True if the two WorkspaceInfo objects are equivalent; otherwise, false.</returns>
      <param name="workspaceInfo1">The first WorkspaceInfo object.</param>
      <param name="workspaceInfo2">The second WorkspaceInfo object.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.op_Inequality(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo,Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
      <summary>Compares two WorkspaceInfo objects.</summary>
      <returns>True if the two WorkspaceInfo objects are not equivalent; otherwise, false.</returns>
      <param name="workspaceInfo1">The first WorkspaceInfo object.</param>
      <param name="workspaceInfo2">The second WorkspaceInfo object.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.Options">
      <summary>Options set on a workspace.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.OwnerAliases">
      <summary>The aliases of the workspace owner.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.OwnerDisplayName">
      <summary>The display name of the workspace owner.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.OwnerName">
      <summary>Gets the owner of the workspace.</summary>
      <returns>The owner of the workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.OwnerNameMatches(System.String)">
      <summary>Returns true if the owner name matches any of the valid owner names for this workspace.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.QualifiedName">
      <summary>This is the formatted unique display name of the workspace.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.SecurityToken">
      <summary>The security token for the workspace's access control list in the workspace security namespace.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.ServerGuid">
      <summary>Gets the GUID of the associated server that is running Team Foundation Server.</summary>
      <returns>The GUID of the associated server that is running Team Foundation Server.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.ServerUri">
      <summary>Gets the uniform resource identifier (URI) of the associated server that is running Team Foundation Server.</summary>
      <returns>The URI of the associated server that is running Team Foundation Server.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.System#IComparable#CompareTo(System.Object)">
      <summary>Compares two workspace information objects, first comparing the server names, and then comparing the workspace names, and finally comparing owners.</summary>
      <returns>-1, 0, 1 for this workspace information being less than, equal to, or greater than the specified workspace information, respectively.</returns>
      <param name="obj">the workspace information to which this one will be compared</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo.ToString">
      <summary>Gets a string that describes this WorkspaceInfo instance.</summary>
      <returns>A string that describes this WorkspaceInfo instance.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItem">
      <summary>Used by QueryWorkspaceItems to represent an item. Inherits all fields from Item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItem.ChangeType">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItem.CommittedServerItem">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItem.LocalItem">
      <summary>Path to the item on the client's local disk.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItem.RecursiveChangeType">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.ChangeType" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItem.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItemSet"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItemSet.Items">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItem" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItemSet.Pattern">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItemSet.QueryPath">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceItemSet.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceNotFoundException">
      <summary>Describes a WorkspaceNotFoundException.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceNotFoundException.#ctor(System.String)">
      <summary>Encapsulates a message string into a WorkspaceNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Encapsulates a message string and exception object into a WorkspaceNotFoundException.</summary>
      <param name="message">A message that describes the exception.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile">
      <summary>A class that encapsulates a set of permissions for a workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.#ctor(System.String,Microsoft.TeamFoundation.Framework.Client.AccessControlEntry[])">
      <summary>Creates a new workspace permission profile that has the specified array of access control entries.</summary>
      <param name="profileName">The profile name.</param>
      <param name="accessControlEntries">Array of access control entries that represents the permissions for the workspace.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.AccessControlEntries">
      <summary>Gets an array of the access control entries that makes up the permission settings for this profile.</summary>
      <returns>An array of the access control entries that makes up the permission settings for this profile.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.BuiltInIndex">
      <summary>Gets the index in the BuiltInProfiles array where this WorkspacePermissionProfile may be found.</summary>
      <returns>The index in the BuiltInProfiles array where this WorkspacePermissionProfile may be found.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.BuiltInProfiles">
      <summary>Gets the array of built-in profiles.</summary>
      <returns>The array of built-in profiles.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.Name">
      <summary>Gets the name of the workspace permissions profile.</summary>
      <returns>The name of the workspace permissions profile.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.BuiltInIndexes">
      <summary>Indexes into the WorkspacePermissionProfile.BuiltInProfiles array.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.BuiltInIndexes.Private">
      <summary>Private.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.BuiltInIndexes.PublicLimited">
      <summary>Public limited.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissionProfile.BuiltInIndexes.Public">
      <summary>Public.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions">
      <summary>Describes the permissions the current user has on the workspace.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions.NoneOrNotSupported">
      <summary>No permissions granted.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions.Read">
      <summary>Read permissions.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions.Use">
      <summary>Use permissions.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions.CheckIn">
      <summary>Check-in permissions.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePermissions.Administer">
      <summary>Adminstrator permission.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePersistedMetadataTables">
      <summary>Disposable object which causes the cached copies of the local metadata tables to be strongly rooted in the garbage collector's object graph, if the attached workspace is a local workspace (WorkspaceLocation.Local).</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePersistedMetadataTables.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Until this object is disposed, the cached copies of the local metadata tables on the attached workspace will be strongly rooted in the garbage collector's object graph.</summary>
      <param name="toPersist">Workspace whose metadata tables should be persisted</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspacePersistedMetadataTables.Dispose"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceRequiresComputerNameException">
      <summary>Exception thrown when a computer name is required for the workspace.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceRequiresComputerNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceRequiresComputerNameException.#ctor(System.String)">
      <summary>Initializes a new WorkspaceRequiresComputerNameException instance.</summary>
      <param name="message">A message describing the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceRequiresComputerNameException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new WorkspaceRequiresComputerNameException instance.</summary>
      <param name="message">A message describing the error.</param>
      <param name="ex">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceSuppressAsynchronousScanner">
      <summary>Disposable object which suppresses the asynchronous scanner on the attached workspace, if the attached workspace is a local workspace (WorkspaceLocation.Local).</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceSuppressAsynchronousScanner.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Until this object is disposed, the asynchronous scanner on the attached workspace will be suppressed, if it is active. See Workspace.IsAsynchronous for more information.</summary>
      <param name="toSuppress">Workspace whose asynchronous scanner should be suppressed</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceSuppressAsynchronousScanner.Dispose"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec">
      <summary>Specifies a version based on a workspace name/owner.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.#ctor(Microsoft.TeamFoundation.VersionControl.Client.Workspace)">
      <summary>Initializes a new WorkspaceVersionSpec instance.</summary>
      <param name="workspace">The Workspace instance from which to pull workspace information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.#ctor(Microsoft.TeamFoundation.VersionControl.Client.WorkspaceInfo)">
      <summary>Initializes a new WorkspaceVersionSpec instance.</summary>
      <param name="wsInfo">The WorkspaceInfo instance from which to pull workspace information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.#ctor(System.String,System.String)">
      <summary>Initializes a new WorkspaceVersionSpec instance.</summary>
      <param name="name">Workspace name for the specification.</param>
      <param name="ownerName">Workspace owner for the specification.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.#ctor(System.String,System.String,System.String)">
      <summary>Construct a WorkspaceVersionSpec based the specified workspace name and owner.</summary>
      <param name="name">workspace name for the specification</param>
      <param name="ownerName">workspace owner for the specification</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.ComputeUniqueVersionString"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.Equals(System.Object)">
      <summary>Compares this WorkspaceVersionSpec instance with another.</summary>
      <returns>True if the two instances are equivalent; otherwise, false.</returns>
      <param name="obj">The other instance to compare.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.GetHashCode">
      <summary>Generates a hash code for this instance.</summary>
      <returns>The hash code for this instance.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.Identifier">
      <summary>Identifier for this version specification in command-line usage.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.Name">
      <summary>Gets or sets the name of the workspace.</summary>
      <returns>The name of the workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.OwnerDisplayName"></member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.OwnerName">
      <summary>Gets or sets the owner of the workspace.</summary>
      <returns>The owner of the workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionSpec.ToString">
      <summary>Creates a user-readable string that describes the properties of a workspace.</summary>
      <returns>A user-readable string that describes the properties of a workspace.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionTableException">
      <summary>Thrown when the workspace version table file is corrupted or not able to be loaded</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionTableException.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionTableException.#ctor(System.Exception)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionTableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionTableException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.WorkspaceVersionTableException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.VersionControl.Client.Workstation">
      <summary>A class that represents a computer and the Source Control state on it.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.AttemptToAutoResolveConflicts">
      <summary>Return or set the user's Attempt To Auto Resolve Conflicts preference for this computer</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.CacheEnabled">
      <summary>Gets a flag that describes whether the cache is enabled.</summary>
      <returns>True if the cache is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.ConfigurationEnabled">
      <summary>When true, the configuration directory exists and will be used. When false, either we do not have access to the directory, it does not exist, or it has been set to false by the application, and we'll want to run without the configuration cache.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.Current">
      <summary>Gets the workstation instance that represents the current computer.</summary>
      <returns>The workstation instance that represents the current computer.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.EnsureUpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)">
      <summary>Ensures that the workspace information cache is updated.</summary>
      <param name="sourceControl">The source control repository.</param>
      <param name="ownerName">The owner of the workspace.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.EnsureUpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.TimeSpan)">
      <summary>Makes sure that the workspace information cache is updated.</summary>
      <param name="sourceControl">The source control repository.</param>
      <param name="ownerName">The owner of the workspace.</param>
      <param name="maxAge">The maximum age of the last request.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetAllLocalWorkspaceInfo">
      <summary>Gets an array of all cached local workspace information objects.</summary>
      <returns>An array of all cached local workspace information objects.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetLatestOnCheckout">
      <summary>Gets or sets a flag that describes whether to receive the latest version of an item on checkout.</summary>
      <returns>True to receive the latest version on checkout; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetLocalItemExclusions(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer)">
      <summary>Returns the set of local item exclusions for this user on this computer.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetLocalWorkspaceInfo(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String)">
      <summary>Gets the cached local workspace information for the specified workspace.</summary>
      <returns>The WorkspaceInfo object, or null if the workspace was not found.</returns>
      <param name="sourceControl">The server that contains the specified workspace.</param>
      <param name="workspaceName">The name of the workspace.</param>
      <param name="workspaceOwner">The workspace owner.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetLocalWorkspaceInfo(System.String)">
      <summary>Gets the cached local workspace information for the workspace that contains the specified path.</summary>
      <returns>The WorkspaceInfo object that contains the specified path, or null if the path is not in a workspace.</returns>
      <param name="path">The local path.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.GetLocalWorkspaceInfoRecursively(System.String)">
      <summary>Gets the array of workspace information objects at or below the specified path.</summary>
      <returns>A array of workspace information objects at or below the specified path.</returns>
      <param name="path">The local path.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.InstalledPolicyTypes">
      <summary>Gets the array of installed policy types on this computer.</summary>
      <returns>The array of installed policy types.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.IsExplicitlyMapped(System.String)">
      <summary>Checks whether the specified path is the root mapping in a workspace.</summary>
      <returns>True if the path is the root mapping in a workspace; otherwise, false.</returns>
      <param name="path">The local path to check.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.IsMapped(System.String)">
      <summary>Checks whether the specified path is mapped in a workspace.</summary>
      <returns>True if the path is mapped in a workspace; otherwise, false.</returns>
      <param name="path">The local path to check.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.Name">
      <summary>Gets the name of this workstation.</summary>
      <returns>The name of this workstation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.OfflineMetadataFileRoot">
      <summary>Returns the directory location where workspace local version metadata files are stored.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.PagedCheckinMaterializationCap">
      <summary>Gets the maximum size of a pending change collection that will be materialized into memory to support check-in policy evaluation, or LastSavedCheckin checkstate storage.</summary>
      <returns>The maximum size of a pending change collection.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.VersionControl.Client.Workstation.PagedCheckinPageSize">
      <summary>Gets or sets maximum number of pending changes used during paged check-in and paged pending change acquisition.</summary>
      <returns>The maximum number of pending changes used during paged check-in and paged pending change acquisition.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.QueryLocalWorkspaceInfo(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.String)">
      <summary>Get an array of WorkspaceInfo objects that match the specified parameters.</summary>
      <returns>An array of WorkspaceInfo objects that match the specified parameters.</returns>
      <param name="sourceControl">The repository that contains the desired workspace objects. </param>
      <param name="workspaceName">The name of the desired workspace. Null for all workspaces.</param>
      <param name="workspaceOwner">The workspace owner. Null for any owner.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.ReloadCache">
      <summary>Forces a reload of the cache on disk.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.RemoveCachedWorkspaceInfo(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer)">
      <summary>Removes the workspaces that are associated with the specified repository from the cache.</summary>
      <returns>An array of the workspaces that were removed from the cache.</returns>
      <param name="sourceControl">The source control repository.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.RemoveCachedWorkspaceInfo(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)">
      <summary>Removes the workspaces that are associated with the specified repository from the cache.</summary>
      <returns>An array of the workspaces that were removed from the cache.</returns>
      <param name="sourceControl">The source control repository.</param>
      <param name="ownerName">The owner of the workspaces.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.RemoveCachedWorkspaceInfo(System.Uri,System.String,System.String)">
      <summary>Removes the specified workspace from the cache.</summary>
      <returns>An array of the workspaces that were removed from the cache.</returns>
      <param name="serverUri">The URI of the server that contains the workspace to remove from cache. Null to match all servers.</param>
      <param name="workspaceName">The name of the workspace to remove from cache. Null to match all workspaces.</param>
      <param name="workspaceOwner">The owner of the workspace to remove from the cache. Null to match all owners.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.RemoveLocalItemExclusion(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)">
      <summary>Removes an exclusion from the local item exclusion list.</summary>
      <param name="exclusion">The exclusion to remove.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.SetLocalItemExclusions(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String[])">
      <summary>Overwrites the list of local item exclusions with the list passed in.</summary>
      <param name="sourceControl">The server to set these exclusions for.</param>
      <param name="exclusions">The new exclusions.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.UpdateServerUriReferences(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.Uri)">
      <summary>Updates the cache to reference the specified source control repository using the specified uniform resource identifier (URI).</summary>
      <param name="sourceControl">The repository to reference.</param>
      <param name="uri">The URI for the repository server.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.UpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String)">
      <summary>Updates the cache with the workspace information objects that are associated with the specified repository.</summary>
      <param name="sourceControl">The source control repository.</param>
      <param name="ownerName">The owner of the workspaces.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.VersionControl.Client.Workstation.UpdateWorkspaceInfoCache(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,Microsoft.TeamFoundation.VersionControl.Client.Workspace[]@)">
      <summary>Updates the cache with the workspace information objects that are associated with the specified repository.</summary>
      <param name="sourceControl">The source control repository.</param>
      <param name="ownerName">The owner of the workspaces.</param>
      <param name="workspaces">An array of the workspaces that were updated.</param>
    </member>
  </members>
</doc>