<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InterSystems.Data.CacheClient</name>
    </assembly>
    <members>
        <member name="T:InterSystems.BuildInfo">
            <summary>
            Version Information
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheADOConnection">
            <remarks>
            Represents an open connection to a Cache database.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheADOConnection.TRANSACTION_READ_VERIFIED">
            <summary>
            Cache Specific IsolationLevel
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CacheADOConnection class with the specified connection string.
            </summary>
            <param name="connectionString">The connection used to open the Cache Server database.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CacheADOConnection class with the specified parameters.
            </summary>
            <param name="host">Host or Server name.</param>
            <param name="port">IP port number.</param>
            <param name="nsp">Namespace to connect with.</param>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CacheADOConnection class with the specified parameters.
            </summary>
            <param name="host">Host or Server name.</param>
            <param name="port">IP port number.</param>
            <param name="nsp">Namespace to connect with.</param>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
            <param name="logfile">Log file name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.GetConnectionString(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Constructs the .NET connection string.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
            <param name="nsp">The namespace.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="logfile">The log file name.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.BeginTransaction">
            <summary>
            Starts a transaction on the Cache Server side. The default isolation level is <cref name="IsolationLevel.ReadCommitted"/>.
            </summary>
            <returns>
            An object representing the new <see cref="T:InterSystems.Data.CacheClient.CacheTransaction"/>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Starts a transaction on the Cache Server side with the specified <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.IsolationLevel"/> value.
            </summary>
            <param name="isolevel">The transaction isolation level for this connection.</param>
            <returns>
            An object representing the new <see cref="T:InterSystems.Data.CacheClient.CacheTransaction"/>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.BeginDbTransaction(System.Data.IsolationLevel)">
            <summary>
            Starts a transaction at the data source with the specified <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.IsolationLevel"/> value.
            </summary>
            <param name="isolationLevel">The transaction isolation level for this connection. If you do not specify an isolation level, the default isolation level for the driver is used.</param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.GetSchema">
            <summary>
            Returns schema information for the data source of this <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </summary>
            <returns>A <see cref="T:System.Data.DataTable"/> that contains schema information.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.GetSchema(System.String)">
            <summary>
            Returns schema information for the data source of this <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> using the specified name for the schema name.
            </summary>
            <param name="collectionName">Specifies the name of the schema to return.</param>
            <returns>A <see cref="T:System.Data.DataTable"/> that contains schema information.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.GetSchema(System.String,System.String[])">
            <summary>
            Returns schema information for the data source of this <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> using the specified string for the schema name and the specified string array for the restriction values.
            </summary>
            <param name="collectionName">Specifies the name of the schema to return.</param>
            <param name="restrictionValues">Specifies a set of restriction values for the requested schema.</param>
            <returns> that contains schema information.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.ping">
            <summary>
            Pings the database to ensure that it is up and responding
            </summary>
            <returns>True if the database is responsive</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.ping(System.Int32)">
            <summary>
            Sends a number of pings to the connected Cache Server and returns the time taken.
            </summary>
            <param name="times">Number of pings to send</param>
            <returns>Time taken</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.sendStreamPrefetchSizeMessage">
            <summary>
            Sets the stream prefetch size. Calling this with a postive StreamPrefetchSize will activate
            stream prefetch logic, which is off by default. All streams smaller than or equal to the prefetch size 
            will be fetched in entirety as part of the original result set, thus 
            eliminating the need for additional server round trips. Any streams larger 
            than pre-fetch size will not be prefetched.
            This is controlled automatically using the StreamPrefetch key/value in the ConnectionString
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.ping(System.Int32,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            This is a higher resolution version of Ping for testing purposes
            </summary>
            <param name="times"></param>
            <param name="first"></param>
            <param name="second"></param>
            <param name="third"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.ChangeDatabase(System.String)">
            <summary>
            Placeholder for future functionality.  Changes the current Namespace associated with an open <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </summary>
            <param name="value">The Namespace/Database name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.ClearAllPools">
            <summary>
            Removes all connections in the connection pools and clears the Pools.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.ClearPool(InterSystems.Data.CacheClient.CacheADOConnection)">
            <summary>
            Clears the connection pool identified by matching the specified instance of a <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </summary>
            <param name="conn">The matching <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> used to identify the connection pool to be cleared.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.ClearPool">
            <summary>
            Clears the connection pool identified by the current instance of a <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </summary>
            
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.Close">
            <summary>
            Closes the connection to Cache Server. Handles Pooled and non-Pooled connections.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.CreateCommand">
            <summary>
            Creates and returns a <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> instance associated with the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </summary>
            <returns>A <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> object</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.CreateDbCommand">
            <summary>
            Return a <see cref="T:System.Data.Common.DbCommand"/> object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.Dispose(System.Boolean)">
            <summary>
            Dispose connection
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.Login">
            <summary>
            Send Login messages to Cache.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.Open">
            <summary>
            Open connection to the Cache Server database.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.xepCallError(System.Byte[],System.Int32)">
            <summary>
            For XEP Use only
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.xepCallReturn(System.Byte[],System.Int32)">
            <summary>
            For XEP Use only
            </summary>
            <param name="data"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.xepCall(System.Byte[],System.Int32)">
            <summary>
            For XEP Use only
            </summary>
            <param name="data"></param>
            <param name="length"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.xepWriteHeaderAndSend(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            For (internal) XEP Use only
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.xepCallReturnListByteArrays(System.Byte[],System.Int32)">
            <summary>
            For (internal) XEP Use only
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.xepReadHeader(System.Boolean)">
            <summary>
            For (internal) XEP Use only
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheADOConnection.getHostAddress">
            <summary>
            Returns the TCP/IP address of the client application
            </summary>
            <returns></returns>
            
        </member>
        <member name="E:InterSystems.Data.CacheClient.CacheADOConnection.InfoMessage">
            <summary>
            Placeholder.  Occurs when the Cache Server returns a warning or informational message.
            </summary>
        </member>
        <member name="E:InterSystems.Data.CacheClient.CacheADOConnection.StateChange">
            <summary>
            Event to notify a change in the state of the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.DbProviderFactory">
            <summary>
            Return an instance of CacheFactory <see cref="T:InterSystems.Data.CacheClient.CacheFactory"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.ProviderFactory">
            <summary>
            Return an instance of CacheFactory <see cref="T:InterSystems.Data.CacheClient.CacheFactory"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.IsTransactionActive">
            <summary>
            Returns whether a transaction in progress on the server on the SQL side or the Object binding side.
            </summary>
            <returns>Returns true if connection is actively in a transaction on the server.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.TransactionLevel">
            <summary>
            Returns the Transaction Level on the server
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.IsolationLevel">
            <summary>
            Allows setting the IsolationLevel of the Connection, or returns the Cache database current
            IsolationLevel.  This will make a call to the Cache server, so should only be used sparingly.
            </summary>
            <value>The <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.IsolationLevel"/>.</value>
            <returns>The <see cref="T:System.Data.IsolationLevel"></see> for this connection. The default is ReadCommitted.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.StreamPrefetchSize">
            <summary>
            Returns an int representing the current stream prefetch size.If
            this value equals 0, the stream prefetch is off. Any positive value represents
            the current stream prefetch chunk size. This must be set before calling CacheADOConnection.Open().
            </summary>
            <returns>size</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.AllowUnboundParameters">
            <summary>
            Setting AllowUnboundParameters to true allows a statement containing 
            '?' parameters to be undefined and not added to CacheParameterCollection for 
            the CacheCommand object.  The '?' in the statement or stored procedure will be
            sent to the Cache Server as a default parameter.  This is mainly used for Generated 
            Proxy Cache Classes that implement stored procedures.
            </summary>
            <value>true to prevent the throwing of an exception, false is the default behavior.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.IgnoreNull">
            <summary>
            Gets or sets a value indicating whether empty string corresponds to null on the server.
            </summary>
            <value><c>true</c> if empty string corresponds to null on the server; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.PreparseCacheCount">
            <summary>
            Return the number of entries in the PreparseCache for this Pooled connection.
            </summary>
            <value>The preparse cache count.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.ServerUnicode">
            <summary>
            Return true if connected to a Unicode Cache Server, false otherwise.
            </summary>
            <value><c>true</c> if [server unicode]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.ServerEncoding">
            <summary>
            Return the Encoding of Cache Server. For use with the Object binding.
            </summary>
            <value>The server encoding.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.ServerLocaleString">
            <summary>
            Return the string returned by Cache to interpret single byte character data.
            </summary>
            <value>The server locale string.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.CacheJobID">
            <summary>
            Return the connected Cache Server's process ID
            </summary>
            <value>The cache job ID.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.CacheJobNumber">
            <summary>
            Return the connected Cache Server's process Number
            </summary>
            <value>The cache job Number.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.SQLDialect">
            <summary>
            The Dialect used for SQL statements sent to the Cache Server
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.MetaDataFormat">
            <summary>
            The Format for GetSchema metadata 
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.Options">
            <summary>
            The Dialect used for SQL statements sent to the Cache Server
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.ProtocolVersion">
            <summary>
            Return the current Protocol number supported by this Cache Server connection.
            </summary>
            <value>The protocol version.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.ConnectionString">
             <summary>
             Return/Set the connection string used to open a Cache Server database.  The connection string is made up of key/value pairs.
             </summary>
             <value>A <see cref="T:System.String"/> value.</value>
             <returns>A string containing connection settings.</returns>
             <example>Setting the ConnectionString
             <code>
             ConnectionString="Server = localhost; Log File=c:\\cprovider.log;Port=1972; Namespace=Samples; Password = SYS; User ID = _system;"
             </code></example>
             <remarks>
             <list type="table">
             <listheader>
             <term>Keys</term>
             <description>Description of key/value</description>
             </listheader>
             <item>
             <term>APPLICATION NAME</term>
             <description>set the application name</description>
             </item>
             <item>
             <term>CONNECT TIMEOUT or CONNECTION TIMEOUT</term>
             <description>set the length of time in seconds to try and establish a connection before failure</description>
             </item>
             <item>
             <term>CONNECTION LIFETIME</term>
             <description>the length of time in seconds to wait before resetting an idle Pooled connection</description>
             </item>
             <item>
             <term>CONNECTION RESET</term>
             <description>turn on Pooled connection reset mechanism (used with Connection Lifetime). Values are true/false or yes/no</description>
             </item>
             <item>
             <term>DATA SOURCE, SERVER, ADDRESS, ADDR, NETWORK ADDRESS</term>
             <description>IP address or host name</description>
             </item>
             <item>
             <term>INITIAL CATALOG, DATABASE ,NAMESPACE</term>
             <description>set Namespace to connect to</description>
             </item>
             <item>
             <term>APPENDLOGFILE, APPEND LOG FILE</term>
             <description>set log file location and turn on appended logging</description>
             </item>
             <item>
             <term>LOGFILE, LOG FILE</term>
             <description>set log file location and turn on logging</description>
             </item>
             <item>
             <term>MAX POOL SIZE</term>
             <description>maximum size of connection pool, for this specific connection string</description>
             </item>
             <item>
             <term>MIN POOL SIZE</term>
             <description>minimum or initial size of the connection pool, for this specific connection string</description>
             </item>
             <item>
             <term>PACKET SIZE</term>
             <description>set TCP Packet size</description>
             </item>
             <item>
             <term>PASSWORD ,PWD</term>
             <description>set password</description>
             </item>
             <item>
             <term>POOLING</term>
             <description>turn on connection pooling (default). Values are true/false or yes/no</description>
             </item>
             <item>
             <term>PORT</term>
             <description>set TCP/IP port number to connect with</description>
             </item>
             <item>
             <term>PREPARSE CACHE SIZE</term>
             <description>upper limit of the number of preparsed cached commands before recycling is applied</description>
             </item>
             <item>
             <term>SO_RCVBUF, SO RCVBUF</term>
             <description>set TCP receive buffer size</description>
             </item>
             <item>
             <term>SO_SNDBUF, SO SNDBUF</term>
             <description>set TCP send buffer size</description>
             </item>
             <item>
             <term>TCP_NODELAY, TCP NODELAY</term>
             <description>set TCP nodelay option (default is on). Values are true/false or yes/no</description>
             </item>
             <item>
             <term>TRANSACTIONISOLATIONLEVEL, TRANSACTION ISOLATION LEVEL</term>
             <description>set System.Data.IsolationLevel value for the connection</description>
             </item>
             <item>
             <term>UID, USER, USER ID</term>
             <description>set user login name</description>
             </item>
             <item>
             <term>WORKSTATION ID</term>
             <description>set Workstation name for process identification</description>
             </item>
             </list>
              
            
            </remarks>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.ConnectionTimeout">
            <summary>
            Return/Set the time to wait to establish a connection, before terminating and generating an error.
            </summary>
            <value>The time to wait to establish a connection in seconds (Max value 2147483). Zero for ConnectionTimeout waits indefinitely for a connection to be made. Negative values are not allowed.</value>
            <returns>The time (in seconds) to wait for a connection to open. The default value is 30 seconds.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.Database">
            <summary>
            Return the Namespace connected to on the Cache Server.
            </summary>
            <value>The Namespace.</value>
            <returns>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.DataSource">
            <summary>
            Return the host name or IP address for the connected Cache Server database.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.Driver">
            <summary>
            Return the version of the CacheProvider.
            </summary>
            <value>The driver.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.AppendLogFile">
            <summary>
            Flag to cause appending to existing log file
            </summary>
            <value>takes/returns a bool value set to true if appending to log file is enabled </value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.LoggingType">
            <summary>
            Enum to enable different types of logging for example raw TCP/IP
            </summary>
            <value>takes/returns a int value set to 0 for normal logging, 1 for raw TCP/IP logging, and 2 for both </value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.IsLogging">
            <summary>
            Return true if logging is enabled and <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.LogEnable"/> is true.
            </summary>
            <value>
            	<c>true</c> if this instance is logging; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.LogFile">
            <summary>
            Return/Sets the log file name and opens the log.  Setting to null closes the log file, even if other connections have the same log file open.
            </summary>
            <value>The full log file path.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.LogEnable">
            <summary>
            Enables (true)/Disables (false) writing to an open log defined in the <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.ConnectionString"/>.  Can be used by application developers to turn on logging around specific events.
            </summary>
            <value><c>true</c> if log is writable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.CacheMajorVersion">
            <summary>
            Cache' major version
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.CacheMinorVersion">
            <summary>
            Cache' minor version
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.PacketSize">
            <summary>
            Return the current Socket packet Size for this connection.
            </summary>
            <value>The size of the packet.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.Port">
            <summary>
            Return the port number
            </summary>
            <value>The TCP/IP Port number.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.User">
            <summary>
            Return the user name
            </summary>
            <value>The user name used for connection security.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.ServerVersion">
            <summary>
            Return the Cache Server version.
            </summary>
            <value>The server version.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.State">
            <summary>
            Return the state of the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </summary>
            <value>The state of the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.</value>
            <returns>One of the <see cref="T:System.Data.ConnectionState"></see> values.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheADOConnection.WorkstationId">
            <summary>
            Return a <see cref="T:System.String"/> that identifies the client connection over on the Cache Server. This can be set in the <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.ConnectionString"/> using the WorkstationId Key.
            </summary>
            <value>The workstation id.</value>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheCommand">
            <remarks>
            Represents a SQL statement or stored procedure to execute against a Cache Server database. This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> class with the SQL statement text.
            </summary>
            <param name="cmdText">The SQL statement text.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.#ctor(System.String,InterSystems.Data.CacheClient.CacheADOConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> class with the SQL statement text and a <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </summary>
            <param name="cmdText">The SQL statement text.</param>
            <param name="connection">A <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> that represents the connection to a Cache Server.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.#ctor(System.String,InterSystems.Data.CacheClient.CacheADOConnection,InterSystems.Data.CacheClient.CacheTransaction)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> class with the SQL statement text, a <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>, and the <see cref="T:InterSystems.Data.CacheClient.CacheTransaction"/>.
            </summary>
            <param name="cmdText">The SQL statement text.</param>
            <param name="connection">A <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> that represents the connection to the Cache Server.</param>
            <param name="transaction">The <see cref="T:InterSystems.Data.CacheClient.CacheTransaction"/> in which the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> executes.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.Cancel">
            <summary>
            Cancels the execution of a <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.CreateParameter">
            <summary>
            Creates a new instance of a <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object.
            </summary>
            <returns>A <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.CreateDbParameter">
            <summary>
            Creates a new instance of a <see cref="T:System.Data.Common.DbParameter"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.Dispose(System.Boolean)">
            <summary>
            Dispose the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.ExecuteNonQuery">
            <summary>
            Executes a SQL statement against the Cache database connection and returns the number of rows affected.
            </summary>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.InvalidOperationException">The connection does not exist.-or- The connection is not open. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
            <summary>
            Sends the <see cref="P:InterSystems.Data.CacheClient.CacheCommand.CommandText"/> to the <see cref="P:InterSystems.Data.CacheClient.CacheCommand.DbConnection"/> and returns a <see cref="T:System.Data.Common.DbDataReader"/> object using one of the <see cref="T:System.Data.CommandBehavior"/> values.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.ExecuteReader">
            <summary>
            Sends the <see cref="P:InterSystems.Data.CacheClient.CacheCommand.CommandText"/> to the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> and returns a <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> object.
            </summary>
            <returns>A <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.ExecuteReader(System.Data.CommandBehavior)">
            <summary>
            Sends the <see cref="P:InterSystems.Data.CacheClient.CacheCommand.CommandText"/> to the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> and returns a <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> object using one of the <see cref="T:System.Data.CommandBehavior"/> values.
            </summary>
            <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior"/> values.</param>
            <returns>A <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.ExecuteScalar">
            <summary>
            Executes the SQL statement, and returns the first column of the first row in the result set. Additional columns and rows are ignored.
            </summary>
            <returns>
            A single <see cref="T:System.Object"/> representing the returned data or a null reference if no data.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.ExecuteXmlReader">
            <summary>
            Future PlaceHolder. Not Implemented
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.privatePrepare">
            <summary>
            Creates a prepared statement of the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> on the Cache Server.  Validates the syntax for the SQL statement against the Cache Server.
            No log is generated.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.Prepare">
            <summary>
            Creates a prepared statement of the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> on the Cache Server.  Validates the syntax for the SQL statement against the Cache Server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.ResetCommandTimeout">
            <summary>
            Resets the <see cref="P:InterSystems.Data.CacheClient.CacheCommand.CommandTimeout"/> property to its default value.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheCommand.GetCurrentServerCursorNumber">
            <summary>
            For (internal) XEP Use only
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.Poolable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> is poolable.
            </summary>
            <value><c>true</c> if poolable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.CommandText">
            <summary>
            Return/Set the SQL statement or stored procedure to execute at the Cache Server database.
            </summary>
            <value>The SQL statement or stored procedure to execute.</value>
            <returns>The text command to execute. The default value is an empty string ("").</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.CommandTimeout">
            <summary>
            Return/Set the maximum wait time before terminating an executed query and generating an error.  This currently only applies to query statements.
            </summary>
            <value>
            The maximum wait time in seconds. 
            </value>
            <returns>The time (in seconds) to wait for the command to execute. The default value is 30 seconds.</returns>
            <exception cref="T:System.ArgumentException">The property value assigned is less than 0. </exception>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.CommandType">
            <summary>
            Return/set a value indicating how the <see cref="P:InterSystems.Data.CacheClient.CacheCommand.CommandText"/> property is interpreted.
            </summary>
            <value>The <see cref="P:InterSystems.Data.CacheClient.CacheCommand.CommandText"/> type.</value>
            <returns>One of the <see cref="T:System.Data.CommandType"></see> values. The default is Text.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.Connection">
            <summary>
            Return/Set the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> used by this instance of the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/>.
            </summary>
            <value>The Cache Connection.</value>
            <returns>The connection to the Cache Server.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.DesignTimeVisible">
            <summary>
            Return/Set a value indicating if the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> object should be visible in a Windows Form Designer control.
            </summary>
            <value><c>true</c> if [design time visible]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.DbConnection">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.DbParameterCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.DbTransaction">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.Parameters">
            <summary>
            Return the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <value>The <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.</value>
            <returns>The parameters of the SQL statement or stored procedure.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.Transaction">
            <summary>
            Return/Set the <see cref="T:InterSystems.Data.CacheClient.CacheTransaction"/> within which the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> executes.
            </summary>
            <value>The <see cref="T:InterSystems.Data.CacheClient.CacheTransaction"/></value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheCommand.UpdatedRowSource">
            <summary>
            Return/Set how <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> results are applied to the <see cref="T:System.Data.DataRow"/> when used by the Update method of the <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/>.
            </summary>
            <value>How <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> results are applied.</value>
        </member>
        <member name="T:InterSystems.Data.CacheClient.Descriptor">
            <remarks>
            Inherited Class of Column Descriptor information 
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheConnectionStringBuilder">
            <summary>
            Provides a simple way to create and manage the contents of connection strings used by the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheConnectionStringBuilder"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheConnectionStringBuilder"/> class. The provided connection string provides the data for the instance's internal connection information.
            </summary>
            <param name="connectionString">The basis for the object's internal connection information. Parsed into key/value pairs.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:InterSystems.Data.CacheClient.CacheConnectionStringBuilder"/> contains a specific key.
            </summary>
            <param name="keyword">The key to locate.</param>
            <returns>true if the <see cref="T:InterSystems.Data.CacheClient.CacheConnectionStringBuilder"/> contains an element that has the specified key; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Remove(System.String)">
            <summary>
            Removes the entry with the specified key from the <see cref="T:InterSystems.Data.CacheClient.CacheConnectionStringBuilder"/> instance.
            </summary>
            <param name="keyword">The value of the key/value pair to be removed from the connection string.</param>
            <returns>true if the key existed within the connection string and was reset; false if the key did not exist.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
            <summary>
            Retrieves a value corresponding to the supplied key from this <see cref="T:InterSystems.Data.CacheClient.CacheConnectionStringBuilder"/>.
            </summary>
            <param name="keyword">The key of the item to retrieve.</param>
            <param name="value">The value corresponding to keyword.</param>
            <returns>true if keyword was found within the connection string; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Clear">
            <summary>
            Clear the contents of valid keywords
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified key.
            </summary>
            <param name="keyword">The key of the item to get or set.</param>
            <returns>The value associated with the specified key.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.ApplicationName">
            <summary>
            Gets or sets the name of the ApplicationName associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.ConnectionLifetime">
            <summary>
            Gets or sets the ConnectionLifetime associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.ConnectionTimeout">
            <summary>
            Gets or sets the ConnectionTimeout associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.ConnectionReset">
            <summary>
            Gets or sets the ConnectionReset associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Server">
            <summary>
            Gets or sets the name of the Server associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Namespace">
            <summary>
            Gets or sets the name of the Namespace associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.IsolationLevel">
            <summary>
            Gets or sets the <see cref="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.IsolationLevel"/> associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.LogFile">
            <summary>
            Gets or sets the name and path of the LogFile associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.MinPoolSize">
            <summary>
            Gets or sets the MinPoolSize associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.MaxPoolSize">
            <summary>
            Gets or sets the MaxPoolSize associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Pooling">
            <summary>
            Gets or sets boolean to enable Pooling associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.PacketSize">
            <summary>
            Gets or sets PacketSize associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Password">
            <summary>
            Gets or sets Password associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Port">
            <summary>
            Gets or sets TCP/IP Port used for the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.PreparseCacheSize">
            <summary>
            Gets or sets PreparseCacheSize associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.SQLDialect">
            <summary>
            Gets or sets the SQL Dialect associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.MetaDataFormat">
            <summary>
            Gets or sets the MetaData format returned by GetSchema.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.Ssl">
            <summary>
            Gets or sets the Ssl value to true and enables SSL processing associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.SoSndBuf">
            <summary>
            Gets or sets the SoSndBuf (TCP/IP send buffer) associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.SoRcvBuf">
            <summary>
            Gets or sets the SoRcvBuf (TCP/IP recv buffer) associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.StreamPrefetch">
            <summary>
            Gets or sets StreamPrefetch for the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.TcpNoDelay">
            <summary>
            Gets or sets TcpNoDelay for the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.User">
            <summary>
            Gets or sets the User name associated with the connection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnectionStringBuilder.WorkstationId">
            <summary>
            Gets or sets the WorkstationId associated with the connection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheDataAdapter">
            <remarks>
            Represents a <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> set and a <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> that are used to fill the <see cref="T:System.Data.DataSet"/> and update Cache Server database. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.#ctor(InterSystems.Data.CacheClient.CacheCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/> class with the specified SQL SELECT statement.
            </summary>
            <param name="selectCommand">An <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="P:InterSystems.Data.CacheClient.CacheDataAdapter.SelectCommand"/> property of the <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/>.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.#ctor(System.String,InterSystems.Data.CacheClient.CacheADOConnection)">
            <summary>
            Return a <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/> instance using the SQL SELECT statement and the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> instance.
            </summary>
            <param name="selectCommandText">A <see cref="T:System.String"/> that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:InterSystems.Data.CacheClient.CacheDataAdapter.SelectCommand"/> property of the <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/>.</param>
            <param name="selectConnection">An <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> instance for the Cache database connection.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.#ctor(System.String,System.String)">
            <summary>
            Return a <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/> instance using the supplied SQL SELECT statement and connection string.
            </summary>
            <param name="selectCommandText">A <see cref="T:System.String"/> that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:InterSystems.Data.CacheClient.CacheDataAdapter.SelectCommand"/> property of the <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/>.</param>
            <param name="selectConnectionString">The connection string to establish the Cache database connection.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.Dispose(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="E:InterSystems.Data.CacheClient.CacheDataAdapter.RowUpdating">
            <summary>
            Occurs during update before a <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> is executed against the Cache Server database.
            </summary>
        </member>
        <member name="E:InterSystems.Data.CacheClient.CacheDataAdapter.RowUpdated">
            <summary>
            Occurs during update after a <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> is executed against the Cache Server database.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataAdapter.DeleteCommand">
            <summary>
            Return/Set an SQL statement or stored procedure used to delete records in the Cache Server database.
            </summary>
            <value>An SQL statement or stored procedure for deletes.</value>
            <returns>An <see cref="T:CacheCommand"></see> used during <see cref="M:CacheDataAdapter.Update(System.Data.DataSet)"></see> to delete records in the data source for deleted rows in the data set.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataAdapter.InsertCommand">
            <summary>
            Return/Set an SQL statement or stored procedure used to insert new records into the Cache Server database.
            </summary>
            <value>An SQL statement or stored procedure for inserts.</value>
            <returns>A <see cref="T:CacheCommand"></see> used during <see cref="M:CacheDataAdapter.Update(System.Data.DataSet)"></see> to insert records in the data source for new rows in the data set.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataAdapter.SelectCommand">
            <summary>
            Return/Set an SQL statement or stored procedure used to select records in the Cache Server database.
            </summary>
            <value>An SQL statement or stored procedure for selects.</value>
            <returns>A <see cref="T:CacheCommand"></see> that is used during <see cref="M:CacheDataAdapter.Update(System.Data.DataSet)"></see> to select records from data source for placement in the data set.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataAdapter.UpdateCommand">
            <summary>
            Return/Set an SQL statement or stored procedure used to update records in the Cache Server database.
            </summary>
            <value>An SQL statement or stored procedure for updates.</value>
            <returns>A <see cref="T:CacheCommand"></see> used during <see cref="M:CacheDataAdapter.Update(System.Data.DataSet)"></see> to update records in the data source for modified rows in the data set.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheDataReader">
            <remarks>
            Provides a way of reading rows from a Cache Server database using a forward only cursor. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.Close">
            <summary>
            Closes the <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.Dispose(System.Boolean)">
            <summary>
            Dispose CacheDataReader
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetBoolean(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Boolean"/>.
            </summary>
            <param name="i">The zero-based column ordinal. </param>
            <returns>The value of the column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetByte(System.Int32)">
            <summary>
            Return the value of the specified column as a byte.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column as a byte.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies a <see cref="T:System.Byte"/> array from the specified column, offset and length, into a supplied buffer <see cref="T:System.Byte"/> array at the given offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="dataIndex">The index offset within the field from which to begin the copy operation.</param>
            <param name="buffer">The destination supplied buffer.</param>
            <param name="bufferIndex">The index offset for the destination buffer where writing data starts. </param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of bytes read.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetChar(System.Int32)">
            <summary>
            Return the value of the specified column as a single character (<see cref="T:System.Char"/>).
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Copies a <see cref="T:System.Char"/> array from the specified column, offset and length, into a supplied buffer <see cref="T:System.Char"/> array at the given offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="dataIndex">The index offset within the field from which to begin the copy operation.</param>
            <param name="buffer">The destination supplied buffer.</param>
            <param name="bufferIndex">The index offset for the destination buffer where writing data starts. </param>
            <param name="length">The maximum length to copy into the buffer.</param>
            <returns>The actual number of characters copied.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetData(System.Int32)">
            <summary>
            Placeholder.  Not supported
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetDbDataReader(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Data.Common.DbDataReader"/> object for the requested column ordinal that can be overridden with a provider-specific implementation.
            </summary>
            <param name="ordinal">The zero-based column ordinal.</param>
            <returns>A <see cref="T:System.Data.Common.DbDataReader"/> object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetDataTypeName(System.Int32)">
            <summary>
            Return the name of the Cache Server data type.
            </summary>
            <param name="i">The zero-based column ordinal. </param>
            <returns>The name of the Cache Server data type.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetDate(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetTime(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.TimeSpan"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetDateTime(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.DateTime"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetDecimal(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Decimal"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetDouble(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Double"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetFieldType(System.Int32)">
            <summary>
            Return the DotNet <see cref="T:System.Type"/> that is the data type of the object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The <see cref="T:System.Type"/> that is the Dot Net data type of the object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetFloat(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Single"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetGuid(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Guid"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetInt16(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Int16"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetInt32(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Int32"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetInt64(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Int64"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetName(System.Int32)">
            <summary>
            Return the name of the specified column as a <see cref="T:System.String"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The name of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetOrdinal(System.String)">
            <summary>
            Return the column ordinal, given the name of the column.
            </summary>
            <param name="columnName">The name of the column.</param>
            <returns>The zero-based column ordinal.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.HasColumnName(System.String)">
            <summary>
            Return true if the name of the column exists.
            </summary>
            <param name="columnName">The name of the column.</param>
            <returns>true if column name exists, else false.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetSchemaTable">
            <summary>
            Return a <see cref="T:System.Data.DataTable"/> that describes the column metadata of the <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/>.
            </summary>
            <returns>A <see cref="T:System.Data.DataTable"/> that describes the column metadata.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetString(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.String"/> object.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetValue(System.Int32)">
            <summary>
            Return the value of the specified column as a <see cref="T:System.Object"/>.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The <see cref="T:System.Object"/> value of the specified column.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetValues(System.Object[])">
            <summary>
            Return all the columns in the current row.
            </summary>
            <param name="values">An array of <see cref="T:System.Object"/> to copy the attribute columns into.</param>
            <returns>The number of instances of <see cref="T:System.Object"/> in the array.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.IsDBNull(System.Int32)">
            <summary>
            Return a value that indicates whether the column data contains non-existent or missing values.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>true if the specified column value is equivalent to <see cref="T:System.DBNull"/>; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.NextResult">
            <summary>
            Advances the <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> to the next result, when reading the results of batch SQL statements.  Currently Batch results are not supported.
            </summary>
            <returns>true if there are more result sets; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.Read">
            <summary>
            Advances the <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> to the next record.
            </summary>
            <returns>true if there are more rows; otherwise false.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataReader.GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the rows in the data reader.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the rows in the data reader.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataReader.Depth">
            <summary>
            Return a number indicating the depth of nesting for the current row.  Not Implemented
            </summary>
            <value>Nesting Depth.</value>
            <returns>The level of nesting.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataReader.FieldCount">
            <summary>
            Return the number of columns in the current row.
            </summary>
            <value>Number of columns.</value>
            <returns>When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataReader.HasRows">
            <summary>
            Return true if the <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> contains one or more rows, otherwise false.
            </summary>
            <value><c>true</c> if this instance has rows; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataReader.IsClosed">
            <summary>
            Return true if the specified <see cref="T:InterSystems.Data.CacheClient.CacheDataReader"/> instance has been closed, otherwise false.
            </summary>
            <value></value>
            <returns>true if the data reader is closed; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataReader.Item(System.Int32)">
            <summary>
            Return the value of the specified column in its native DotNet type given the column ordinal.
            </summary>
            <value>The zero-based column ordinal.</value>
            <returns>The value of the specified column in its native DotNet type.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataReader.Item(System.String)">
            <summary>
            Return the value of the specified column in its native DotNet type given the column name.
            </summary>
            <value>The column name.</value>
            <returns>The value of the specified column in its native DotNet type.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataReader.RecordsAffected">
            <summary>
            Return the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
            <value>The number of rows.</value>
            <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheDataSourceEnumerator">
            <summary>
            Provides a mechanism for enumerating all known instances of Cache Server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheDataSourceEnumerator.GetDataSources">
            <summary>
            Retrieves a <see cref="T:System.Data.DataTable"/> containing information about all known Cache Servers.
            </summary>
            <returns>Returns a <see cref="T:System.Data.DataTable"/> containing information about the all known Cache Servers.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheDataSourceEnumerator.Instance">
            <summary>
            Gets an instance of the <see cref="T:InterSystems.Data.CacheClient.CacheDataSourceEnumerator"/>, which can be used to retrieve information about all known Cache Server instances.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheError">
            <remarks>
            Collects information relevant to a warning or error returned by the Cache Server database.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheError.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Construct a CacheError instance.
            </summary>
            <param name="message">Short error message</param>
            <param name="state">SQL State</param>
            <param name="nativeerror">Native Cache error</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheError.#ctor(System.String,System.String)">
            <summary>
            Construct a CacheError instance.
            </summary>
            <param name="message">Short error message</param>
            <param name="state">SQL State</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheError.#ctor(System.String)">
            <summary>
            Construct a CacheError instance.
            </summary>
            <param name="message">Short error message.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheError.ToString">
            <summary>
            Convert error to a String.
            </summary>
            <returns>Error message.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheError.Message">
            <summary>
            Gets a short description of the error.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheError.NativeError">
            <summary>
            Return the Cache specific error information.
            </summary>
            <value>The native error.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheError.State">
            <summary>
            Gets the five-character error code that follows the ANSI SQL standard.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheErrorCollection">
            <remarks>
            Collects all errors generated when using the <see cref="T:InterSystems.Data.CacheClient.CacheDataAdapter"/>. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheErrorCollection.Add(InterSystems.Data.CacheClient.CacheError)">
            <summary>
            Add Error to <see cref="T:InterSystems.Data.CacheClient.CacheErrorCollection"/>.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheErrorCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the <see cref="T:InterSystems.Data.CacheClient.CacheError"/> elements of the <see cref="T:InterSystems.Data.CacheClient.CacheErrorCollection"/> into an array,
            starting at the specified index within the array.
            </summary>
            <param name="array">The array into which to copy the <see cref="T:InterSystems.Data.CacheClient.CacheError"/> elements.</param>
            <param name="index">The starting index of array.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheErrorCollection.GetEnumerator">
            <summary>
            Return a <see cref="T:InterSystems.Data.CacheClient.CacheErrorCollection"/> Enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheErrorCollection.Count">
            <summary>
            Return the number of Errors
            </summary>
            <value>The error count.</value>
            <returns>The number of elements contained in the <see cref="T:InterSystems.Data.CacheClient.CacheErrorCollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheErrorCollection.Item(System.Int32)">
            <summary>
            Return the <see cref="T:InterSystems.Data.CacheClient.CacheError"/> at the specified index.
            </summary>
            <value>The zero-based index of the <see cref="T:InterSystems.Data.CacheClient.CacheError"/> to retrieve.</value>
            <returns><see cref="T:InterSystems.Data.CacheClient.CacheError"/> value</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheException">
            <remarks>
            The exception generated when a warning or error is returned by a Cache Server database. 
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="si">The si.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheException.Errors">
            <summary>
            Return a <see cref="T:InterSystems.Data.CacheClient.CacheErrorCollection"/> instance
            </summary>
            <value>The errors.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheException.Message">
            <summary>
            Return a short description of the error.
            </summary>
            <value>The error message.</value>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheException.NativeError">
            <summary>
            Return the Cache specific error information.
            </summary>
            <value>The native error.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheException.State">
            <summary>
            Return the five-character error code that follows the ANSI SQL standard.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheFactory">
            <remarks>
            Provides Generic access to CacheProvider functionality. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheFactory.Instance">
            <summary>
            Gets an instance of the <see cref="T:InterSystems.Data.CacheClient.CacheFactory"/>. This can be used to retrieve strongly typed data objects.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheFactory.CreateCommand">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbCommand"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbCommand"/></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheFactory.CreateCommandBuilder">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbCommandBuilder"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbCommandBuilder"/></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheFactory.CreateConnection">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbConnection"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbConnection"/></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheFactory.CreateConnectionStringBuilder">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbConnectionStringBuilder"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbConnectionStringBuilder"/></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheFactory.CreateDataAdapter">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbDataAdapter"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbDataAdapter"/></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheFactory.CreateDataSourceEnumerator">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbDataSourceEnumerator"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbDataSourceEnumerator"/></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheFactory.CreateParameter">
            <summary>
            Returns a strongly typed <see cref="T:System.Data.Common.DbParameter"/> instance.
            </summary>
            <returns>A new strongly typed instance of <see cref="T:System.Data.Common.DbParameter"/></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheFactory.CreatePermission(System.Security.Permissions.PermissionState)">
            <summary>
            Returns a new <see cref="T:System.Security.CodeAccessPermission"/>.
            Not implemented exception will be thrown
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheFactory.CanCreateDataSourceEnumerator">
            <summary>
            Returns true if a CacheDataSourceEnumerator can be created; otherwise false 
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheInfoMessageEventArgs">
            <summary>
            Provides data for the InfoMessage event.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheInfoMessageEventArgs.ToString">
            <summary>
            Retrieves a string representation of the InfoMessage event.
            </summary>
            <returns></returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheInfoMessageEventArgs.Errors">
            <summary>
            Gets the collection of warnings sent from the server.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheInfoMessageEventArgs.Message">
            <summary>
            Gets the full text of the error sent from the database.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheInfoMessageEventArgs.Source">
            <summary>
            Gets the name of the object that generated the error.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheInfoMessageEventHandler">
            <remarks>
            Represents the method that will handle the InfoMessage event of a <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames">
            <summary>
            Provides a list of constants for use with the GetSchema method to retrieve metadata collections.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.Columns">
            <summary>
            A constant for use with the GetSchema method that represents the Columns collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.Indexes">
            <summary>
            A constant for use with the GetSchema method that represents the Indexes collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.ProcedureColumns">
            <summary>
            A constant for use with the GetSchema method that represents the ProcedureColumns collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.ProcedureParameters">
            <summary>
            A constant for use with the GetSchema method that represents the ProcedureParameters collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.Procedures">
            <summary>
            A constant for use with the GetSchema method that represents the Procedures collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.Tables">
            <summary>
            A constant for use with the GetSchema method that represents the Tables collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.Views">
            <summary>
            A constant for use with the GetSchema method that represents the Views collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.ColumnPrivileges">
            <summary>
            A constant for use with the GetSchema method that represents the ColumnPrivileges collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.ForeignKeys">
            <summary>
            A constant for use with the GetSchema method that represents the ForeignKeys collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.PrimaryKeys">
            <summary>
            A constant for use with the GetSchema method that represents the PrimaryKeys collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.SpecialColumns">
            <summary>
            A constant for use with the GetSchema method that represents the SpecialColumns collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.TablePrivileges">
            <summary>
            A constant for use with the GetSchema method that represents the TablePrivileges collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.Databases">
            <summary>
            A constant for use with the GetSchema method that represents the Databases collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.IndexColumns">
            <summary>
            A constant for use with the GetSchema method that represents the IndexColumns collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.Users">
            <summary>
            A constant for use with the GetSchema method that represents the Users collection.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheMetaDataCollectionNames.ViewColumns">
            <summary>
            A constant for use with the GetSchema method that represents the ViewColumns collection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheParameter">
            <remarks>
            Represents a parameter to a <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> and optionally its mapping to <see cref="T:System.Data.DataSet"/> columns. 
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> class that uses the parameter name
            and a value of the new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/>.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="value">An <see cref="T:System.Object"/> that is the value of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/>.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.#ctor(System.String,InterSystems.Data.CacheClient.CacheDbType)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> class that uses
            the parameter name and the Cache data type.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="type">One of the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/> values.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.#ctor(System.String,InterSystems.Data.CacheClient.CacheDbType,System.String)">
            <summary>
            Test API.  Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> class that uses
            the parameter name, Cache data type and name of the Source column.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="type">One of the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/> values.</param>
            <param name="sourcecolumn">Name of the source column</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.#ctor(System.String,InterSystems.Data.CacheClient.CacheDbType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> class that uses
            the parameter name, <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/> and size of the parameter.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="type">One of the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.#ctor(System.String,InterSystems.Data.CacheClient.CacheDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> class that uses the parameter name,
            the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection"/>, nullable,
            the precision of the parameter, the scale of the parameter, the source column, a
            DataRowVersion to use, and the value of the parameter.
            </summary>
            <param name="parameterName">The name of the parameter to map.</param>
            <param name="cacheType">One of the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="parameterDirection">One of the ParameterDirection values.</param>
            <param name="precision">The total number of digits to the left and right of the decimal point to which Value is resolved.</param>
            <param name="scale">The total number of decimal places to which Value is resolved.</param>
            <param name="srcColumn">The name of the source column.</param>
            <param name="srcVersion">One of the DataRowVersion values.</param>
            <param name="SourceColumnNullMapping">true if the value of the field can be null; otherwise false.</param>
            <param name="value">An Object that is the value of the CacheParameter.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.#ctor(System.String,InterSystems.Data.CacheClient.CacheDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> class that uses the parameter name,
            the type of the parameter, the size of the parameter, a <see cref="T:System.Data.ParameterDirection"/>, nullable,
            the precision of the parameter, the scale of the parameter, the source column, a
            DataRowVersion to use, and the value of the parameter.
            </summary>
            <param name="parameterName">The name of the parameter to map.</param>
            <param name="cacheType">One of the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="parameterDirection">One of the ParameterDirection values.</param>
            <param name="isNullable">true if the value of the field can be null; otherwise false.</param>
            <param name="precision">The total number of digits to the left and right of the decimal point to which Value is resolved.</param>
            <param name="scale">The total number of decimal places to which Value is resolved.</param>
            <param name="srcColumn">The name of the source column.</param>
            <param name="srcVersion">One of the DataRowVersion values.</param>
            <param name="value">An Object that is the value of the CacheParameter.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.#ctor(System.String,InterSystems.Data.CacheClient.CacheDbType,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> class that uses
            the parameter name, <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/>, size of the parameter, and
            name of source column.
            </summary>
            <param name="name">The name of the parameter to map.</param>
            <param name="type">One of the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="sourcecolumn">The sourcecolumn.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.ResetCacheDbType">
            <summary>
            Resets the type associated with this <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.ResetDbType">
            <summary>
            Resets the type associated with this <see cref="T:System.Data.Common.DbParameter"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameter.ToString">
            <summary>
            Return a string that contains the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.ParameterName"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.SourceColumnNullMapping">
            <summary>
            Sets or gets a value which indicates whether the source column is nullable. This lets <see cref="T:System.Data.Common.DbCommandBuilder"/> correctly generate Update statements for nullable columns.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.DbType">
            <summary>
            Return/Set the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.DbType"/> of the parameter.
            </summary>
            <value>The <see cref="P:InterSystems.Data.CacheClient.CacheParameter.DbType"/> </value>
            <returns>One of the <see cref="T:System.Data.DbType"></see> values. The default is <see cref="F:System.Data.DbType.String"></see>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="T:System.Data.DbType"></see>. </exception>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.Direction">
            <summary>
            Return/Set a value to indicates <see cref="T:System.Data.ParameterDirection"/>. For example, Input, output,
            bidirectional, or a stored procedure return value parameter.  Default is Input.
            </summary>
            <value>Indicates <see cref="T:System.Data.ParameterDirection"/>.</value>
            <returns>One of the <see cref="T:System.Data.ParameterDirection"></see> values. The default is Input.</returns>
            <exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection"></see> values. </exception>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.IsNullable">
            <summary>
            Return/Set a value indicating if the parameter accepts null values.
            </summary>
            <value>A value indicating if the parameter accepts null values.</value>
            <returns>true if null values are accepted; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.IsStream">
            <summary>
            Return true if the parameter is a Cache stream, false otherwise.
            </summary>
            <value><c>true</c> if this instance is stream; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.IsBound">
            <summary>
            Return true if the parameter is a Bound, false otherwise.
            </summary>
            <value><c>true</c> if this instance is bound; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.IsInBound">
            <summary>
            Return true if the parameter is a Bound, false otherwise.
            </summary>
            <value><c>true</c> if this instance is bound; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType">
            <summary>
            Return/Set the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.CacheDbType"/> of the parameter.
            </summary>
            <value>The CacheDb type.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.ParameterName">
            <summary>
            Return/Set the name of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/>.
            </summary>
            <value>The name of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/>.</value>
            <returns>The name of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"></see>. The default is an empty string.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.Precision">
            <summary>
            Return/Set the maximum number of digits used to represent the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.Value"/> property.
            </summary>
            <value>The maximum number of digits.</value>
            <returns>The maximum number of digits used to represent the Value property of a Parameter object. The default value is 0, which indicates that the CacheProvider sets the precision for Value.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.Scale">
            <summary>
            Return/Set the number of decimal places to which <see cref="P:InterSystems.Data.CacheClient.CacheParameter.Value"/> is resolved.
            </summary>
            <value>The number of decimal places.</value>
            <returns>The number of decimal places to which <see cref="!:CacheParameter.Value"></see> is resolved. The default is 0.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.Size">
            <summary>
            Return/Set the maximum size of the data within the column.
            </summary>
            <value>The maximum size of data.</value>
            <returns>The maximum size, of the data within the column. The default value is inferred from the the parameter value.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.SourceColumn">
            <summary>
            Return/Set the name of the source column mapped to the DataSet and used for loading or returning the <see cref="P:InterSystems.Data.CacheClient.CacheParameter.Value"/>.
            </summary>
            <value>The source column.</value>
            <returns>The name of the source column.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.SourceVersion">
            <summary>
            Return/Set the <see cref="T:System.Data.DataRowVersion"/> to use when you load <see cref="P:InterSystems.Data.CacheClient.CacheParameter.Value"/>.
            </summary>
            <value>The <see cref="T:System.Data.DataRowVersion"/>.</value>
            <returns>One of the <see cref="T:System.Data.DataRowVersion"></see> values. The default is Current.</returns>
            <exception cref="T:System.ArgumentException">The property was not set one of the <see cref="T:System.Data.DataRowVersion"></see> values. </exception>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameter.Value">
            <summary>
            Return/Set the value of the parameter.
            </summary>
            <value>The parameter value.</value>
            <returns>An <see cref="T:System.Object"></see> that is the value of the parameter. The default value is null.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheParameterCollection">
            <remarks>
            Represents a collection of <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> associated with a <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/>.
            This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Add(System.Object)">
            <summary>
            Adds the specified value to the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="value">A <see cref="T:System.Object"/>.</param>
            <returns>
            The index of the new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Add(InterSystems.Data.CacheClient.CacheParameter)">
            <summary>
            Adds the specified <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> to the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> to add to the collection.</param>
            <returns>
            <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified parameter name and value as a new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> to the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">A <see cref="T:System.Object"/>.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Add(System.String,InterSystems.Data.CacheClient.CacheDbType)">
            <summary>
            Adds the specified parameter name and value as a new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> to the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="cacheType">One of the <see cref="T:InterSystems.Data.CacheClient.CacheDbType"/> values.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Add(System.String,InterSystems.Data.CacheClient.CacheDbType,System.Int32)">
            <summary>
            Adds a new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> to the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> given
            the parameter name, data type, and column length.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="cacheType">One of the <see cref="T:InterSystems.Data.CacheClient.CacheDbType"/> values.</param>
            <param name="size">The length of the column.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Add(System.String,InterSystems.Data.CacheClient.CacheDbType,System.Int32,System.String)">
            <summary>
            Adds a new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> to the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> given
            the parameter name, data type, column length, and source column.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="cacheType">One of the <see cref="T:InterSystems.Data.CacheClient.CacheDbType"/> values.</param>
            <param name="size">The length of the column.</param>
            <param name="sourceColumn">The name of the source column.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.AddWithValue(System.String,System.Object)">
            <summary>
            Adds the specified parameter name and value as a new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> to the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="parameterName">The name of the parameter.</param>
            <param name="value">A <see cref="T:System.Object"/>.</param>
            <returns>
            The new <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object in the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Clear">
            <summary>
            Removes all <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> objects from the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Contains(InterSystems.Data.CacheClient.CacheParameter)">
            <summary>
            Return the location of the specified <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> within the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> instance in the collection to find.</param>
            <returns>
            true if the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> is in the collection, otherwise, false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Contains(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> passed as an <see cref="T:System.Object"/>  is in this <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> value.</param>
            <returns>
            true if the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> contains the value, otherwise false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Contains(System.String)">
            <summary>
            Return true if a <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object with the specified parameter name exists in the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="value">The name of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object to find.</param>
            <returns>
            true if the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> contains the parameter, otherwise false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> to the specified one-dimensional <see cref="T:System.Array"/> starting at the specified destination <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from the current <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.</param>
            <param name="index">An integer that represents the index in the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> at which copying starts.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.GetEnumerator">
            <summary>
            Return an enumerator that iterates through the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> for the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.IndexOf(InterSystems.Data.CacheClient.CacheParameter)">
            <summary>
            Return the location of the specified <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> within the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object in the collection to find.</param>
            <returns>
            The zero-based location of the specified <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> within the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.IndexOf(System.Object)">
            <summary>
            Return the location of the specified <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> passed as an <see cref="T:System.Object"/> within the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to find.</param>
            <returns>
            The zero-based location of the specified <see cref="T:System.Object"/> that is a <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> within the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.IndexOf(System.String)">
            <summary>
            Return the location of the specified <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> with the specified name.
            </summary>
            <param name="parameterName">The case-sensitive name of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> to find.</param>
            <returns>
            The zero-based location of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object with the specified case-sensitive name.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a <see cref="T:System.Object"/> into the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which the object should be inserted.</param>
            <param name="value">A <see cref="T:System.Object"/> to be inserted in the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NullReferenceException">value is null reference in the <see cref="T:System.Collections.IList"></see>.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.Remove(System.Object)">
            <summary>
            Removes the <see cref="T:System.Object"/> from the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.
            </summary>
            <param name="value">A <see cref="T:System.Object"/> to be removed from the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/>.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> from the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.RemoveAt(System.String)">
            <summary>
            Removes the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> from the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"/> with the specified parameter name.
            </summary>
            <param name="parameterName">The name of the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> object to remove.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.AddRange(InterSystems.Data.CacheClient.CacheParameter[])">
            <summary>
            Adds an array of CacheParameter values to the end of the CacheParameterCollection.
            </summary>
            <param name="values">An array of CacheParameter objects to add to the collection.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.AddRange(System.Array)">
            <summary>
            Adds an array of values to the end of the CacheParameterCollection
            </summary>
            <param name="values">The Array values to add.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.GetParameter(System.Int32)">
            <summary>
            GetParameter as DbParameter using index
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.GetParameter(System.String)">
            <summary>
            GetParameter as DbParameter using parameter name
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.SetParameter(System.Int32,System.Data.Common.DbParameter)">
            <summary>
            Set DbParameter using index
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheParameterCollection.SetParameter(System.String,System.Data.Common.DbParameter)">
            <summary>
            Set DbParameter using parameter name
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameterCollection.IsSynchronized">
            <summary>
            Gets a value that indicates whether the CacheParameterCollection is synchronized. Read-only.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameterCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the CacheParameterCollection. Read-only.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameterCollection.IsFixedSize">
            <summary>
            Gets a value that indicates whether the CacheParameterCollection has a fixed size. Read-only.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameterCollection.IsReadOnly">
            <summary>
            Gets a value that indicates whether the CacheParameterCollection is read-only.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameterCollection.Count">
            <summary>
            Return the number of User defined <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> instances.
            </summary>
            <value>The number of parameters.</value>
            <returns>The number of elements contained in the <see cref="T:InterSystems.Data.CacheClient.CacheParameterCollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameterCollection.Item(System.Int32)">
            <summary>
            Return/Set the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> at the specified index.
            </summary>
            <value>The zero-based index of the parameter to retrieve.</value>
            <returns>The <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> at the specified index.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheParameterCollection.Item(System.String)">
            <summary>
            Return/Set the <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> with the specified name.
            </summary>
            <value>The name of the parameter to retrieve.</value>
            <returns>The <see cref="T:InterSystems.Data.CacheClient.CacheParameter"/> with the specified name.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CachePool">
            <remarks>
            CachePool holds the devices that are connected to a particular Cache Server database.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CachePoolManager">
            <summary>
            CachePoolManager is a static class used to obtain a pooled device connection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CachePoolManager.IdleCount">
            <summary>
            Total number idle connections in all the pools.
            </summary>
            <returns>Idle connection count</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CachePoolManager.IdleCount(InterSystems.Data.CacheClient.CacheADOConnection)">
            <summary>
            Total number idle connections in the pool matching the connection object.
            </summary>
            <param name="conn">CacheADOConnection object</param>
            <returns>Idle connection count</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CachePoolManager.InUseCount">
            <summary>
            Total number InUse connections in all the pools.
            </summary>
            <returns>InUse connection count</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CachePoolManager.InUseCount(InterSystems.Data.CacheClient.CacheADOConnection)">
            <summary>
            Total number InUse connections in the pool matching the connection object.
            </summary>
            <param name="conn">CacheADOConnection object</param>
            <returns>InUse connection count</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CachePoolManager.RecycleConnections(InterSystems.Data.CacheClient.CacheADOConnection,System.Boolean)">
            <summary>
            Recycles connections matching the connection object
            </summary>
            <param name="conn">CacheADOConnection object</param>
            <param name="remove">
            true: removes all idle connections in the pool and tags InUse devices as MarkedToClose. 
            false: returns as many InUse Connections to the Idle Pool as possible.
            </param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CachePoolManager.RecycleAllConnections(System.Boolean)">
            <summary>
            Recycles connections in all Pools
            </summary>
            <param name="remove">
            true: removes all idle connections in the pool and tags InUse devices as MarkedToClose. 
            false: returns as many InUse Connections to the Idle Pool as possible.
            </param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CachePoolManager.RemoveAllPoolConnections">
            <summary>
            This removes all the device connections and removes the Pools
            Does not care about what state the connections are in
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CachePoolManager.RemoveAllIdleConnections">
            <summary>
            Remove Idle connections from all connection Pools
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CachePoolManager.ActiveConnectionCount">
            <summary>
            Total number of established connections in all the pools.
            Count includes Idle and InUse connections.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheRowUpdatedEventArgs">
            <remarks>
            Provides data for the RowUpdated event. 
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.CacheRowUpdatedEventArgs"/> class.
            </summary>
            <param name="row">The row.</param>
            <param name="command">The command.</param>
            <param name="statementType">Type of the statement.</param>
            <param name="tableMapping">The table mapping.</param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheRowUpdatedEventArgs.Command">
            <summary>
            Return/Set the SqlCommand to execute when performing the Update.
            </summary>
            <value>The <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/>.</value>
            <returns>The <see cref="T:InterSystems.Data.CacheClient.CacheCommand"></see> executed when <see cref="M:CacheDataAdapter.Update(System.Data.DataSet)"></see> is called.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheRowUpdatedEventHandler">
            <remarks>
            Represents the method that will handle the RowUpdated event of a CacheDataAdapter.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheRowUpdatingEventArgs">
            <remarks>
            Provides data for the RowUpdating event.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
            <summary>
            Initializes a new instance of the CacheRowUpdatingEventArgs class.
            </summary>
            <param name="row">The DataRow to update.</param>
            <param name="command">The CacheCommand to execute during the update operation.</param>
            <param name="statementType">One of the StatementType values that specifies the type of query executed.</param>
            <param name="tableMapping">The DataTableMapping sent through Update.</param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheRowUpdatingEventArgs.BaseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheRowUpdatingEventArgs.Command">
            <summary>
            Gets or sets the <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> to execute when performing the Update.
            </summary>
            <value>The <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/>.</value>
            <returns>The <see cref="T:CacheCommand"></see> to execute during the <see cref="M:CacheDataAdapter.Update(System.Data.DataSet)"></see>.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheRowUpdatingEventHandler">
            <remarks>
            Represents the method that will handle the RowUpdating event of a CacheDataAdapter.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheTransaction">
            <remarks>
            Represents an SQL transaction to be made in Cache Server database. This class cannot be inherited.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheTransaction.Commit">
            <summary>
            Commits the database transaction.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheTransaction.Dispose(System.Boolean)">
            <summary>
            Dispose of transaction
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheTransaction.Rollback">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheTransaction.Rollback(System.String)">
            <summary>
            Rolls back a transaction from a pending state to a savepoint.
            </summary>
            <param name="savePointName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheTransaction.Save(System.String)">
            <summary>
            Establish a savepoint name with the Cache Server
            </summary>
            <param name="savePointName"></param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheTransaction.DbConnection">
            <summary>
            Return DbConnection
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheTransaction.Connection">
            <summary>
            Return the <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> object associated with the transaction,
            or null if the transaction is no longer valid.
            </summary>
            <value>The <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/>.</value>
            <returns>The <see cref="T:InterSystems.Data.CacheClient.CacheADOConnection"/> object to associate with the transaction.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheTransaction.IsolationLevel">
            <summary>
            Returns the <see cref="P:InterSystems.Data.CacheClient.CacheTransaction.IsolationLevel"/> for this transaction.
            </summary>
            <value>The <see cref="P:InterSystems.Data.CacheClient.CacheTransaction.IsolationLevel"/>.</value>
            <returns>The <see cref="T:System.Data.IsolationLevel"></see> for this transaction. The default is ReadCommitted.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.PARAM_MODE">
            <remarks>
            Parameter Mode or Kind. The PreParser and CacheCommand classifies a Parameter into one of these types
            Works with CacheParameter class which may be converted to CacheParameter
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.STMT_TYPE">
            <summary>
            Statement Type. The PreParser and CacheCommand classifies the input statement into one of these types
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.ODC">
            <remarks>
            Summary description for ODC.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.Common.ADP">
            <summary>
            Summary description for ADP.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheDbType">
            <remarks>
            List of Cache Supported Types
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.TimeStamp">
            <summary>
            CacheTimeStamp
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.UniqueIdentifier">
            <summary>
            CacheGUID
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.ResultSet">
            <summary>
            CacheResultSet
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.Bit">
            <summary>
            CacheBoolean
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.TinyInt">
            <summary>
            CacheByte
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.BigInt">
            <summary>
            CacheInt64
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.LongVarBinary">
            <summary>
            CacheStreamBinary
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.VarBinary">
            <summary>
            CacheBinary
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.LongVarChar">
            <summary>
            CacheStreamChar
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.Numeric">
            <summary>
            CacheSingle
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.Int">
            <summary>
            CacheInt32
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.SmallInt">
            <summary>
            CacheInt16
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.Double">
            <summary>
            CacheDouble
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.Date">
            <summary>
            CacheDateTime  
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.Time">
            <summary>
            CacheTime
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.DateTime">
            <summary>
            CacheDateTime (Timestamp)
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheDbType.NVarChar">
            <summary>
            CacheString
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.TypeMap">
            <summary>
            Summary description for TypeMap.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.Common.Res">
            <remarks>
            Summary description for Res.
            </remarks>
        </member>
        <member name="T:InterSystems.CConnectionsInterface">
            <remarks>
            Summary description for CConnectionsInterface.
            </remarks>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.InvokeDialog(System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Invoke dialog using the following parameters.
            </summary>
            <param name="sConnName"></param>
            <param name="sConnString"></param>
            <param name="sNameSpace"></param>
            <param name="sUserName"></param>
            <param name="sPassword"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.InvokeDialog(System.String@,System.String@,System.String@,System.String@,System.String@,System.String)">
            <summary>
            Invoke dialog using the following parameters.
            </summary>
            <param name="sConnName"></param>
            <param name="sConnString"></param>
            <param name="sNameSpace"></param>
            <param name="sUserName"></param>
            <param name="sPassword"></param>
            <param name="sTitle"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.openserverkey(System.Boolean,System.Boolean)">
            <summary>
            Open Servers Registry key
            </summary>
            <param name="bwrite"></param>
            <param name="bUser"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.openserversubkey(System.String,System.Boolean,System.Boolean)">
            <summary>
            Open Server key.
            </summary>
            <param name="subkey"></param>
            <param name="bwrite"></param>
            <param name="bUser"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetLastConnectionName">
            <summary>
            Get last Connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetLastConnectionName(System.String)">
            <summary>
            Set last connection name.
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetLastNSProjec(System.String,System.String@,System.String@)">
            <summary>
            Get last Namespace and Project.
            </summary>
            <param name="sName"></param>
            <param name="sNamespace"></param>
            <param name="sProject"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetLastNSProjec(System.String,System.String,System.String)">
            <summary>
            Set last namespace and project.
            </summary>
            <param name="sName"></param>
            <param name="sNamespace"></param>
            <param name="sProject"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.DeleteConnFromRegistry(System.String)">
            <summary>
            Delete Connection entry from Regsitry
            </summary>
            <param name="ConnName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.AddConnToRegistry(System.String,System.String,System.String)">
            <summary>
            Add Connection to Registry.
            </summary>
            <param name="ConnName"></param>
            <param name="ipAdress"></param>
            <param name="PortNo"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetConnectionString(System.String)">
            <summary>
            Get Server connection string.
            </summary>
            <param name="sName"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetNameOfConnection(System.String,System.String@)">
            <summary>
            Get Name of the connection.
            </summary>
            <param name="sConStr"></param>
            <param name="sName"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetUserName">
            <summary>
            Get default Username.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetUserName(System.String)">
            <summary>
            Set default Username.
            </summary>
            <param name="sName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetTelnetPort(System.String,System.String)">
            <summary>
            Get Server Telnet port.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetTelnetPort(System.String,System.String)">
            <summary>
            Set Telnet port.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sPort"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetComment(System.String,System.String)">
            <summary>
            Get Server Comment from Registry.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetComment(System.String,System.String)">
            <summary>
            Set server comment
            </summary>
            <param name="sConnectionName"></param>
            <param name="sComment"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetAuthenticationMethod(System.String,System.String)">
            <summary>
            Get Authentication Method (simple/kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetAuthenticationMethod(System.String,System.String)">
            <summary>
            Set Authentication Method (simple/kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetConnectionSecurityLevel(System.String,System.String)">
            <summary>
            Get Kerberos security level.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetConnectionSecurityLevel(System.String,System.String)">
            <summary>
            Set Connection Security Level (kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetServerType(System.String,System.String)">
            <summary>
            Get Server OS type.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetServerType(System.String,System.String)">
            <summary>
            Set Server OS Type.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetServicePrincipalName(System.String,System.String)">
            <summary>
            Get Service Principal Name from Registry (kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetServicePrincipalName(System.String,System.String)">
            <summary>
            Set Service Principal Name (kerberos).
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetServerUsername(System.String,System.String)">
            <summary>
            Set Server Username.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetServerUsername(System.String,System.String)">
            <summary>
            Get Server connection username.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetServerPassword(System.String,System.String)">
            <summary>
            Set server password.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sName"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetServerPassword(System.String,System.String)">
            <summary>
            Get Server Password.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.GetLastNamespace(System.String,System.String)">
            <summary>
            Get last Namespace.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sDefault"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.SetLastNamespace(System.String,System.String)">
            <summary>
            Set last namespace.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sVal"></param>
        </member>
        <member name="M:InterSystems.CConnectionsInterface.LoginDialog(System.String,System.String@,System.String@)">
            <summary>
            Invoke Login Dialog.
            </summary>
            <param name="sConnectionName"></param>
            <param name="sUsername"></param>
            <param name="sPassword"></param>
            <returns></returns>
        </member>
        <member name="T:InterSystems.ConnectionList">
            <remarks>
            Summary description for ConnectionList.
            </remarks>
        </member>
        <member name="F:InterSystems.ConnectionList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:InterSystems.ConnectionList.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:InterSystems.ConnectionList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:InterSystems.ConnectionList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:InterSystems.ConnectionNet">
            <remarks>
            Access Class to create Connection Dialog
            </remarks>
        </member>
        <member name="M:InterSystems.ConnectionNet.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:InterSystems.ConnectionNet.ConnectionDialog">
            <summary>
            Invoke Connection dialog
            </summary>
        </member>
        <member name="T:InterSystems.Security.PwdMgr">
            <remarks>
            Password Management.
            </remarks>
        </member>
        <member name="T:InterSystems.Form1">
            <remarks>
            Summary description for Form1.
            </remarks>
        </member>
        <member name="F:InterSystems.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:InterSystems.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:InterSystems.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:InterSystems.Login">
            <remarks>
            Summary description for Login.
            </remarks>
        </member>
        <member name="F:InterSystems.Login.m_ConName">
            <summary>
            Required designer variable.
            </summary>
            
        </member>
        <member name="M:InterSystems.Login.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:InterSystems.Login.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.Gateway.Service">
            <summary>DotNet Gateway Service interface</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.Gateway.Service.execute(System.Byte[])">
            <summary>This method is to be implemented by Service implementations.</summary>
            <param name="args">arguments</param>
            <returns>results as a byte array</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.Gateway.XMLClassGenerator.addAttribute(System.String,System.String)">
            XML writes
        </member>
        <member name="T:InterSystems.Data.CacheClient.List.CacheListReader">
            <summary>
            CacheListReader - Read only methodes to extract information from $List using CacheList class
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.List.CacheList">
            <summary>
            CacheList - Static access to $list elements. NOT thread safe
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_UNDEF">
            <summary>
            $list data type - Undefined 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_PLACEHOLDER">
            <summary>
            $list data type - future use (not used)
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_ASCII">
            <summary>
            $list data type - ASCII data 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_UNICODE">
            <summary>
            $list data type - Unicode data 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_XUNICODE">
            <summary>
            $list data type - XUnicode data (not used) 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_POSINT">
            <summary>
            $list data type - Positive integer 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_NEGINT">
            <summary>
            $list data type - Negative integer
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_POSNUM">
            <summary>
            $list data type - Positive decimal number
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_NEGNUM">
            <summary>
            $list data type - Negative decimal number
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ITEM_DOUBLE">
            <summary>
            $list data type - IEEE double format
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.TWO_SIXTY">
            <summary>
            2**60 mask used for PosixTime positive conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.TWO_SIXTY_NEG">
            <summary>
            mask used for PosixTime negative conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.TWO_SIXTY_NEG_REV">
            <summary>
            mask used for PosixTime negative conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.ONE_DAY">
            <summary>
             seconds in one day
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.HOROLOG_ZERO">
            <summary>
             Seconds on $h == 0 -   1840-12-31 at GMT
             </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.POSIX_ZERO">
            <summary>
             # of ticks for POSIXTIME 
             </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.LATIN1LOCALE">
            <summary>
            Latin1 locale
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.CacheList.UNICODELOCALE">
            <summary>
            UNICODE locale
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetListElement(System.Int32,InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
             ListItem objects are passed in to be initialized by getListElement
             To use this API the ListItem.buffer must be defined in the ListItem
             </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.Next(System.Byte[],System.Int32)">
            <summary>
             return offset to next list element 
             </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetString(InterSystems.Data.CacheClient.List.ListItem,System.Text.Encoding)">
            <summary>
            Returns the String value of ListItem element it. locale can be null
            </summary>
            <param name="it">ListItem element</param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetDouble(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetFloat(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetInt(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetShort(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetLong(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetBigDecimal(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetBigDecimal(InterSystems.Data.CacheClient.List.ListItem,System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <param name="scale">decimal scale to use in returned value</param>
            <returns>Returns the specified list item as a <see cref="T:System.Decimal"/> with scale.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetBoolean(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetOneByte(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetByteArray(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a byte array.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetDate(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetTime(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.GetTimestamp(InterSystems.Data.CacheClient.List.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="it"><see cref="T:InterSystems.Data.CacheClient.List.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetString(System.Byte[],System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="s"><see cref="T:System.String"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>offset to the end of the inserted element plus one</returns>  
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetString(System.Byte[],System.Int32,System.String,System.Int32,System.Text.Encoding)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="s"><see cref="T:System.String"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <param name="length">number of characters in the string to set in the list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetUndefined(System.Byte[],System.Int32)">
            <summary>
            adds (byte) 1 onto CacheList. for default Parameters in Stored Procs.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetByteArray(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="byteArrayValue">byte[] value</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetByteArray(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="byteArrayValue">byte[] value</param>
            <param name="length">number of bytes to copy</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetDouble(System.Byte[],System.Int32,System.Double,System.Boolean)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="doubleValue"><see cref="T:System.Double"/></param>
            <param name="bIEEEDouble">Use IEEE format for protocol version greater than 38</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetLong(System.Byte[],System.Int32,System.Int64)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="longValue"><see cref="T:System.Int64"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetInt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="intValue"><see cref="T:System.Int32"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetBool(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="b">bool value</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.setUndefined(System.Byte[],System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetDate(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetTime(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.SetTimestamp(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.HorologFromTime(System.DateTime)">
            <summary>
            Extract time from DateTime and return in HOROLOG format
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.HorologFromDate(System.DateTime)">
            <summary>
            Extract Date from DateTime and return in HOROLOG format
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.TimeFromHorolog(System.Int32)">
            <summary>
            Convert time in HOROLOG format to TimeSpan
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.DateFromHorolog(System.Int32)">
            <summary>
            Convert date in HOROLOG format to DateTime
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.PosixFromDate(System.DateTime)">
            <summary>
            Extract Date and Time from DateTime and return in POSIXTIME format
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.DateFromPosix(System.Int64)">
            <summary>
            Convert date and time in POSIXTIME format to Date
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.CacheList.addListLengthAndType(System.Byte[],System.Int32,System.Int32,System.SByte)">
            stuff methods for formatting $list data into a buffer converting from native type   
        </member>
        <member name="T:InterSystems.Data.CacheClient.List.ListItem">
            <summary>
            ListItem - data element and itterator for CacheList
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.ListItem.buffer">
            <summary>
            byte array for data, allocated by caller 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.ListItem.listBufferEnd">
            <summary>
            pointer to the end of buffer
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.ListItem.dataOffset">
            <summary>
            current pointer to list element
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.ListItem.dataLength">
            <summary>
            lenght of data portion of currect list document
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.ListItem.type">
            <summary>
            type of current list document
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.ListItem.isNull">
            <summary>
            Is current element empty
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.List.ListItem.nextOffset">
            <summary>
            pointer to next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.ListItem.#ctor(System.Byte[],System.Int32)">
             <summary>
            In this constructor the listEnd passed by caller 
             </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.ListItem.#ctor(System.Byte[])">
            <summary>
            In this constructor the buffer length defined by size of buffer array
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.ListItem.hasNext">
            <summary>
            Does list has next element
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.List.ListItem.clone">
            <summary>
            shallow copy
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.ICacheObject">
            <remarks>
            Interface for proxy classes.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.ClassServerName">
            <summary>
            Server name of the proxy class that instantiated the proxy object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.Init(InterSystems.Data.CacheClient.CacheConnection,System.Int64,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="oref">The oref.</param>
            <param name="clsName">Class name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.Close(System.Boolean)">
            <summary>
            <para>Decrements proxy reference count.</para>
            <para> If the reference count becomes 0, closes the server object.</para>
            </summary>
            <param name="useCache">if set to <c>true</c>, caches closing of the server (if necessary) until the next server message .</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.Close">
            <summary>
            <para>Decrements proxy reference count.</para>
            <para> If the reference count becomes 0, closes the server object.</para>
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.DropConnection">
            <summary>
            Disassociates the object from its Connection object. Called when the Connection object loses its connection to the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.AddRef">
            <summary>
            Adds proxy reference count.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.AddPropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
             Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.GetPropertyOwners">
            <summary>
            Returns the list of property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.ICacheObject.MarkPropertyOwnersDescendantModified">
            <summary>
            Recursively mark IsDescendantModified in property owners.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.ICacheObject.Oref">
            <summary>
            Gets the oref of the server object.
            </summary>
            <value>The oref.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.ICacheObject.ClassName">
            <summary>
            Gets the class name of the server object.
            </summary>
            <value>Class name of the server object.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.ICacheObject.Connection">
            <summary>
            Gets the connection to the server object.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.ICacheObject.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected to a server object.
            </summary>
            <value>
            	<c>true</c> if this instance is connected to a server object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.ICacheObject.IsModified">
            <summary>
            Gets or sets a value indicating whether this instance was modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.ICacheObject.IsDescendantModified">
            <summary>
            Gets or sets a value indicating whether this instance has any descendant object properties that were modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.ICacheObject.RefCount">
            <summary>
            Gets the proxy reference count.
            </summary>
            <value>The proxy reference count.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.ICacheObject.IsClassGenerated">
            <summary>
            Returns whether the instance belongs to a class that was generated
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheStatus">
            <remarks>
            Implementation of <c>%Status</c>.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheStatus.ThrowExceptionOnError">
            <summary>
            If set to <c>true</c>, <see cref="T:InterSystems.Data.CacheTypes.CacheStatus"/> throws an exception when an instance is set to a status indicating an error.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheStatus.conn">
            <summary>
            Connection to the server process.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatus.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStatus"/> class.
            </summary>
            <param name="conn">The connection</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatus.SetOK">
            <summary>
            Marks the status as OK
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatus.Clear">
            <summary>
            Clears this instance and marks it as null.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatus.ThrowException">
            <summary>
            Throws the error contained in the status as an exception.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatus.BinaryData">
            <summary>
            Gets the server binary representation.
            </summary>
            <value>The server binary representation.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatus.Connection">
            <summary>
            Gets the connection.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatus.Code">
            <summary>
            Gets or sets the status code.
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatus.Message">
            <summary>
            Gets the status message.
            </summary>
            <value>The status message.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatus.CodeString">
            <summary>
            Gets the status code.
            </summary>
            <value>The status code.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatus.IsOK">
            <summary>
            Gets a value indicating whether this instance contains no error.
            </summary>
            <value><c>true</c> if this instance contains no error; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheObject">
            <remarks>
            Implementation of <see cref="T:InterSystems.Data.CacheTypes.ICacheObject"/> interface that is used for generated classes.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheObject.conn">
            <summary>
            Connection to the server object.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheObject.CreateUserObjState">
            <summary>
            Delegate for creating UserObjState objects.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.AssertIsConnected">
            <summary>
            Asserts that the instance is connected.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Init(InterSystems.Data.CacheClient.CacheConnection,System.String)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Init(InterSystems.Data.CacheClient.CacheConnection,System.String,System.Object[])">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.DropConnection">
            <summary>
            Disassociates the object from its Connection object. Called when the Connection object loses its connection to the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetSwizzledProperties">
            <summary>
            Returns a collection of the names of allready swizzled properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetSwizzledPropertyPaths">
            <summary>
            Returns a collection of the property paths for allready swizzled properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Init(InterSystems.Data.CacheClient.CacheConnection,System.Int64,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="oref">The oref.</param>
            <param name="clsName">Class name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.IsClassGeneratedImpl">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Dispose">
            <summary>
            Calls <see cref="M:InterSystems.Data.CacheTypes.CacheObject.Close"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Close">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Close(System.Boolean)">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
            <param name="useCache">if set to <c>true</c>, caches closing of the server (if necessary) until the next server message .</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.AddRef">
            <summary>
            Adds proxy reference count.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetRefCount(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Gets the proxy reference count for the specified object.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.IsPropertySwizzled(System.String)">
            <summary>
            Returns a value indicating whether a property was swizzled.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.UnswizzleProperty(System.String)">
            <summary>
            Reduces the reference count of the property value object and forces the next call to get the
            property value to go to the server. If the property value object had reference count 1,
            it is closed on the server.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.AddPropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetPropertyOwners">
            <summary>
            Returns the list of property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.#ctor(InterSystems.Data.CacheClient.CacheConnection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObject"/> class.
            </summary>
            <param name="conn">The connection</param>
            <param name="clsName">Name of the class.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.#ctor(InterSystems.Data.CacheClient.CacheConnection,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObject"/> class.
            </summary>
            <param name="conn">The connection</param>
            <param name="args">The arguments</param>
            <param name="clsName">Name of the class.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.OpenId(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String,System.Int32,System.Int32,System.Collections.IEnumerable,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Projection of %OpenId()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.OpenId(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String,System.Int32,System.Int32,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Projection of %OpenId()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.OpenId(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String,System.Int32,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Projection of %OpenId()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.OpenId(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Projection of %OpenId()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.OpenId(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String)">
            <summary>
            Projection of %OpenId()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Open(InterSystems.Data.CacheClient.CacheConnection,System.String,System.Byte[],System.Int32,System.Int32,System.Collections.IEnumerable,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Projection of %Open()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Open(InterSystems.Data.CacheClient.CacheConnection,System.String,System.Byte[],System.Int32,System.Int32,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Projection of %Open()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Open(InterSystems.Data.CacheClient.CacheConnection,System.String,System.Byte[],System.Int32,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Projection of %Open()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Open(InterSystems.Data.CacheClient.CacheConnection,System.String,System.Byte[],InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Projection of %Open()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.Open(InterSystems.Data.CacheClient.CacheConnection,System.String,System.Byte[])">
            <summary>
            Projection of %Open()
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            API for the dynamic binding
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            API for the dynamic binding
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>
            API for the dynamic binding
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetDynPropDef(System.String)">
            <summary>
            Gets the dynamic property definition.
            </summary>
            <param name="propName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetDynMethodDef(System.String)">
            <summary>
            Gets the dynamic method definition.
            </summary>
            <param name="methodName">Name of the method.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetProperty(System.String,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            Gets the property.
            </summary>
            <param name="propName">Name of the property.</param>
            <param name="s">The property type description.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.SetProperty(System.String,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            Sets the property.
            </summary>
            <param name="propName">Name of the property.</param>
            <param name="s">The property type description.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.RunMethod(System.String,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            Runs the method.
            </summary>
            <param name="mtdName">Name of the method.</param>
            <param name="s">The method signature.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.RunClassMethod(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            Runs the class method.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clsName">Name of the class.</param>
            <param name="mtdName">Name of the method.</param>
            <param name="s">The method signature.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.ClassServerName">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.AddToRuntimeMetaInfoClassListWrapper(System.Collections.Generic.List{System.String})">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.ValidateRuntimeMetaInfoWrapper(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetPropertyS(System.String,System.Int32,System.Int32,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            API for generated code.
            </summary>
            <param name="propName">Name of the property.</param>
            <param name="ii">The ii.</param>
            <param name="jj">The jj.</param>
            <param name="s">The property type description.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.GetPropertyS(System.String,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            API for generated code.
            </summary>
            <param name="propName">Name of the property</param>
            <param name="s">The property type description</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.SetPropertyS(System.String,InterSystems.Data.CacheTypes.CacheMethodSignature,System.Int32,System.Int32,System.Int32)">
            <summary>
            API for generated code.
            </summary>
            <param name="propName">Name of the property.</param>
            <param name="s">The property type description.</param>
            <param name="ii">The ii.</param>
            <param name="jj">The jj.</param>
            <param name="modFlag">The mod flag.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.SetPropertyS(System.String,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            API for generated code.
            </summary>
            <param name="propName">Name of the property</param>
            <param name="s">The property type description</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.RunMethodS(System.String,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            API for generated code.
            </summary>
            <param name="mtdName">Name of the method.</param>
            <param name="s">The method signature.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.RunClassMethodS(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String,InterSystems.Data.CacheTypes.CacheMethodSignature)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clsName">Name of the class.</param>
            <param name="mtdName">Name of the method.</param>
            <param name="s">The method signature.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.MarkPropertyOwnersDescendantModified">
            <summary>
            Recursively mark IsDescendantModified in property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.NotifyPropertyChanged(System.String)">
            <summary>
            Ntofiy that a property has changed.
            </summary>
            <param name="prop">The property name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:InterSystems.Data.CacheTypes.CacheObject"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:InterSystems.Data.CacheTypes.CacheObject"></see>.
            </returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.UserObjState">
            <summary>
            Object for keeping User data associated with the object.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.Oref">
            <summary>
            Gets the oref of the server object.
            </summary>
            <value>The oref.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.ClassName">
            <summary>
            Gets the class name of the server object.
            </summary>
            <value>Class name of the server object.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.Connection">
            <summary>
            Gets the connection to the server object.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected to a server object.
            </summary>
            <value>
            	<c>true</c> if this instance is connected to a server object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.IsClassGenerated">
            <summary>
            Returns whether the instance belongs to a class that was generated
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.RefCount">
            <summary>
            Gets the proxy reference count.
            </summary>
            <value>The proxy reference count.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.IsModified">
            <summary>
            Gets or sets a value indicating whether this instance was modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.IsDescendantModified">
            <summary>
            Gets or sets a value indicating whether this instance has any descendant object properties that were modified.
            </summary>
        </member>
        <member name="E:InterSystems.Data.CacheTypes.CacheObject.PropertyChanged">
            <summary>
            Event for data binding.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObject.PropertyChangedActive">
            <summary>
            Gets a value indicating whether there is a listener for notifications about property changes.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheObject.UserObjFactory">
            <summary>
            Delegate type for creating UserObjState objects.
            </summary>
            <returns></returns>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CachePersistent">
            <remarks>
            Proxy class for <c>%Persistent</c>.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CachePersistent.ServerClassName">
            <summary>
            Server class name.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.Oid">
            <summary>
            Returns server object oid.
            </summary>
            <returns>The server object oid.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.Id">
            <summary>
            Returns server object id.
            </summary>
            <returns>The server object id.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.ExistsIdInternal(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clsName">Name of the class.</param>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.ExistsOid(InterSystems.Data.CacheClient.CacheConnection,System.Byte[])">
            <summary>
            Checks existance of a server object with the specified oid.
            </summary>
            <param name="conn">The connection.</param>
            <param name="oid">The oid.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.Save(System.Int32)">
            <summary>
            Saves the server object. See the server documentation for details.
            </summary>
            <param name="related"></param>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.Save">
            <summary>
            Saves the server object. See the server documentation for details.
            </summary>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.Reload">
            <summary>
            Reloads the server object.
            </summary>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.KillExtentInternal(InterSystems.Data.CacheClient.CacheConnection,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clsName">Name of the class.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.DeleteIdInternal(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clsName">Name of the class.</param>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CachePersistent.DeleteOid(InterSystems.Data.CacheClient.CacheConnection,System.Byte[])">
            <summary>
            Deletes the server object with the specified oid.
            </summary>
            <param name="conn">The connection.</param>
            <param name="oid">The oid.</param>
            <returns></returns>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheSerialObject">
            <remarks>
            Proxy class for <c>%SerialObject</c>.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheSerialObject.ServerClassName">
            <summary>
            Server class name.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSerialObject.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSerialObject.DeleteIdInternal(InterSystems.Data.CacheClient.CacheConnection,System.String,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clsName">Name of the class.</param>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSerialObject.DeleteOid(InterSystems.Data.CacheClient.CacheConnection,System.Byte[])">
            <summary>
            Deletes the server object with the specified oid.
            </summary>
            <param name="conn">The connection.</param>
            <param name="oid">The oid.</param>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheIStruct">
            <remarks>
            Proxy type for <c>%IStruct</c>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheCollection">
            <summary>
            API that is common for all collection proxy classes.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCollection.Sync">
            <summary>
            Synchronizes the client collection with the server object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCollection.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCollection.InvalidateCache">
            <summary>
            Invalidates the client representation of the collection. The next access to the proxy object forces it to syncronize with the server.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheCollection.InitializedCache">
            <summary>
            Returns whether the collection cache has been already initialized 
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListImpl">
            <remarks>
            API that is common for all list proxy classes.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfDT`1">
            <remarks>
            Generic proxy type for list of datatypes.
            </remarks>
            <typeparam name="T">Datatype.</typeparam>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Sync">
            <summary>
            Synchronizes the client collection with the server object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.InvalidateCache">
            <summary>
            Invalidates the client representation of the collection. The next access to the proxy object forces it to syncronize with the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.ClassServerName">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.GetRuntimeMetaInfoWrapper">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Init(InterSystems.Data.CacheClient.CacheConnection,System.Int64,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="oref">The oref.</param>
            <param name="clsName">Class name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Dispose">
            <summary>
            Calls <see cref="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Close"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Close(System.Boolean)">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
            <param name="useCache">if set to <c>true</c>, caches closing of the server (if necessary) until the next server message .</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Close">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.DropConnection">
            <summary>
            Disassociates the object from its Connection object. Called when the Connection object loses its connection to the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.AddRef">
            <summary>
            Adds proxy reference count.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.AddPropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Internal API
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.GetPropertyOwners">
            <summary>
            Returns the list of property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.MarkPropertyOwnersDescendantModified">
            <summary>
            Recursively mark IsDescendantModified in property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.IsClassGeneratedImpl">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"></see>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDT`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.InitializedCache">
            <summary>
            Returns whether the collection cache has been already initialized 
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.Oref">
            <summary>
            Gets the oref of the server object.
            </summary>
            <value>The oref.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.ClassName">
            <summary>
            Gets the class name of the server object.
            </summary>
            <value>Class name of the server object.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.Connection">
            <summary>
            Gets the connection to the server object.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected to a server object.
            </summary>
            <value>
            	<c>true</c> if this instance is connected to a server object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.RefCount">
            <summary>
            Gets the proxy reference count.
            </summary>
            <value>The proxy reference count.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.IsModified">
            <summary>
            Gets or sets a value indicating whether this instance was modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.IsDescendantModified">
            <summary>
            Gets or sets a value indicating whether this instance has any descendant object properties that were modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.IsClassGenerated">
            <summary>
            Returns whether the instance belongs to a class that was generated
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.Item(System.Int32)">
            <summary>
            Gets or sets the <c>T</c> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfDT`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="E:InterSystems.Data.CacheTypes.CacheListOfDT`1.PropertyChanged">
            <summary>
            Event for data binding.
            </summary>
        </member>
        <member name="E:InterSystems.Data.CacheTypes.CacheListOfDT`1.CollectionChanged">
            <summary>
            Event for data binding.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfIntegers">
            <remarks>
            Proxy type for list of type <c>%Integer</c>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfDoubles">
            <remarks>
            Proxy type for list of type <c>%Double</c>.
            </remarks>>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfBinaries">
            <remarks>
            Proxy type for list of type <c>%Binary</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfStrings">
            <remarks>
            Proxy type for list of type <c>%String</c>.
            </remarks>      
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfDataTypes">
            <summary>
            Proxy type for <c>%ListOfDataTypes</c>
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDataTypes.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Creates a new object of type <c>CacheListOfDataTypes</c>.
            </summary>
            <param name="conn">Connection</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfDataTypes.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfStatuses">
            <remarks>
            Proxy type for list of type <c>%Status</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfTimes">
            <remarks>
            Proxy type for list of type <c>%Time</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfDates">
            <remarks>
            Proxy type for list of type <c>%Date</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfMVDates">
            <remarks>
            Proxy type for list of type <c>%MV.Date</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfDateTimes">
            <remarks>
            Proxy type for list of type <c>%TimeStamp</c>.
            </remarks>      
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfBooleans">
            <remarks>
            Proxy type for list of type <c>%Boolean</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfCurrency">
            <remarks>
            Proxy type for list of type <c>%Currency</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfDecimals">
            <remarks>
            Proxy type for list of type <c>%Decimal</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfSysLists">
            <remarks>
            Proxy type for list of type <c>$list</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfObjects">
            <remarks>
            Proxy type for list of objects.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.OpenAllObjects(System.Boolean)">
            <summary>
            Deprecated. Swizzles all objects in the collection and opens their proxy objects.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.OpenAllObjects(System.Collections.Generic.Dictionary{System.String,System.Collections.IEnumerable})">
            <summary>
            Swizzles all objects in the collection and opens their proxy objects. Also opens the property paths for the matching proxy objects. 
            </summary>
            <param name="propertyPaths">A dictionary containing {server class Name, list of property paths} items.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.OpenAllObjects">
            <summary>
            Swizzles all objects in the collection and opens their proxy objects.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.CloseAllObjects">
            <summary>
            Calls Close() for every proxy object in the collection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to add to the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The position into which the new element was inserted.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"></see> contains a specific value.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            true if the <see cref="T:System.Object"></see> is found in the <see cref="T:System.Collections.IList"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to locate in the <see cref="T:System.Collections.IList"></see>.</param>
            <returns>
            The index of value if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.IList"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The <see cref="T:System.Object"></see> to insert into the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
            <exception cref="T:System.NullReferenceException">value is null reference in the <see cref="T:System.Collections.IList"></see>.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"></see>.
            </summary>
            <param name="value">The <see cref="T:System.Object"></see> to remove from the <see cref="T:System.Collections.IList"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.IList"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList"></see> is read-only.-or- The <see cref="T:System.Collections.IList"></see> has a fixed size. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects.Close(System.Boolean)">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
            <param name="useCache">if set to <c>true</c>, caches closing of the server (if necessary) until the next server message .</param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfObjects.ElementType">
            <summary>
            Gets the type of server objects in the collection.
            </summary>
            <value>The type of the element.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfObjects.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfObjects.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfObjects.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfObjects.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfObjects.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfObjects.Item(System.Int32)">
            <summary>
            Gets or sets the proxy object with the specified index.
            </summary>
            <value></value>
        </member>
        <member name="E:InterSystems.Data.CacheTypes.CacheListOfObjects.CollectionChanged">
            <summary>
            Event for data binding.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheListOfObjects`1">
            <remarks>
            Proxy type for %Collection.ListOfObj for properties of type T.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects`1.Add(`0)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects`1.Contains(`0)">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the collection to an array, starting at a particular array index. 
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the list at the specified index.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the collection. 
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheListOfObjects`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheListOfObjects`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheLibListOfObjects">
            <summary>
            Proxy type for <c>%ListOfObjects</c>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheLibListOfObjects.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Creates an object of type <c>CacheLibListOfObjects</c>.
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheLibListOfObjects.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayImpl">
            <remarks>
            API that is common for all array proxy classes.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfDT`1">
            <remarks>
            Generic proxy type for array of datatypes.
            </remarks>
            <typeparam name="T">Datatype.</typeparam>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Sync">
            <summary>
            Synchronizes the client collection with the server object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.InvalidateCache">
            <summary>
            Invalidates the client representation of the collection. The next access to the proxy object forces it to syncronize with the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.ClassServerName">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.GetRuntimeMetaInfoWrapper">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Init(InterSystems.Data.CacheClient.CacheConnection,System.Int64,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="oref">The oref.</param>
            <param name="clsName">Class name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Dispose">
            <summary>
            Calls <see cref="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Close"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Close(System.Boolean)">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
            <param name="useCache">if set to <c>true</c>, caches closing of the server (if necessary) until the next server message .</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Close">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.DropConnection">
            <summary>
            Disassociates the object from its Connection object. Called when the Connection object loses its connection to the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.AddRef">
            <summary>
            Adds proxy reference count.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.AddPropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.GetPropertyOwners">
            <summary>
            Returns the list of property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.MarkPropertyOwnersDescendantModified">
            <summary>
            Recursively mark IsDescendantModified in property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.IsClassGeneratedImpl">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Add(System.String,`0)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2"></see> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if key was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.TryGetValue(System.String,`0@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Add(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item is found in the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"></see> is greater than the available space from arrayIndex to the end of the destination array.-or-Type T cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Remove(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</param>
            <returns>
            true if item was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"></see>; otherwise, false. This method also returns false if item is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.</exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.InitializedCache">
            <summary>
            Returns whether the collection cache has been already initialized 
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Oref">
            <summary>
            Gets the oref of the server object.
            </summary>
            <value>The oref.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.ClassName">
            <summary>
            Gets the class name of the server object.
            </summary>
            <value>Class name of the server object.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Connection">
            <summary>
            Gets the connection to the server object.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected to a server object.
            </summary>
            <value>
            	<c>true</c> if this instance is connected to a server object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.RefCount">
            <summary>
            Gets the proxy reference count.
            </summary>
            <value>The proxy reference count.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.IsModified">
            <summary>
            Gets or sets a value indicating whether this instance was modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.IsDescendantModified">
            <summary>
            Gets or sets a value indicating whether this instance has any descendant object properties that were modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.IsClassGenerated">
            <summary>
            Returns whether the instance belongs to a class that was generated
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1"></see> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Item(System.String)">
            <summary>
            Gets or sets the <c>T</c> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"></see> is read-only; otherwise, false.</returns>
        </member>
        <member name="E:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.PropertyChanged">
            <summary>
            Event for data binding.
            </summary>
        </member>
        <member name="E:InterSystems.Data.CacheTypes.CacheArrayOfDT`1.CollectionChanged">
            <summary>
            Event for data binding.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfIntegers">
            <remarks>
            Proxy type for array of type <c>%Integer</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfDoubles">
            <remarks>
            Proxy type for array of type <c>%Double</c>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfBinaries">
            <remarks>
            Proxy type for array of type <c>%Binary</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfStrings">
            <remarks>
            Proxy type for array of type <c>%String</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfDataTypes">
            <summary>
            Proxy type for <c>%ArrayOfDataTypes</c>
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDataTypes.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Creates a new object of type <c>CacheArrayOfDataTypes</c>
            </summary>
            <param name="conn">Connection</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfDataTypes.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfStatuses">
            <remarks>
            Proxy type for array of type <c>%Status</c>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfTimes">
            <remarks>
            Proxy type for array of type <c>%Time</c>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfDates">
            <remarks>
            Proxy type for array of type <c>%Date</c>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfMVDates">
            <remarks>
            Proxy type for array of type <c>%MV.Date</c>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfDateTimes">
            <remarks>
            Proxy type for array of type <c>%TimeStamp</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfBooleans">
            <remarks>
            Proxy type for array of type <c>%Boolearn</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfCurrency">
            <remarks>
            Proxy type for array of type <c>%Currency</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfDecimals">
            <remarks>
            Proxy type for array of type <c>%Decimal</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfSysLists">
            <remarks>
            Proxy type for array of type <c>%List</c>.
            </remarks>   
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfObjects">
            <remarks>
            Proxy type for array of objects.
            </remarks>   
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.OpenAllObjects">
            <summary>
            Swizzles all objects in the collection and opens their proxy objects.
            </summary>      
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.OpenAllObjects(System.Collections.Generic.Dictionary{System.String,System.Collections.IEnumerable})">
            <summary>
            Swizzles all objects in the collection and opens their proxy objects. Also opens the property paths for the matching proxy objects. 
            </summary>
            <param name="propertyPaths">A dictionary containing {server class Name, list of property paths} items.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.CloseAllObjects">
            <summary>
            Calls Close() for every proxy object in the collection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator"></see> object for the <see cref="T:System.Collections.IDictionary"></see> object.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IDictionaryEnumerator"></see> object for the <see cref="T:System.Collections.IDictionary"></see> object.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IDictionary"></see> object contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary"></see> object.</param>
            <returns>
            true if the <see cref="T:System.Collections.IDictionary"></see> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is null. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if [contains] [the specified key]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary"></see> object.
            </summary>
            <param name="key">The <see cref="T:System.Object"></see> to use as the key of the element to add.</param>
            <param name="value">The <see cref="T:System.Object"></see> to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary"></see> object. </exception>
            <exception cref="T:System.ArgumentNullException">key is null. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"></see> is read-only.-or- The <see cref="T:System.Collections.IDictionary"></see> has a fixed size. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary"></see> object.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"></see> object is read-only.-or- The <see cref="T:System.Collections.IDictionary"></see> has a fixed size. </exception>
            <exception cref="T:System.ArgumentNullException">key is null. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary"></see> object.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Close(System.Boolean)">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
            <param name="useCache">if set to <c>true</c>, caches closing of the server (if necessary) until the next server message .</param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"></see> object containing the keys of the <see cref="T:System.Collections.IDictionary"></see> object.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.ICollection"></see> object containing the keys of the <see cref="T:System.Collections.IDictionary"></see> object.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"></see> object containing the values in the <see cref="T:System.Collections.IDictionary"></see> object.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.ICollection"></see> object containing the values in the <see cref="T:System.Collections.IDictionary"></see> object.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"></see> object is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IDictionary"></see> object is read-only; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"></see> object has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IDictionary"></see> object has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Item(System.Object)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="E:InterSystems.Data.CacheTypes.CacheArrayOfObjects.CollectionChanged">
            <summary>
            Event for data binding.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1">
            <summary>
            Proxy type for %Collection.ArrayOfObj for properties of type T.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Determines whether the collection contains a specific value.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.Add(System.String,`0)">
            <summary>
            Adds an element with the provided key and value to the collection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.Add(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="pair"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the collection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.Remove(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <summary>
            Removes the first occurrence of a specific object from the collection. 
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.TryGetValue(System.String,`0@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
            <summary>
            Copies the elements of the collection to an array, starting at a particular array index.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.Item(System.String)">
            <summary>
            Gets or sets the object with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.Keys">
            <summary>
            Gets a collection containing the keys of the collection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArrayOfObjects`1.Values">
            <summary>
            Gets a collection containing the values in the collection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheLibArrayOfObjects">
            <summary>
            Proxy type for <c>%ArrayOfObjects</c>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheLibArrayOfObjects.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Creates an object of type <c>CacheLibArrayOfObjects</c>.
            </summary>
            <param name="conn">Connection</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheLibArrayOfObjects.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheRelationshipObject">
            <remarks>
            Proxy type for <c>%RelationshipObject</c>.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheRelationshipObject.OpenAllChildObjects">
            <summary>
            Opens all child objects. Calls Close() for each child objects inside Close();
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.#ctor">
            <summary>
            Internal API.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Close(System.Boolean)">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
            <param name="useCache">if set to <c>true</c>, caches closing of the server (if necessary) until the next server message .</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.UnSwizzleAt(System.String)">
            <summary>
            Unswizzles the object with the specified key. See the server documentation for details.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.RemoveAt(System.String)">
            <summary>
            Removes the object with the specified key. See the server documentation for details.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.AddObjectId(System.String)">
            <summary>
            Inserts the object with the specified id. See the server documentation for details.
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Add(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Adds the specified object to the collection.
            </summary>
            <param name="obj">The object.</param>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Remove(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Removes the specified object from the collection.
            </summary>
            <param name="obj">The object.</param>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Clear">
            <summary>
            Calls Clear() on the server object. See the server documentation for details.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Find(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Finds the object.
            </summary>
            <param name="obj">The object.</param>
            <returns>The key for the found object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Find(System.String)">
            <summary>
            Finds the object with the specified id.
            </summary>
            <param name="id">The id.</param>
            <returns>The key for the found object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Find(System.Byte[])">
            <summary>
            Finds the object with the specified oid.
            </summary>
            <param name="oid">The oid.</param>
            <returns>The key for the found object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheRelationshipObject.OwnsChildObjects">
            <summary>
            Returns a value indicating whether the relationship proxy object automatically opens and maintains an internal collection of the proxy objects of its members.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheRelationshipObject.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheRelationshipObject.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheRelationshipObject.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="E:InterSystems.Data.CacheTypes.CacheRelationshipObject.CollectionChanged">
            <summary>
            Event for data binding.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator">
            <remarks>
            Enumerator for <see cref="T:InterSystems.Data.CacheTypes.CacheRelationshipObject"/>.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator.UnSwizzle">
            <summary>
            Whether to unswizzle the current object on moving to the next object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator.#ctor(InterSystems.Data.CacheTypes.CacheRelationshipObject)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator"/> class.
            </summary>
            <param name="coln">The relationship object.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator.Dispose">
            <summary>
            Calls <see cref="M:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator.Reset"/>
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheRelationshipObject.Enumerator.Key">
            <summary>
            Gets the key of the current object.
            </summary>
            <value>The key of the current object.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheStream">
            <summary>
            API that is common for all stream proxy classes.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing, or the stream is already closed. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"></see> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.ClassServerName">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.GetRuntimeMetaInfoWrapper">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Init(InterSystems.Data.CacheClient.CacheConnection,System.Int64,System.String)">
            <summary>
            API for generated code.
            </summary>
            <param name="conn">The connection.</param>
            <param name="oref">The oref.</param>
            <param name="clsName">Class name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:System.IO.Stream"></see>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Close(System.Boolean)">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
            <param name="useCache">if set to <c>true</c>, caches closing of the server (if necessary) until the next server message .</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Close">
            <summary>
            	<para>Decrements proxy reference count.</para>
            	<para> If the reference count becomes 0, closes the server object.</para>
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.DropConnection">
            <summary>
            Disassociates the object from its Connection object. Called when the Connection object loses its connection to the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.AddRef">
            <summary>
            Adds proxy reference count.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.AddPropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject,System.String)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
            <param name="propName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.RemovePropertyOwner(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Internal API.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.GetPropertyOwners">
            <summary>
            Returns the list of property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.MarkPropertyOwnersDescendantModified">
            <summary>
            Recursively mark IsDescendantModified in property owners.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.IsClassGeneratedImpl">
            <summary>
            API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Oid">
            <summary>
            Gets the oid of the server object.
            </summary>
            <returns>The oid of the server object.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Save">
            <summary>
            Saves this instance.
            </summary>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Clear">
            <summary>
            Clears the contents of the stream.
            </summary>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.Rewind">
            <summary>
            Rewinds the stream.
            </summary>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStream.MoveToEnd">
            <summary>
            Moves to the end of the stream.
            </summary>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <value></value>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <value></value>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <value></value>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <value></value>
            <returns>A long value representing the length of the stream in bytes.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <value></value>
            <returns>The current position within the stream.</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.Oref">
            <summary>
            Gets the oref of the server object.
            </summary>
            <value>The oref.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.ClassName">
            <summary>
            Gets the class name of the server object.
            </summary>
            <value>Class name of the server object.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.Connection">
            <summary>
            Gets the connection to the server object.
            </summary>
            <value>The connection.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected to a server object.
            </summary>
            <value>
            	<c>true</c> if this instance is connected to a server object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.RefCount">
            <summary>
            Gets the proxy reference count.
            </summary>
            <value>The proxy reference count.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.IsModified">
            <summary>
            Gets or sets a value indicating whether this instance was modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.IsDescendantModified">
            <summary>
            Gets or sets a value indicating whether this instance has any descendant object properties that were modified.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.IsClassGenerated">
            <summary>
            Returns whether the instance belongs to a class that was generated
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStream.ServerEncoding">
            <summary>
            Gets the server encoding.
            </summary>
            <value>The server encoding.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheCharacterStream">
            <remarks>
            Proxy type for server global character stream.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheCharacterStream.LibServerClassName">
            <summary>
            Name of the old server global character stream class.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheCharacterStream.StreamServerClassName">
            <summary>
            Name of the new server global character stream class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCharacterStream.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCharacterStream.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheCharacterStream"/> class.
            </summary>
            <param name="conn">The connection.</param>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheBinaryStream">
            <remarks>
            Proxy type for server global binary stream.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheBinaryStream.LibServerClassName">
            <summary>
            Name of the old server global binary stream class.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheBinaryStream.StreamServerClassName">
            <summary>
            Name of the new server global binary stream class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBinaryStream.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBinaryStream.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBinaryStream"/> class.
            </summary>
            <param name="conn">The connection.</param>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheFileCharacterStream">
            <remarks>
            Proxy type for the server file character stream.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheFileCharacterStream.ServerClassName">
            <summary>
            Name of the server class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileCharacterStream.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileCharacterStream.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheFileCharacterStream"/> class.
            </summary>
            <param name="conn">The connection.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileCharacterStream.Filename">
            <summary>
            Returns the filename of the stream.
            </summary>
            <returns>Filename of the stream.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileCharacterStream.SetFilename(System.String)">
            <summary>
            Sets the filename of the stream.
            </summary>
            <param name="filename">The filename.</param>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileCharacterStream.LastModified">
            <summary>
            Returns the timestamp of the last modification.
            </summary>
            <returns>The timestamp of the last modification.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileCharacterStream.LinkToFile(System.String)">
            <summary>
            Links the stream to file.
            </summary>
            <param name="filename">The filename.</param>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheFileBinaryStream">
            <remarks>
            Proxy type for the server file binary stream.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheFileBinaryStream.ServerClassName">
            <summary>
            Name of the server class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileBinaryStream.#ctor">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileBinaryStream.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheFileBinaryStream"/> class.
            </summary>
            <param name="conn">The connection.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileBinaryStream.Filename">
            <summary>
            Returns the filename of the stream.
            </summary>
            <returns>Filename of the stream.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileBinaryStream.SetFilename(System.String)">
            <summary>
            Sets the filename of the stream.
            </summary>
            <param name="filename">The filename</param>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileBinaryStream.LastModified">
            <summary>
            Returns the timestamp of the last modification.
            </summary>
            <returns>The timestamp of the last modification.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheFileBinaryStream.LinkToFile(System.String)">
            <summary>
            Links the stream to file.
            </summary>
            <param name="filename">The filename.</param>
            <returns>Status indicating success or failure.</returns>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheUserMethodExceptionInfo">
            <summary>
            Projection of %Exception.AbstractException
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheUserMethodException">
            <summary>
            Projection of %Exception.AbstractException
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheObjException">
            <remarks>
            Generic object binding exception.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObjException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObjException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheUserMethodException.ClassName">
            <summary>
            The name of the server exception class
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheUserMethodException.Name">
            <summary>
            %Exception.AbstractException Name property
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheUserMethodException.Code">
            <summary>
            %Exception.AbstractException Code property
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheUserMethodException.Location">
            <summary>
            %Exception.AbstractException Location property
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheUserMethodException.Info">
            <summary>
             %Exception.AbstractException Data property
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheUserMethodException.InfoString">
            <summary>
            %Exception.AbstractException Data property as string
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheStatusException">
            <remarks>
            Exception type that is thrown by <see cref="T:InterSystems.Data.CacheTypes.CacheStatus"/>.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheUserErrorException">
            <remarks>
            Object binding exception caused by user error.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheUserErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheUserErrorException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheStatusException.Code">
            <summary>
            Status error code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatusException.#ctor(InterSystems.Data.CacheTypes.CacheStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStatusException"/> class.
            </summary>
            <param name="status">The status.</param>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheInternalException">
            <remarks>
            Object binding internal exception.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheInternalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheInternalException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheMetaInfoException">
            <summary>
            Object binding meta information exception
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMetaInfoException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheMetaInfoException"/> class
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheDisconnectedObjectException">
            <remarks>
            Object binding disconnected object exception.
            </remarks>>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDisconnectedObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDisconnectedObjectException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDisconnectedObjectException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDisconnectedObjectException"/> class.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheInvalidCollectionElementtException">
            <remarks>
            Object binding invalid collection element exception.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheInvalidCollectionElementtException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheInvalidCollectionElementtException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheInvalidCollectionElementtException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheInvalidCollectionElementtException"/> class.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheInvalidCollectionKeyException">
            <remarks>
            Object binding invalid collection key exception.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheInvalidCollectionKeyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheInvalidCollectionKeyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheInvalidCollectionKeyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheInvalidCollectionKeyException"/> class.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheInvalidProxyException">
            <summary>
            Object binding invalid proxy exception.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheInvalidProxyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheInvalidProxyException"/> class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.SrvError">
            <remarks>
            Server error exception.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.SrvError.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.SrvError.Code">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.SrvError.Message">
            <summary>
            Gets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.SrvError.Data">
            <summary>
            Gets the error data.
            </summary>
            <value>The error data.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheMethodSignature">
            <remarks>
            Server method signature representation.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheMethodSignature.ReturnValue">
            <summary>
            Server method return value.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheMethodSignature.Arguments">
            <summary>
            Server method arguments.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheMethodSignature"/> class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.SetReturnType(InterSystems.Data.CacheClient.CacheConnection,InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Sets the method return type.
            </summary>
            <param name="conn">The connection.</param>
            <param name="typeId">The type id.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.SetReturnType(InterSystems.Data.CacheClient.CacheConnection,System.Type)">
            <summary>
            Sets the method return type.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clientType">The client type.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.SetReturnType(InterSystems.Data.CacheClient.CacheConnection,InterSystems.Data.CacheTypes.ClientObjTypeId,InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Sets the method return type.
            </summary>
            <param name="conn">The connection.</param>
            <param name="objTypeId">The object type id.</param>
            <param name="colnTypeId">The collection type id.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.SetColnReturnType(InterSystems.Data.CacheClient.CacheConnection,InterSystems.Data.CacheTypes.ClientObjTypeId,InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Sets the method return type.
            </summary>
            <param name="conn">The connection.</param>
            <param name="objTypeId">The object type id.</param>
            <param name="colnTypeId">The collection type id.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(System.Object,InterSystems.Data.CacheClient.CacheConnection,System.Type,InterSystems.Data.CacheTypes.ClientTypeId,System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="conn">The connection.</param>
            <param name="argType">The argument type.</param>
            <param name="typeId">The client type id.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(InterSystems.Data.CacheTypes.ICacheObject,InterSystems.Data.CacheClient.CacheConnection,System.Type,System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="conn">The connection.</param>    
            <param name="argType">The argument type.</param>  
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(System.Nullable{System.Double},System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(System.Byte[],System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(System.String,System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(InterSystems.Data.CacheTypes.CacheStatus,InterSystems.Data.CacheClient.CacheConnection,System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="conn">The connection.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(InterSystems.Data.CacheTypes.CacheTime,System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(InterSystems.Data.CacheTypes.CacheDate,InterSystems.Data.CacheTypes.ClientTypeId,System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="typeId">The argument type id</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(System.Nullable{System.Decimal},System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Add(InterSystems.Data.CacheTypes.CacheSysList,InterSystems.Data.CacheClient.CacheConnection,System.Boolean)">
            <summary>
            Adds the specified argument to method signature.
            </summary>
            <param name="arg">The argument.</param>
            <param name="conn">The connection.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,InterSystems.Data.CacheTypes.ICacheObject@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Int64}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.UInt64}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.UInt32}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Int16}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.UInt16}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Byte}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.SByte}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Char}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Double}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Single}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Byte[]@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.String@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,InterSystems.Data.CacheTypes.CacheTime@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,InterSystems.Data.CacheTypes.CacheDate@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.DateTime}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Boolean}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,System.Nullable{System.Decimal}@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheMethodSignature.Get(System.Int32,InterSystems.Data.CacheTypes.CacheSysList@)">
            <summary>
            Gets the argument at the specified index.
            </summary>
            <param name="idx">The index.</param>
            <param name="arg">The argument.</param>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheArgument">
            <remarks>
            Server method argument representation.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheArgument.ByRef">
            <summary>
            Whether the argument is passed by reference.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheArgument.#ctor(InterSystems.Data.CacheTypes.ClientTypeId,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheArgument"/> class.
            </summary>
            <param name="typeId">The type id.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArgument.TypeId">
            <summary>
            Gets the argument type id.
            </summary>
            <value>The argument type id.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheObjArgument">
            <remarks>
            Server method object argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObjArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection,System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObjArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clientType">The client type.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObjArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObjArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clientType">The client type.</param>      
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObjArgument.#ctor(InterSystems.Data.CacheTypes.ICacheObject,InterSystems.Data.CacheClient.CacheConnection,System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObjArgument"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="conn">The connection.</param>
            <param name="clientType">The client type.</param>      
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObjArgument.#ctor(InterSystems.Data.CacheTypes.ICacheObject,InterSystems.Data.CacheClient.CacheConnection,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObjArgument"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="conn">The connection.</param>
            <param name="clientType">The client type.</param>      
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObjArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObjArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObjArgument.ClientType">
            <summary>
            Gets the client type.
            </summary>
            <value>The client type.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheIntArgument">
            <remarks>
            Server method <c>%Integer</c> argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheIntArgument.#ctor(System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheIntArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheIntArgument.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheIntArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheIntArgument.#ctor(System.Nullable{System.Int64},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheIntArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheIntArgument.#ctor(System.Nullable{System.Int64})">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheIntArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheIntArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheIntArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheIntArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheIntArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheIntArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheIntArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheDoubleArgument">
            <remarks>
            Server method <c>%Double</c> argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDoubleArgument.#ctor(System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDoubleArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDoubleArgument.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDoubleArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDoubleArgument.#ctor(System.Nullable{System.Double},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDoubleArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDoubleArgument.#ctor(System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDoubleArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDoubleArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDoubleArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDoubleArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDoubleArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDoubleArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDoubleArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheBinaryArgument">
            <remarks>
            Server method <c>%Binary</c> argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBinaryArgument.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBinaryArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBinaryArgument.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBinaryArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBinaryArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBinaryArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBinaryArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBinaryArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheBinaryArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheBinaryArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheStringArgument">
            <remarks>
            Server method <c>%String</c> argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStringArgument.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStringArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStringArgument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStringArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStringArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStringArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStringArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStringArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStringArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStringArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheStatusArgument">
            <remarks>
            Server method <c>%Status</c> argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatusArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection,InterSystems.Data.CacheTypes.CacheStatus,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStatusArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatusArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection,InterSystems.Data.CacheTypes.CacheStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStatusArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatusArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStatusArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatusArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStatusArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatusArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatusArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheTimeArgument">
            <remarks>
            Server method <c>%Time</c> argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeArgument.#ctor(InterSystems.Data.CacheTypes.CacheTime,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeArgument.#ctor(InterSystems.Data.CacheTypes.CacheTime)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeArgument.#ctor(System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeArgument.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeArgument.#ctor(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeArgument.#ctor(System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheTimeArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheTimeArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheDateArgument">
            <remarks>
            Server method <c>%Date</c> argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateArgument.#ctor(InterSystems.Data.CacheTypes.CacheDate,InterSystems.Data.CacheTypes.ClientTypeId,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="typeId">The value type id</param> 
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateArgument.#ctor(InterSystems.Data.CacheTypes.CacheDate,InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="typeId">The value type id</param> 
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateArgument.#ctor(System.DateTime,InterSystems.Data.CacheTypes.ClientTypeId,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
            <param name="typeId">The value type id</param> 
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateArgument.#ctor(System.DateTime,InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="typeId">The value type id</param> 
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateArgument.#ctor(System.Nullable{System.DateTime},InterSystems.Data.CacheTypes.ClientTypeId,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="typeId">The value type id</param> 
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateArgument.#ctor(System.Nullable{System.DateTime},InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="typeId">The value type id</param> 
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateArgument.#ctor(InterSystems.Data.CacheTypes.ClientTypeId,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
            <param name="typeId">The argument type id</param> 
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateArgument.#ctor(InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDateArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDateArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheTimestampArgument">
            <remarks>
            Server method <c>%TimeStamp</c> argument representation.
            </remarks>   
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimestampArgument.#ctor(System.DateTime,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimestampArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimestampArgument.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimestampArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimestampArgument.#ctor(System.Nullable{System.DateTime},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimestampArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimestampArgument.#ctor(System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimestampArgument"/> class.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimestampArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimestampArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimestampArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimestampArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheTimestampArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheTimestampArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheBooleanArgument">
            <remarks>
            Server method <c>%Boolean</c> argument representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBooleanArgument.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBooleanArgument"/> class.
            </summary>
            <param name="val">If set to <c>true</c>, [val].</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBooleanArgument.#ctor(System.Nullable{System.Boolean},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBooleanArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBooleanArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBooleanArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBooleanArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBooleanArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheBooleanArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheBooleanArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheCurrencyArgument">
            <remarks>
            Server method <c>%Currency</c> argument representation.
            </remarks>   
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCurrencyArgument.#ctor(System.Decimal,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheCurrencyArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCurrencyArgument.#ctor(System.Nullable{System.Decimal},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheCurrencyArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCurrencyArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheCurrencyArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCurrencyArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheCurrencyArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheCurrencyArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheCurrencyArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheDecimalArgument">
            <remarks>
            Server method <c>%Decimal</c> argument representation.
            </remarks>   
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDecimalArgument.#ctor(System.Decimal,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDecimalArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDecimalArgument.#ctor(System.Nullable{System.Decimal},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDecimalArgument"/> class.
            </summary>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDecimalArgument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDecimalArgument"/> class.
            </summary>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDecimalArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDecimalArgument"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDecimalArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDecimalArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheSysListArgument">
            <remarks>
            Server method <c>%List</c> argument representation.
            </remarks>   
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection,InterSystems.Data.CacheTypes.CacheSysList,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="val">The value.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection,InterSystems.Data.CacheTypes.CacheSysList)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="byRef">If set to <c>true</c>, the argument is passed by reference.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListArgument.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListArgument"/> class.
            </summary>
            <param name="conn">The connection.</param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysListArgument.Value">
            <summary>
            Gets the argument value.
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysListArgument._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The argument value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheReturnValue">
            <remarks>
            Server method return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheReturnValue.#ctor(InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheReturnValue"/> class.
            </summary>
            <param name="typeId">The type id.</param>
        </member>
        <member name="F:InterSystems.Data.CacheTypes.CacheReturnValue.invalidComparisonException">
            <summary>
            An exception for comparison of objects of incompatible types
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheReturnValue.TypeId">
            <summary>
            Gets the type id of the return value.
            </summary>
            <value>The type id of the return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheObjReturnValue">
            <remarks>
            Server method object return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObjReturnValue.#ctor(InterSystems.Data.CacheClient.CacheConnection,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObjReturnValue"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="clientType">The client type.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheObjReturnValue.#ctor(InterSystems.Data.CacheClient.CacheConnection,InterSystems.Data.CacheTypes.ClientObjTypeId,InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheObjReturnValue"/> class.
            </summary>
            <param name="conn">The connection.</param>
            <param name="objTypeId">The object type id.</param>
            <param name="colnTypeId">The collection type id.</param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObjReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObjReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheObjReturnValue.ClientType">
            <summary>
            Gets the client type.
            </summary>
            <value>The client type.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheIntReturnValue">
            <remarks>
            Server method <c>%Integer</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheIntReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheIntReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheIntReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheIntReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheDoubleReturnValue">
            <remarks>
            Server method <c>%Double</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDoubleReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDoubleReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDoubleReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDoubleReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheBinaryReturnValue">
            <remarks>
            Server method <c>%Binary</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBinaryReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBinaryReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheBinaryReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheBinaryReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheStringReturnValue">
            <remarks>
            Server method <c>%String</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStringReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStringReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStringReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStringReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheStatusReturnValue">
            <remarks>
            Server method <c>%Status</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheStatusReturnValue.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheStatusReturnValue"/> class.
            </summary>
            <param name="conn">The connection.</param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatusReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheStatusReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheTimeReturnValue">
            <remarks>
            Server method <c>%Time</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimeReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimeReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheTimeReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheTimeReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheDateReturnValue">
            <remarks>
            Server method <c>%Date</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDateReturnValue.#ctor(InterSystems.Data.CacheTypes.ClientTypeId)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDateReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDateReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDateReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheTimestampReturnValue">
            <remarks>
            Server method <c>%TimeStamp</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheTimestampReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheTimestampReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheTimestampReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheTimestampReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheBooleanReturnValue">
            <remarks>
            Server method <c>%Boolean</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheBooleanReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheBooleanReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheBooleanReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheBooleanReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheCurrencyReturnValue">
            <remarks>
            Server method <c>%Currency</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheCurrencyReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheCurrencyReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheCurrencyReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheCurrencyReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheDecimalReturnValue">
            <remarks>
            Server method <c>%Decimal</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheDecimalReturnValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheDecimalReturnValue"/> class.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDecimalReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheDecimalReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheSysListReturnValue">
            <remarks>
            Server method <c>%List</c> return value representation.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReturnValue.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListReturnValue"/> class.
            </summary>
            <param name="conn">The connection.</param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysListReturnValue.Value">
            <summary>
            Gets the return value.
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysListReturnValue._Value">
            <summary>
            API for the dynamic binding
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.ClientTypeId">
            <remarks>
            API for generated code.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.ClientObjTypeId">
            <remarks>
            API for generated code.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.QueryRuntimeMode">
            <summary>
            Constants for Query runtime mode.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheSysListReader">
            <remarks>
            Enumerator for <see cref="T:InterSystems.Data.CacheTypes.CacheSysList"/>.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.#ctor(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListReader"/> class.
            </summary>
            <param name="data">The buffer.</param>
            <param name="startIndex">The start index.</param>
            <param name="byteSize">Size in bytes.</param>
            <param name="encoding">The server encoding.</param>
            <param name="srvIsUnicode">If set to <c>true</c>, the server is unicode.</param>
            <param name="srvCLEDouble">If set to <c>true</c>, the server has native support for the %Decimal type</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.#ctor(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListReader"/> class.
            </summary>
            <param name="data">The buffer.</param>
            <param name="startIndex">The start index.</param>
            <param name="byteSize">Size in bytes.</param>
            <param name="encoding">The server encoding.</param>
            <param name="srvIsUnicode">If set to <c>true</c>, the server is unicode.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.#ctor(System.Byte[],System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListReader"/> class.
            </summary>
            <param name="data">The buffer.</param>
            <param name="encoding">The server encoding.</param>
            <param name="srvIsUnicode">if set to <c>true</c>, the server is unicode.</param>
            <param name="srvCLEDouble">If set to <c>true</c>, the server has native support for the %Decimal type</param>      
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.#ctor(System.Byte[],System.Text.Encoding,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListReader"/> class.
            </summary>
            <param name="data">The buffer.</param>
            <param name="encoding">The server encoding.</param>
            <param name="srvIsUnicode">if set to <c>true</c>, the server is unicode.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.GetCurrent(System.Nullable{System.Int64}@)">
            <summary>
            Gets the current element.
            </summary>
            <param name="val">The result.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.GetCurrent(System.Nullable{System.Double}@)">
            <summary>
            Gets the current element.
            </summary>
            <param name="val">The result.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.GetCurrent(System.Nullable{System.Decimal}@)">
            <summary>
            Gets the current element.
            </summary>
            <param name="val">The result.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.GetCurrent(System.String@)">
            <summary>
            Gets the current element.
            </summary>
            <param name="val">The result.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.GetCurrent(System.Byte[]@)">
            <summary>
            Gets the current element.
            </summary>
            <param name="val">The result.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.GetCurrent(InterSystems.Data.CacheTypes.CacheSysList@)">
            <summary>
            Gets the current element.
            </summary>
            <param name="val">The result.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.IsCurrentElemSysList">
            <summary>
            Checks if the current element is a $list
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.CopyElemBytesTo(System.Byte[],System.Int32)">
            <summary>
            Copies the current element to the specified buffer.
            </summary>
            <param name="val">The buffer.</param>
            <param name="index">The start index.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysListReader.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysListReader.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value></value>
            <returns>The current element in the collection.</returns>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element. </exception>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysListReader.AtEnd">
            <summary>
             Checks if the enumerator is past the last element
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysListReader.Index">
            <summary>
            Gets the current index.
            </summary>
            <value>The current index.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysListReader.ElemByteSize">
            <summary>
            Gets the byte size of the current element.
            </summary>
            <value>The byte size of the current element.</value>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheSysList">
            <remarks>
            Implementation of $list.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.#ctor(System.Text.Encoding,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysList"/> class.
            </summary>
            <param name="encoding">The server encoding.</param>
            <param name="isUnicode">if set to <c>true</c>, the server is assumed to be Unicode.</param>
            <param name="CLEDouble">if set to <c>true</c>, the server is assumed to save double elements as IEEE double</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.#ctor(System.Text.Encoding,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysList"/> class.
            </summary>
            <param name="encoding">The server encoding.</param>
            <param name="isUnicode">if set to <c>true</c>, the server is assumed to be Unicode.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.#ctor(System.Text.Encoding,System.Boolean,System.Boolean,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysList"/> class.
            </summary>
            <param name="encoding">The server encoding.</param>
            <param name="isUnicode">if set to <c>true</c>, the server is assumed to be Unicode.</param>
            <param name="CLEDouble">if set to <c>true</c>, the server is assumed to save double elements as IEEE double</param>
            <param name="data">The buffer.</param>
            <param name="startIndex">The start index.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.#ctor(System.Text.Encoding,System.Boolean,System.Boolean,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysList"/> class.
            </summary>
            <param name="encoding">The server encoding.</param>
            <param name="isUnicode">if set to <c>true</c>, the server is assumed to be Unicode.</param>
            <param name="CLEDouble">if set to <c>true</c>, the server is assumed to save double elements as IEEE double</param>      
            <param name="data">The buffer.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.#ctor(System.Text.Encoding,System.Boolean,System.Boolean,System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysList"/> class.
            </summary>
            <param name="encoding">The server encoding.</param>
            <param name="isUnicode">if set to <c>true</c>, the server is assumed to be Unicode.</param>
            <param name="CLEDouble">if set to <c>true</c>, the server is assumed to save double elements as IEEE double</param>      
            <param name="data">The buffer.</param>
            <param name="copyData">Value indicating whether to copy the buffer.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.#ctor(System.Text.Encoding,System.Boolean,System.Boolean,System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheTypes.CacheSysList"/> class.
            </summary>
            <param name="encoding">The server encoding.</param>
            <param name="isUnicode">if set to <c>true</c>, the server is assumed to be Unicode.</param>
            <param name="CLEDouble">if set to <c>true</c>, the server is assumed to save double elements as IEEE double</param>            
            <param name="data">The buffer.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.AddNull">
            <summary>
            Adds a null value.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.Add(InterSystems.Data.CacheTypes.CacheSysList)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.Add(System.Byte[])">
            <summary>
            Adds the specified value.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.Add(System.String)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.Add(System.Nullable{System.Int64})">
            <summary>
            Adds the specified value.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.Add(System.Nullable{System.Double})">
            <summary>
            Adds the specified value.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.Add(System.Nullable{System.Decimal})">
            <summary>
            Adds the specified value.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
            <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination array. </exception>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.At(System.Int32)">
            <summary>
            Gets the <see cref="T:InterSystems.Data.CacheTypes.CacheSysListReader"/> with the specified index.
            </summary>
            <param name="idx">The index.</param>
            <returns>The element.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.CopyBytesTo(System.Byte[],System.Int32)">
            <summary>
            Copies the $list binary representation to a buffer.
            </summary>
            <param name="val">The buffer.</param>
            <param name="index">The start index.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.CopyBytesTo(System.Byte[],System.Int32,InterSystems.Data.CacheTypes.CacheSysListReader,InterSystems.Data.CacheTypes.CacheSysListReader)">
            <summary>
            Copies a part of the $list to a buffer.
            </summary>
            <param name="val">The buffer.</param>
            <param name="index">The start index.</param>
            <param name="start">The start iterator.</param>
            <param name="end">The end iterator.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.Assign(System.Byte[],System.Boolean)">
            <summary>
            Sets the $list binary representation to a specified value.
            </summary>
            <param name="val">The value.</param>
            <param name="copyBuffer">if set to <c>true</c>, copy the buffer instead of replacing it with <paramref name="val"/>.</param>
        </member>
        <member name="M:InterSystems.Data.CacheTypes.CacheSysList.EqualsBinary(InterSystems.Data.CacheTypes.CacheSysList)">
            <summary>
            Gets a value indicating whether two CacheSysList objects contain the same binary data
            </summary>
            <param name="val"></param>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysList.listObjectBehavior">
            <summary>
            Gets or sets a value indicating whether to use CacheObject $list null and empty string behavior.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysList.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified index.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysList.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysList.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</returns>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysList.ByteSize">
            <summary>
            Gets the byte size of the $list.
            </summary>
            <value>The byte size of the $list.</value>
        </member>
        <member name="P:InterSystems.Data.CacheTypes.CacheSysList.IsNull">
            <summary>
            Gets a value indicating whether this instance is null.
            </summary>
            <value><c>true</c> if this instance is null; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheConnection">
            <remarks>
            Represents an open connection to a Cache Server database.
            </remarks>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.GeneratedAssembly">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.AppNamespace">
            <summary>
            Application namespace.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.DynamicMode">
            <summary>
            Gets a value indicating whether the connection uses dynamic proxy objects.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.LocalAccessAtDisconnect">
            <summary>
            Gets or sets a value indicating whether the connection allows local modifications
            of proxy objects or closes all proxy objects at disconnect.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.GetClientNamesFromServer">
            <summary>
            A flag indicating whether the client should rely on the class client names created by the generator or get the client names from the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.AddClientTypeDescr(System.String,System.Type)">
            <summary>
            API for generated code.
            </summary>
            <param name="srvClassName">The server class name.</param>
            <param name="clientType">The client type.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetMtdSignature">
            <summary>
            API for generated code.
            </summary>
            <returns>The method signature.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetGenRuntimeClassDef(System.String)">
            <summary>
             API for generated code
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.#ctor">
            <summary>
            Initializes a new instance of the CacheConnection class.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CacheConnection class with the specified connection string.
            </summary>
            <param name="connStr">The connection used to open the Cache Server database.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CacheConnection class with the specified parameters.
            </summary>
            <param name="host">Host or Server name.</param>
            <param name="port">IP port number.</param>
            <param name="nsp">Namespace to connect with.</param>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CacheConnection class with the specified parameters.
            </summary>
            <param name="host">Host or Server name.</param>
            <param name="port">IP port number.</param>
            <param name="nsp">Namespace to connect with.</param>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
            <param name="logfile">Log file name.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.IsLoggingMessages">
            <summary>
            Internal API.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.LogDataSent(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Internal API.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.LogDataReceived(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Internal API.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.ThrowServerError(System.Int32)">
            <summary>
            Internal API.
            </summary>
            <param name="errCode"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.MarkClosed">
            <summary>
            Internal API.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.IgnoreServerResponse">
            <summary>
            Internal API.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.PostProcessing">
            <summary>
             API for generated code
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetProxyObj(System.Int64,System.String,InterSystems.Data.CacheTypes.ClientObjTypeId,InterSystems.Data.CacheTypes.ClientTypeId,System.Type)">
            <summary>
            Returns a proxy object for a server object that the client has already opened.
            </summary>
            <remarks>
            The proxy object may have been callected by GC, but the cache reference count must be > 0. 
            In this case, the method creates a new proxy object for the server object.
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.AddProxyObj(System.Int64,System.String,InterSystems.Data.CacheTypes.ClientObjTypeId,InterSystems.Data.CacheTypes.ClientTypeId,System.Type)">
            <summary>
            Returns a proxy object for an instantiated server object. 
            If the object was instantiated before, then the method increments the cache reference count 
            and calls GetProxyObj() to get the existing proxy object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.AddProxyObj(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Adds an already instantiated ICacheObject to the connection. 
            It is called directly only on from the projection of %New(), so there is no need to 
            check if it has already been added.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.CreateProxyObj(System.Int64,System.String,InterSystems.Data.CacheTypes.ClientObjTypeId,InterSystems.Data.CacheTypes.ClientTypeId,System.Type)">
            <summary>
            Creates a new proxy object and initializes it with the oref and this connection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.DecRefCnt(InterSystems.Data.CacheTypes.ICacheObject)">
            <summary>
            Decrements and returns the cache reference count for the proxy object. 
            If the count drops to 0, the object is removed from the cache
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.CloseAllObjects">
            <summary>
            Closes all proxy objects for the connection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetAllOpenObjects">
            <summary>
            Returns a collection of all currently open proxy objects
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.RecalcIsDescendantModified">
            <summary>
            Recalculates IsDescendantModified flag for all objects.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.CloseAllUnreachableObjects">
            <summary>
            Closes all unreachable proxy objects for the connection.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetAndSendRedirectedInput">
            <summary>
            Internal API.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.MsgGetSrvError(System.Int32)">
            <summary>
            Internal API.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetRuntimeClassesDefs(System.Collections.Generic.List{System.String})">
            <summary>
            API for generated code.
            </summary>
            <param name="clsNames"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.Open">
            <summary>
            Opens a connection to a Cache Server database with the property settings specified by the <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.ConnectionString"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.Open(System.Boolean)">
            <summary>
            For use with Object binding. 
            Opens a connection to a Cache Server database with the property settings specified by the <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.ConnectionString"/>.
            </summary>
            <param name="useCache"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.Reset">
            <summary>
            Resets the connections.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.isTwoFactorEnabledOpen">
            <summary>
            Opens a connection to a Cache Server database with the property settings specified by the <see cref="P:InterSystems.Data.CacheClient.CacheADOConnection.ConnectionString"/> and tests to see if TwoFactor Authentication is enabled.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.sendTwoFactorToken(System.String)">
            <summary>
            Returns user input token for TwoFactor Authentication
            </summary>
            <param name="tokenName"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.Close">
            <summary>
            Closes the connection to the Cache Server database. 
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.String,System.Int32,System.Int32,System.Type,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.String,System.Int32,System.Type,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.String,System.Type,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.String,System.Type)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.String,System.Int32,System.Int32,System.Type,System.Collections.IEnumerable,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.String,System.Type,System.Collections.IEnumerable)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.String,System.Int32,System.Type,System.Collections.IEnumerable,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.Byte[],System.Int32,System.Int32,System.Type,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.Byte[],System.Int32,System.Type,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>         
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.Byte[],System.Type,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.Byte[],System.Type)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.Byte[],System.Int32,System.Int32,System.Type,System.Collections.IEnumerable,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.Byte[],System.Type,System.Collections.IEnumerable)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.OpenProxyObj(System.String,System.Byte[],System.Int32,System.Type,System.Collections.IEnumerable,InterSystems.Data.CacheTypes.CacheStatus@)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetNamespaces">
            <summary>
            Returns the list of available namespaces.
            </summary>
            <returns>The list of available namespaces.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.ForceSync">
            <summary>
            Forces the client to syncronize the cache with the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.SetQueryRuntimeMode(InterSystems.Data.CacheTypes.QueryRuntimeMode)">
            <summary>
            Sets the runtime mode for running queries for a connection. Should only be changed once 
            using an open connection.  All connections by default use ODBC mode.
            </summary>
            <param name="mode">Runtime mode.</param>
            <returns>A value indicating whether the runtime mode has been changed.</returns>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.AddPropertyOwnerCallback">
            <summary>
            The callback for testing whether an object should be added as a property owner.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetQuery(System.String,System.String)">
            <summary>
            Gets <see cref="T:InterSystems.Data.CacheClient.CacheCommand"/> for the specified class query.
            </summary>
            <param name="clsName">The class name.</param>
            <param name="queryName">The query name.</param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetQueryInternal(System.String,System.String,System.Int32@)">
            <summary>
            Internal API.
            </summary>
            <param name="clsName"></param>
            <param name="queryName"></param>
            <param name="parCount"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GenProxies(System.Collections.IEnumerator,InterSystems.Data.CacheClient.ObjBind.GeneratorOptions,System.Collections.IList)">
            <summary>
            Generates a collection of CodeDOM graphs for a set of classes.
            </summary>
            <param name="classes_itor">An iterator for the collection of names of server classes to be generated.</param>
            <param name="options">Options for the generator.</param>
            <param name="errors">A collection that is used to report errors of type CacheStatus.</param>
            <returns>A collection of CodeDOM graphs for the set of input classes and their dependencies.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GenSourceFile(System.String,System.CodeDom.Compiler.CodeDomProvider,System.Collections.IEnumerator,InterSystems.Data.CacheClient.ObjBind.GeneratorOptions,System.Collections.IList)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GenMultipleSourceFiles(System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Collections.IEnumerator,InterSystems.Data.CacheClient.ObjBind.GeneratorOptions,System.Collections.IList)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.ConnectDlg">
            <summary>
            Invokes the connection dialog.
            </summary>
            <returns>The connection string.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.CheckDeveloperRole">
            <summary>
            Checks whether the user has %Developer role.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetDotNetConnectionString(System.String)">
            <summary>
            Constructs a .NET connection string from a native connection string.
            </summary>
            <param name="nativeConnStr">The native connection string.</param>
            <returns>The .NET connection string.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.GetNativeConnectionString(System.String)">
            <summary>
            Constructs a native connection string from a .NET connection string.
            </summary>
            <param name="dotnetConnStr">The .NET connection string.</param>
            <returns>The native connection string.</returns>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.AllowNestedCalls">
            <summary>
            Turns nested calls to running object methods on and off.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.DefaultOutputRedirection">
            <summary>
            The default output redirection delegate object.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.DefaultInputRedirection">
            <summary>
            The default input redirection delegate object.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.OutputRedirectionDelegate">
            <summary>
            The output redirection delegate object.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheConnection.InputRedirectionDelegate">
            <summary>
            The input redirection delegate object.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.ResetMsgCount">
            <summary>
            Resets the message count.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.TStart">
            <summary>
            Calls tstart on the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.TCommit">
            <summary>
            Calls tcommit on the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.TRollback">
            <summary>
            Calls trollback on the server.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.TLevel">
            <summary>
            Calls tlevel on the server.
            </summary>
            <returns>The transaction level.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.LoadStream(System.IO.TextReader,System.String)">
            <summary>
            Internal API.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.CompileClasses(System.String,System.String)">
            <summary>
            API for generated code.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheConnection.RedirectOutput(System.Boolean)">
            <summary>
            Turns the output redirection on and off. 
            </summary>
            <param name="val"></param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnection.BindSrvVersion">
            <summary>
            Gets the version of the language binding server.
            </summary>
            <value>The language binding server.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnection.RunMtdLevel">
            <summary>
            Gets the level of nested calls to the server.
            </summary>
            <value>The level of nested calls to the server.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnection.UseCache">
            <summary>
            Gets a value indicating whether to use cache.
            </summary>
            <value><c>true</c> if using cache; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnection.ServerZV">
            <summary>
            Return the $zv of the connected Cache Server database
            </summary>
            <value>The Cache server $ZV.</value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.CacheConnection.MsgCount">
            <summary>
            Gets the message count. The count is incremented every time a message is sent to the server.
            </summary>
            <value>The message count.</value>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheConnection.AddPropertyOwnerDelegate">
            <summary>
            A delegate for testing whether an object should be added as a property owner.
            </summary>
            <param name="owned"></param>
            <param name="owner"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheConnection.OutputRedirection">
            <summary>
            The delegate for output redirection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheConnection.InputRedirection">
            <summary>
            The delegate for input redirection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.TupleMember">
            <summary>
            Represents a single member within a tuple.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMember.Caption">
            <summary>
            Gets the caption of the member.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMember.DimensionName">
            <summary>
            Gets the dimension name of the member.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMember.HierarchyName">
            <summary>
            Gets the hierarchy name of the member.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMember.LevelName">
            <summary>
            Gets the level name of the member.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMember.MemberKey">
            <summary>
            Gets the key of the member.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMember.LevelDepth">
            <summary>
            Gets the level depth of the member.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMember.UniqueName">
            <summary>
            Gets the unique name of the member.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.TupleMemberCollection">
            <summary>
            Gets a read-only collection of <see cref="T:InterSystems.Data.CacheClient.DeepSee.TupleMember"/> objects contained by a Tuple.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMemberCollection.Item(System.Int32)">
            <summary>
            Gets the specified <see cref="T:InterSystems.Data.CacheClient.DeepSee.TupleMember"/> from the collection by its index. 
            In C#, this property is the indexer for the MemberCollection class.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.TupleMember"/> to find.</param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleMemberCollection.Count">
            <summary>
            Gets the number of <see cref="T:InterSystems.Data.CacheClient.DeepSee.TupleMember"/> objects in the collection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.Tuple">
            <summary>
            Represents an ordered collection of members from different hierarchies.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.Tuple.Members">
            <summary>
            Gets an instance of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.TupleMemberCollection"/> class from the Tuple.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.Tuple.TupleOrdinal">
            <summary>
            Gets the ordinal position of the Tuple.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.TupleCollection">
            <summary>
            Represents an ordered collection of zero or more tuples.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleCollection.Item(System.Int32)">
            <summary>
            Gets the specified <see cref="T:InterSystems.Data.CacheClient.DeepSee.Tuple"/> from the collection by its index. 
            In C#, this property is the indexer for the TupleCollection class.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.Tuple"/> to find.</param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.TupleCollection.Count">
            <summary>
            Gets the number of <see cref="T:InterSystems.Data.CacheClient.DeepSee.Tuple"/> objects in the collection.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.Axis">
            <summary>
            Represents an axis within a cellset.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.Axis.Name">
            <summary>
            Gets the name of the Axis.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.Axis.Tuples">
            <summary>
            Gets a <see cref="T:InterSystems.Data.CacheClient.DeepSee.TupleCollection"/> that contains the tuples the Axis.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.AxisCollection">
            <summary>
            Gets a read-only collection of <see cref="T:InterSystems.Data.CacheClient.DeepSee.Axis"/> objects contained by a <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.AxisCollection.CalcOrdinal(System.Int32[])">
            <summary>
            Returns the ordinal value of a <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> from the indexes on the axes from the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
            <param name="indexes"></param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.AxisCollection.CalcIndexes(System.Int32)">
            <summary>
            Returns the the indexes on the axes from the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/> from the ordinal value of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/>.
            </summary>
            <param name="ordinal">The ordinal value</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.AxisCollection.CalcIndexes(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Returns the row and column for a 2 dimensional cube
            </summary>
            <param name="ordinal"></param>
            <param name="row"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.AxisCollection.CalcColumn(System.Int32)">
            <summary>
            Returns the column for a 2 dimensional cube
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.AxisCollection.CalcRow(System.Int32)">
            <summary>
            Returns the row for a 2 dimensional cube
            </summary>
            <param name="ordinal"></param>
            <returns></returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.AxisCollection.Item(System.Int32)">
            <summary>
            Gets the specified <see cref="T:InterSystems.Data.CacheClient.DeepSee.Axis"/> from the <see cref="T:InterSystems.Data.CacheClient.DeepSee.AxisCollection"/> collection by its index. 
            In Microsoft Visual C#, this property is the indexer for the <see cref="T:InterSystems.Data.CacheClient.DeepSee.AxisCollection"/> class. 
            /// </summary>
            <param name="index"></param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.AxisCollection.Count">
            <summary>
            Gets the number of <see cref="T:InterSystems.Data.CacheClient.DeepSee.Axis"/> objects in the collection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.AxisCollection.CubeSize">
            <summary>
            Gets the number of elements in the cellset.
            </summary>
            <returns></returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.Cell">
            <summary>
            Represents a cell in a given cellset.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.Cell.Value">
            <summary>
            Gets the value of the Cell.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.CellCollection">
            <summary>
            Contains a read-only collection of <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> objects contained by a <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellCollection.Item(System.Int32)">
            <summary>
            Gets the specified <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> from the collection by its index. 
            In Microsoft Visual C#, this property is the indexer for the CellCollection class.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellCollection.Count">
            <summary>
            Gets the number of <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> objects in the collection.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellCollection.Item(System.Int32,System.Int32)">
            <summary>
            Gets the specified <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> from the collection by its coordinates.
            </summary>
            <param name="index0">The zero-based index on the first axis of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> to find.</param>
            <param name="index1">The zero-based index on the second axis of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> to find.</param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellCollection.Item(System.Int32[])">
            <summary>
            Gets the specified <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> from the collection by its coordinates.
            </summary>
            <param name="indexes">The zero-based indexes on the axes of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> to find.</param>
            <returns></returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.CellSet">
            <summary>
            Represents a cellset that is returned as a result of a query.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSet.Axes">
            <summary>
            Gets an instance of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.AxisCollection"/> class that contains the axes of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSet.FilterAxis">
            <summary>
            Gets an instance of an <see cref="T:InterSystems.Data.CacheClient.DeepSee.Axis"/> class that represents the filter axis of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSet.Cells">
            <summary>
            Gets an instance of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellCollection"/> class that contains the cells of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSet.Item(System.Int32)">
            <summary>
            Gets an instance of a <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> by its index. In Microsoft Visual C#, this property is 
            the indexer for the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/> class.
            </summary>
            <param name="index">The zero-based index of the  <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> to find.</param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSet.Item(System.Int32,System.Int32)">
            <summary>
            Gets the specified <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> from the collection.
            </summary>
            <param name="index0">The zero-based index on the first axis of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> to find.</param>
            <param name="index1">The zero-based index on the second axis of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> to find.</param>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSet.Item(System.Int32[])">
            <summary>
            Gets the specified <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> from the collection by an array of absolute axis indexes.
            </summary>
            <param name="indexes">The zero-based indexes on the axes of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.Cell"/> to find.</param>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.CellSetReader">
            <summary>
             A cellset reader that gets the cells one by one in column major order
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.CellSetReader.Dispose">
            <summary>
            Closes the server query
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.CellSetReader.Close">
            <summary>
            Closes the server query
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.CellSetReader.MoveNext">
            <summary>
            Moves to the next cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.CellSetReader.Reset">
            <summary>
            Not Supported.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSetReader.Axes">
            <summary>
            Gets an instance of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.AxisCollection"/> class that contains the axes of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSetReader.FilterAxis">
            <summary>
            Gets an instance of an <see cref="T:InterSystems.Data.CacheClient.DeepSee.Axis"/> class that represents the filter axis of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSetReader.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected to a server object.
            </summary>
            <value>
            	<c>true</c> if this instance is connected to a server object; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSetReader.CurrentOrdinal">
            <summary>
            Gets the ordinal of the current cell
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSetReader.CurrentIndexes">
            <summary>
            Gets the axes indexes of the current cell
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSetReader.CurrentColumn">
            <summary>
            Gets the column of the current cell
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSetReader.CurrentRow">
            <summary>
            Gets the row of the current cell
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.DeepSee.CellSetReader.Current">
            <summary>
            Gets the current cell
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand">
            <summary>
            Represents a command to be run against DeepSee II.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand.CommandText">
            <summary>
             Gets or sets the command to run.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand.#ctor(InterSystems.Data.CacheClient.CacheConnection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/> class with the text of the command 
            and a <see cref="T:InterSystems.Data.CacheClient.CacheConnection"/>.
            </summary>
            <param name="conn">The CacheConnection on which to run the  <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/>.</param>
            <param name="mdx">The text of the command to be run by the  <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/>.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand.#ctor(InterSystems.Data.CacheClient.CacheConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/> class with a <see cref="T:InterSystems.Data.CacheClient.CacheConnection"/>.
            </summary>
            <param name="conn">The <see cref="T:InterSystems.Data.CacheClient.CacheConnection"/> on which to run the <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/>.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand.ExecuteCellSet(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Runs the <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/> and returns a <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
            <param name="args">A set of named parameters</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand.ExecuteCellSetReader(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Runs the <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/> and returns a <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSetReader"/>.
            </summary>
            <param name="args">A set of named parameters</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand.ExecuteCellSet">
            <summary>
            Runs the <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/> and returns a <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/>.
            </summary>
            <returns>a <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/></returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand.ExecuteCellSetReader">
            <summary>
            Runs the <see cref="T:InterSystems.Data.CacheClient.DeepSee.DeepSeeCommand"/> and returns a <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSetReader"/>.
            </summary>
            <returns>a <see cref="T:InterSystems.Data.CacheClient.DeepSee.CellSet"/></returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges">
            <summary>internal API</summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.Classes">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.GetProxyInfo(System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.GetOrAddProxyInfo(System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.IgnoreProperty(System.String,System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.IgnoreMethod(System.String,System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.IgnoreQuery(System.String,System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.FindProperty(InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo,System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.FindMethod(InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo,System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.FindQuery(InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo,System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.Init">
            <summary>internal API</summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo">
            <summary>internal API</summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.Name">
            <summary>internal API</summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.AllMethods">
            <summary>internal API</summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.AllProperties">
            <summary>internal API</summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.AllQueries">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.FindProperty(System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.FindMethod(System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.FindQuery(System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.AddProperty(System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.AddMethod(System.String)">
            <summary>internal API</summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges.ProxyClassInfo.AddQuery(System.String)">
            <summary>internal API</summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions">
            <summary>
            Code generation options
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.UseCF">
            <summary>
            Gets a value indicating whether the code generation is for the .NET compact framework.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.UseCSharp">
            <summary>
            Gets a value indicating whether the code generation is for C#
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.AppNamespace">
            <summary>
            Application namespace.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.GenDefaultArgMethods">
            <summary>
            Gets a value indicating whether to generate overloads for methods with default arguments.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.IgnoreChanges">
            <summary>
            Gets the path of the file that describes the changes in the generated API to be ignored
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.TestConnection">
            <summary>
            Gets the connection against which the generated code is tested
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.TestConnectionResults">
            <summary>
            Get the stream writer that outputs the resuls of testing the generated API against TestConneciton
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.SkipSystemAPIs">
            <summary>
             Gets a value indicating whether to skip 
             1) system classes and the properties and methods that use system classes
             2) generated properties, methods, and queries
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GeneratorOptions.GeneratedCodeAttribute">
            <summary>
             Gets a value indicating whether to mark all generated members with
             GeneratedCodeAttribute 
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.ObjBind.GenerationType">
            <summary>
            Code generation kind
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GenerationType.GenCSharp">
            <summary>
            C# code generation
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.GenerationType.GenVB">
            <summary>
            VB code generation
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator">
            <summary>
            .NET code generator
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.Options">
            <summary>
            Generator Options
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.Connection">
            <summary>
             Connection to the server from which to generate proxy classes
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.Classes">
            <summary>
            Collection of server class names
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.OutputPath">
            <summary>
            Path to the file where to put the generated code
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.OutputDir">
            <summary>
            The directory where to put the generated files
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.OutputKind">
            <summary>
            The kind of code to generate (C# or VB)
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.ImportClassNames(System.String,System.String@)">
            <summary>
            internal API
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.SaveClassNames(System.Collections.Generic.IEnumerable{System.String},System.String,System.String@)">
            <summary>
            internal API
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.ImportIgnoredChanges(System.String,System.String@)">
            <summary>
            internal API
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.SaveIgnoredChanges(InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges,System.String,System.String@)">
            <summary>
            internal API
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.RunGenerator(System.Collections.Generic.List{InterSystems.Data.CacheTypes.CacheStatus}@,System.String@)">
            <summary>
            Generates code using the options specified in properties
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.PrintHelp">
            <summary>
            Outputs the command line interfaces to the Console
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.DotNetGenerator.SetGeneratorOptions(InterSystems.Data.CacheClient.ObjBind.DotNetGenerator,System.String[],System.String@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Sets generation options from the command line arguments 
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.MetaInfo.GenRuntimeClassDef.Validate(InterSystems.Data.CacheClient.ObjBind.MetaInfo.GenClassDef,InterSystems.Data.CacheClient.ObjBind.GeneratedCodeIgnoredChanges,System.Boolean@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Internal API
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.ObjBind.IO.SrvException">
            <summary>
            Represents errors that occur when the server user code and the binding server don't handle an exception.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ObjBind.IO.SrvException.#ctor(System.Int32,System.String)">
            <summary>
            Constructs a SrvException object.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.PreParser.PreParser">
            <remarks>
             This is the interface to the SQL PreParser. A string of SQL and a list of parameters ( bound parameters or empty ) is input.
             The processed string is returned along with a count of parameters found and a classfication of the statement type
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.PreParser.ParseToken">
            <remarks>
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.PreParser.Scanner">
            <remarks>
            Scanner provides facilities for lexical scanning/parsing of text
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.PreParser.Token">
            <remarks>
            This class represents a 'token' parsed from the SQL statement. 
            It records the classification of the token as well as retaining the original string
            representation
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.CacheListUtil">
            <summary>
            A set of static classes to work with $list data in a buffer (thread safe)
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_UNDEF">
            <summary>
            $list data type - Undefined 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_PLACEHOLDER">
            <summary>
            $list data type - future use (not used)
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_ASCII">
            <summary>
            $list data type - ASCII data 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_UNICODE">
            <summary>
            $list data type - Unicode data 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_XUNICODE">
            <summary>
            $list data type - XUnicode data (not used) 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_POSINT">
            <summary>
            $list data type - Positive integer 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_NEGINT">
            <summary>
            $list data type - Negative integer
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_POSNUM">
            <summary>
            $list data type - Positive decimal number
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_NEGNUM">
            <summary>
            $list data type - Negative decimal number
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ITEM_DOUBLE">
            <summary>
            $list data type - IEEE double format
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.TWO_SIXTY">
            <summary>
            2**60 mask used for PosixTime positive conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.TWO_SIXTY_NEG">
            <summary>
            mask used for PosixTime negative conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.TWO_SIXTY_NEG_REV">
            <summary>
            mask used for PosixTime negative conversion
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.ONE_DAY">
            <summary>
             seconds in one day
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.HOROLOG_ZERO">
            <summary>
             Seconds on $h == 0 -   1840-12-31 at GMT
             </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.POSIX_ZERO">
            <summary>
             # of ticks for POSIXTIME 
             </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.IsNull(System.Byte[],System.Int32)">
            <summary>
            Checks buffer at offset to see if the $list data is null.  
            </summary>
            <param name="buffer">byte array buffer containing $list</param>
            <param name="offset">offset to start of $list element</param>
            <returns>true if $list data is null</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.IsNull(InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Checks buffer at offset to see if the $list data is null.  
            </summary>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>true if $list data is null</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.IsUndefined(System.Byte[],System.Int32)">
            <summary>
            Checks buffer at offset to see if the $list data is undefined.  
            </summary>
            <param name="buffer">byte array buffer containing $list</param>
            <param name="offset">offset to start of $list element</param>
            <returns>true if $list data is undefined</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetBigDecimal(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Decimal"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetBigDecimal(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem,System.Int32)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <param name="scale">decimal scale to use in returned value</param>
            <returns>Returns the specified list item as a <see cref="T:System.Decimal"/> with scale.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetBoolean(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetByteArray(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a byte array.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetDate(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetDouble(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetFloat(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Single"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetInt(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetLong(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int64"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetNull(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns true if $list item is null.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetOneByte(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Byte"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetShort(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.Int16"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetString(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem,System.Text.Encoding)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetString(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem,System.Int32,System.Text.Encoding)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <param name="len">Number of string characters to return, even if $list data contains more.</param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetTime(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetTimestamp(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns the specified list item as a <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetUndefined(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns the $list item in the buffer at the offset. Throws CacheException.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>Returns true if $list item is undefined.</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetBool(System.Byte[],System.Int32,System.Boolean)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="b">bool value</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetByteArray(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="byteArrayValue">byte[] value</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetByteArray(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="byteArrayValue">byte[] value</param>
            <param name="length">number of bytes to copy</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetDate(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetDouble(System.Byte[],System.Int32,System.Double,System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="doubleValue"><see cref="T:System.Double"/></param>
            <param name="protocolVersion">protocol version must be greater than 38 to send data using ieee format</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetInt(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="intValue"><see cref="T:System.Int32"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetNull(System.Byte[],System.Int32)">
            <summary>
            Sets a null data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetUndefined(System.Byte[],System.Int32)">
            <summary>
            Sets an undefined value into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetLong(System.Byte[],System.Int32,System.Int64)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="longValue"><see cref="T:System.Int64"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetString(System.Byte[],System.Int32,System.String,System.Text.Encoding)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="s"><see cref="T:System.String"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetString(System.Byte[],System.Int32,System.String,System.Text.Encoding,System.Int32)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="s"><see cref="T:System.String"/></param>
            <param name="locale"><see cref="T:System.Text.Encoding"/></param>
            <param name="length">number of characters in the string to set in the list element</param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetTime(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.SetTimestamp(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Sets particular data type into a $list starting at the offset in the buffer. 
            CacheException is thrown if buffer cannot hold inserted data.
            It is up to the caller to manage buffer space allocation and to prevent corrupting 
            existing elements in the buffer.  Basically for appending to the end of a previous list element.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="dt"><see cref="T:System.DateTime"/></param>
            <returns>offset to the end of the inserted element plus one</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetListLenTypeNextoffset(System.Byte[],System.Int32,InterSystems.Data.CacheClient.ListItem)">
            <summary>
            Returns information about the $list element. Helper method.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <param name="item"><see cref="T:InterSystems.Data.CacheClient.ListItem"/></param>
            <returns>The offset to the data in the list item is returned</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetListType(System.Byte[],System.Int32)">
            <summary>
            Determines the $list data type at the offset in the buffer. Helper method. 
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>The $list data type</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.GetListDataLength(System.Byte[],System.Int32)">
            <summary>
            Determines the length of the data in the $list element. Helper method.
            </summary>
            <param name="buffer">byte array buffer containing $list elements</param>
            <param name="offset">offset to start of $list element</param>
            <returns>Length of the data portion of the $list</returns>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.tenstab">
            <summary> Array of chars to lookup the char for the digit in the tenth's
            place for a two digit, base ten number.  The char can be got by
            using the number as the index.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.CacheListUtil.onestab">
            <summary> Array of chars to lookup the char for the digit in the unit's
            place for a two digit, base ten number.  The char can be got by
            using the number as the index.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.grabCharsFromString(System.String,System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Copies an array of chars obtained from a String into a specified array of chars
            </summary>
            <param name="sourceString">The String to get the chars from</param>
            <param name="sourceStart">Position of the String to start getting the chars</param>
            <param name="sourceEnd">Position of the String to end getting the chars</param>
            <param name="destinationArray">Array to return the chars</param>
            <param name="destinationStart">Position of the destination array of chars to start storing the chars</param>
            <returns>An array of chars</returns>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.HorologFromTime(System.DateTime)">
            <summary>
            Extract time from DateTime and return in HOROLOG format
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.HorologFromDate(System.DateTime)">
            <summary>
            Extract Date from DateTime and return in HOROLOG format
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.TimeFromHorolog(System.Int32)">
            <summary>
            Convert time in HOROLOG format to TimeSpan
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.DateFromHorolog(System.Int32)">
            <summary>
            Convert date in HOROLOG format to DateTime
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.PosixFromDate(System.DateTime)">
            <summary>
            Extract Date and Time from DateTime and return in POSIXTIME format
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.CacheListUtil.DateFromPosix(System.Int64)">
            <summary>
            Convert date and time in POSIXTIME format to Date
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.ListItem">
            <summary>
            Class that is used to return useful information when getting a $list item 
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ListItem.nextOffset">
            <summary>
            points to the start of the next list element
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ListItem.type">
            <summary>
            lists the $list datatype
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ListItem.dataLength">
            <summary>
            Length of the data inside the $list
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ListItem.dataOffset">
            <summary>
            offset into the buffer to the start of the data
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.Device">
            <remarks>
            Device is the low level connection to the database (ie. socket).  
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ISCBinaryWriter.dumpRawHeader">
            <summary>
            Writes General information about the client to the log file.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ISCBinaryWriter.dumpRawFooter">
            <summary>
            Writes xml closing information about the client to the log file. Even if FileStream is Closed.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ISCStreamWriter.dumpHeader">
            <summary>
            Writes General information about the client to the log file.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ISCStreamWriter.dumpFooter">
            <summary>
            Writes closing information about the client to the log file. Even if FileStream is Closed?
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ListUtil.tenstab">
            <summary> Array of chars to lookup the char for the digit in the tenth's
            place for a two digit, base ten number.  The char can be got by
            using the number as the index.
            </summary>
        </member>
        <member name="F:InterSystems.Data.CacheClient.ListUtil.onestab">
            <summary> Array of chars to lookup the char for the digit in the unit's
            place for a two digit, base ten number.  The char can be got by
            using the number as the index.
            </summary>
        </member>
        <member name="M:InterSystems.Data.CacheClient.ListUtil.GetCharsFromString(System.String,System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Copies an array of chars obtained from a String into a specified array of chars
            </summary>
            <param name="sourceString">The String to get the chars from</param>
            <param name="sourceStart">Position of the String to start getting the chars</param>
            <param name="sourceEnd">Position of the String to end getting the chars</param>
            <param name="destinationArray">Array to return the chars</param>
            <param name="destinationStart">Position of the destination array of chars to start storing the chars</param>
            <returns>An array of chars</returns>
        </member>
        <member name="T:InterSystems.Data.CacheClient.LogFileStream">
            <remarks>
            Performs logging to a file
            </remarks>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.#ctor(System.String,System.Int32)">
            <summary>
            Constructor to initialize a log file.
            </summary>
            <param name="path">Explicit path to logfile including logfile full name.</param>
            <param name="cHandle">integer value representing a unique connection ID.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Constructor to initialize a log file.
            </summary>
            <param name="path">Explicit path to logfile including logfile full name.</param>
            <param name="cHandle">integer value representing a unique connection ID.</param>
            <param name="appendLogFile">bool value if LogFile should be appended</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.#ctor(System.String,System.Int32,System.Boolean,InterSystems.Data.CacheClient.LogFileStream.LogFileType)">
            <summary>
            Constructor to initialize a log file.
            </summary>
            <param name="path">Explicit path to logfile including logfile full name.</param>
            <param name="cHandle">integer value representing a unique connection ID.</param>
            <param name="appendLogFile">bool value if LogFile should be appended</param>
            <param name="lft">LogFileStream.LogFileType value</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.dump(InterSystems.Data.CacheClient.MsgHeader,System.Int32)">
            <summary>
            Writes data from a header to the log file.
            </summary>
            <param name="header">header to write to log.</param>
            <param name="type">Type of log: client sent is 1, while recieved is 0.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.dump(InterSystems.Data.CacheClient.CacheROList,System.Int32)">
            <summary>
            Writes data from a stream to the log file.
            </summary>
            <param name="list">CacheROList to write to log.</param>
            <param name="type">Type of log: client sent is 1, while recieved is 0.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.dump(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Writes data from a stream to the log file.
            </summary>
            <param name="stream1">First part of byte array.</param>
            <param name="stream2">Second part of byte array.</param>
            <param name="offset">Starting offset in stream.</param>
            <param name="count">Number of bytes to write.</param>
            <param name="type">Type of log: client sent is 1, while recieved is 0.</param>
            <param name="header">Header.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.dump(System.Byte[],System.Int32,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Writes data from a stream to the log file.
            </summary>
            <param name="stream">Typically the Syslist.</param>
            <param name="offset">Starting offset in stream.</param>
            <param name="count">Number of bytes to write.</param>
            <param name="type">Type of log: client sent is 1, while recieved is 0.</param>
            <param name="header">Header.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.appendCurrentHex(System.Byte)">
            <summary>
            Write byte of data in hex to buffers for export to log file.
            </summary>
            <param name="val">value to convert to hex.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.formatLine(System.Int32,System.Boolean)">
            <summary>
            Format whole line for output buffer.
            </summary>
            <param name="s">Offset</param>
            <param name="lastRow">The boolean value is true if processing the last row.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.formatOffset(System.Int32)">
            <summary>
            Create the formatted hex offset text to show where you are in the message.
            </summary>
            <param name="s">The number of bytes into the message.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.logPlain(System.String)">
            <summary>
            Write text to the log.
            </summary>
            <param name="text">Text string to write.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.logApi(System.String)">
            <summary>
            Write text to the log.
            </summary>
            <param name="text">Text string to write.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.logApi(System.String,System.String,System.String)">
            <summary>
            Write Standard API information to the log.
            </summary>
            <param name="prefix">Text to place at the begining of Line.</param>
            <param name="api">API name.</param>
            <param name="text">Formatted text containing parameters passed to API.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogFileStream.close">
            <summary>
            Close the log file for all connections.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.LogFileStream.JobID">
            <summary>
            Stores the server side job id.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.LogFileStream.Name">
            <summary>
            Returns the path and name of the log file.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.LogFileStream.WriteLog">
            <summary>
            Enables writing to to the log file.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.LogHelper">
             <remarks>
             Class that handles logging of APIs in the log.
             </remarks>
             <example>
             Call class with the "using" construct for public API with no parameters.
            <code>
                     // Set LogHelper to null when logFile is null
                     LogHelper lh = null; 
                     if (connectionParams.logFile != null) { lh = new LogHelper(connectionParams.logFile); }
                     using (lh)
                         {  ...  }
             </code> 
             
             Call class with the "using" construct for public API with parameters.
            <code>
                     // Set LogHelper to null when logFile is null
                     LogHelper lh = null; 
                     if (connectionParams.logFile != null) { lh = new LogHelper(connectionParams.logFile, "param1="+param1+" param2=" + param2); }
                     using (lh)
                         {  ...  }
             </code> 
             
             Call class with the "using" construct for private/public API with parameters.
            <code>
                     // Set LogHelper to null when logFile is null
                     LogHelper lh = null; 
                     if (connectionParams.logFile != null) { lh = new LogHelper(connectionParams.logFile, "param1="+param1+" param2=" + param2, true); }
                     using (lh)
                         {  ...  }
             </code> 
             
             Setting the return text inside a "using" construct that will be run at Dispose().
            <code>
                     using (lh)
                         {  
                             ...
                             if (lh) {
                                 lh.ReturnText=retValue.ToString();
                             }
                             ...  
                         }
             </code> 
            </example>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogHelper.#ctor(InterSystems.Data.CacheClient.LogFileStream)">
            <summary>
            Log a public API taking no parameters.
            </summary>
            <param name="log">LogFileStream instance.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogHelper.#ctor(InterSystems.Data.CacheClient.LogFileStream,System.String)">
            <summary>
            Log a public API and write parameters text information.
            </summary>
            <param name="log">LogFileStream instance.</param>
            <param name="inText">Information about parameters to write to the log.</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogHelper.#ctor(InterSystems.Data.CacheClient.LogFileStream,System.String,System.Boolean)">
            <summary>
            Log a internal private/public API and write parameter information.
            </summary>
            <param name="log">LogFileStream instance.</param>
            <param name="inText">Information about parameters to write to the log.</param>
            <param name="internalfunc">True marks an internal function, False marks a public function</param>
        </member>
        <member name="M:InterSystems.Data.CacheClient.LogHelper.Dispose">
            <summary>
            Write exit of API to the log, and any ReturnText that was set.
            </summary>
        </member>
        <member name="P:InterSystems.Data.CacheClient.LogHelper.ReturnText">
            <summary>
            Stores the text to return when class is disposed.
            </summary>
        </member>
        <member name="T:InterSystems.Data.CacheClient.TCPDevice">
            <remarks>
            TCPDevice is the low level connection to the database (ie. socket).  
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheClient.SPCDevice">
            <remarks>
            SPCDevice is the low level connection to the database (ie. socket).  
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheResource">
            <remarks>
            Summary description for CacheResource.
            </remarks>
        </member>
        <member name="T:InterSystems.Data.CacheTypes.CacheTime">
            <remarks>
            Summary description for CacheTime.
            </remarks>
            This should be changed to use a TimeSpan to match the Time datatype
        </member>
    </members>
</doc>
