<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.TeamFoundation.Build.Client</name>
  </assembly>
  <members>
    <member name="T:Microsoft.TeamFoundation.Build.Client.AccessDeniedException">
      <summary>Exception that is thrown when access is denied.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.AccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.AccessDeniedException.#ctor(System.String)">
      <summary>Initializes a new AccessDeniedException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.AccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new AccessDeniedException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.AdministrationException">
      <summary>Exception for an adminstration error.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.AdministrationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.AdministrationException.#ctor(System.String)">
      <summary>Initializes a new AdministrationException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.AdministrationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new AdministrationException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.Agent2008Status">
      <summary>Describes the status of a 2008 build agent.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.Agent2008Status.Disabled">
      <summary>Agent is disabled.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.Agent2008Status.Enabled">
      <summary>Agent is enabled.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.Agent2008Status.Initializing">
      <summary>Agent is initializing.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.Agent2008Status.Unreachable">
      <summary>Agent is unreachable.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.AgentReservationStatus">
      <summary>Describes the state of an agent reservation.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.AgentReservationStatus.NotStarted">
      <summary>The agent has not started.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.AgentReservationStatus.AgentRequested">
      <summary>The agent was requested.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.AgentReservationStatus.AgentReserved">
      <summary>The agent was reserved.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.AgentReservationStatus.AgentReleased">
      <summary>The agent was released.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.AgentStatus">
      <summary>Describes the status of a build agent.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.AgentStatus.Available">
      <summary>Agent is available.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.AgentStatus.Offline">
      <summary>Agent is offline.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.AgentStatus.Unavailable">
      <summary>Agent is unavailable.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildActivityAttribute">
      <summary>Represents a build activity attribute.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildActivityAttribute.#ctor(Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption)">
      <summary>Initializes a new BuildActivityAttribute instance.</summary>
      <param name="option">Options for the host environment.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildActivityAttribute.Option">
      <summary>Gets the host environment options of this attribute.</summary>
      <returns>The host environment options of this attribute.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentAlreadyExistsException">
      <summary>Exception that is thrown when a build agent already exists.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new BuildAgentAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildAgentAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentDeletionException"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentDeletionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentDeletionException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentDeletionException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentDoesNotExistException">
      <summary>Exception that is thrown when a build agent does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new BuildAgentDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildAgentDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentFailureException">
      <summary>Exception for a build agent failure.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentFailureException.#ctor(System.String,System.String,Microsoft.TeamFoundation.Build.Client.IFailure)">
      <summary>Initializes a new BuildAgentFailureException instance.</summary>
      <param name="teamProject">The team project that contains the failed build agent.</param>
      <param name="name">The name of the failed build agent.</param>
      <param name="failure">The specific failure instance.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentNotFoundException">
      <summary>Exception that is thrown when a build agent was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotFoundException.#ctor(System.String)">
      <summary>Initializes a new BuildAgentNotFoundException.</summary>
      <param name="name">The name of the build agent that was not found.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentNotFoundForUriException">
      <summary>Exception that is thrown when a build agent was not found at the specified URI.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotFoundForUriException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotFoundForUriException.#ctor(System.Uri,System.String)">
      <summary>Initializes a new BuildAgentNotFoundForUriException instance.</summary>
      <param name="buildAgentUri">The URI that was queried that did not contain a build agent.</param>
      <param name="userName">The name of the user who queried the build definition.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentNotReadyToSaveException">
      <summary>Exception that is thrown when the build agent was not ready to save.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotReadyToSaveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotReadyToSaveException.#ctor(System.String)">
      <summary>Initializes a new BuildAgentNotReadyToSaveException instance.</summary>
      <param name="agentName">The build agent that was not ready to save.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentNotRecognizedException">
      <summary>Exception that is thrown when a build agent was not recognized.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotRecognizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotRecognizedException.#ctor(System.String)">
      <summary>Initializes a new BuildAgentNotRecognizedException instance.</summary>
      <param name="buildAgent">The build agent that was not recognized.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentNotUniqueException">
      <summary>Exception that is thrown when a build agent was not unique.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotUniqueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentNotUniqueException.#ctor(System.String)">
      <summary>Initializes a new BuildAgentNotUniqueException instance.</summary>
      <param name="buildAgent">The nonunique build agent.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentSpecNotUniqueException">
      <summary>Exception that is thrown when a build agent spec was not unique.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentSpecNotUniqueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentSpecNotUniqueException.#ctor(System.String)">
      <summary>Initializes a new BuildAgentSpecNotUniqueException instance.</summary>
      <param name="name">The name of the nonunique build agent.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate">
      <summary>Describes an update to the build agent.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.AttachedProperties">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.BuildDirectory">
      <summary>Build directory was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.ControllerUri">
      <summary>Controller uniform resource identifier (URI) was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.Description">
      <summary>Description was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.Enabled">
      <summary>Enabled status was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.Name">
      <summary>Name was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.None">
      <summary>No update.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.Status">
      <summary>Status was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.StatusMessage">
      <summary>Status message was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdate.Tags">
      <summary>Tags were updated.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdateException">
      <summary>Exception that is thrown when a build agent is updating.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdateException.#ctor(System.String)">
      <summary>Initializes a new BuildAgentUpdateException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildAgentUpdateException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildAgentUpdateException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildClientUtil"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildClientUtil.CreateWorkspace(Microsoft.TeamFoundation.VersionControl.Client.VersionControlServer,System.String,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.VersionControl.Client.WorkingFolder},System.String,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Framework.Client.AccessControlEntry})">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.VersionControl.Client.Workspace" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildControllerAlreadyExistsException">
      <summary>Exception that is thrown when a build controller already exists.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new BuildControllerAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildControllerAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildControllerDeletionException">
      <summary>Exception that is thrown when an error occurs in the deletion of a build controller.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerDeletionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerDeletionException.#ctor(System.String)">
      <summary>Initializes a new BuildControllerDeletionException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerDeletionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildControllerDeletionException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildControllerDoesNotExistException">
      <summary>Exception that is thrown when a build controller does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new BuildControllerDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildControllerDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildControllerNotFoundException">
      <summary>Exception that is thrown when a build controller was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerNotFoundException.#ctor(System.String)">
      <summary>Initializes a new BuildControllerNotFoundException instance.</summary>
      <param name="name">The name of the build controller that was not found.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildControllerNotFoundForUriException">
      <summary>Exception that is thrown when a build controller was not found at the specified URI.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerNotFoundForUriException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerNotFoundForUriException.#ctor(System.Uri,System.String)">
      <summary>Initializes a new BuildControllerNotFoundForUriException instance.</summary>
      <param name="buildControllerUri">The URI that was queried that did not contain a build controller.</param>
      <param name="userName">The name of the user who queried the build definition.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildControllerNotReadyToSaveException">
      <summary>Exception that is thrown when the build controller was not ready to save.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerNotReadyToSaveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerNotReadyToSaveException.#ctor(System.String)">
      <summary>Initializes a new BuildControllerNotReadyToSaveException instance.</summary>
      <param name="controllerName">The build controller that was not ready to save.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildControllerSpecNotUniqueException">
      <summary>Exception that is thrown when a build controller spec was not unique.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerSpecNotUniqueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildControllerSpecNotUniqueException.#ctor(System.String)">
      <summary>Initializes a new BuildControllerSpecNotUniqueException instance.</summary>
      <param name="name">The name of the nonunique build controller spec.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate">
      <summary>Describes an update being made to the build controller.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.AttachedProperties">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.CustomAssemblyPath">
      <summary>Custom assembly path was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.Description">
      <summary>Description was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.Enabled">
      <summary>Enabled status was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.MaxConcurrentBuilds">
      <summary>Maximum number of concurrent builds was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.Name">
      <summary>Name was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.None">
      <summary>No update.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.Status">
      <summary>Status was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildControllerUpdate.StatusMessage">
      <summary>Status message was updated.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionAlreadyExistsException">
      <summary>Exception that is thrown when a build definition already exists.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new BuildDefinitionAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildDefinitionAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionDisabledException">
      <summary>Exception that is thrown when a build definition is disabled.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionDisabledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionDisabledException.#ctor(System.String)">
      <summary>Initializes a new BuildDefinitionDisabledException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionDisabledException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildDefinitionDisabledException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionDoesNotExistException">
      <summary>Exception that is thrown when a build definition does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new BuildDefinitionDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildDefinitionDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionFailureException">
      <summary>Exception that is thrown for a build definition failure.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionFailureException.#ctor(System.String,System.String,Microsoft.TeamFoundation.Build.Client.IFailure)">
      <summary>Initializes a new BuildDefinitionFailureException instance.</summary>
      <param name="teamProject">The team project that contains the failed build definition.</param>
      <param name="name">The name of the failed definition.</param>
      <param name="failure">The specific failure instance.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionNotFoundException">
      <summary>Exception that is thrown when a build definition was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionNotFoundException.#ctor(System.String,System.String)">
      <summary>Initializes a new BuildDefinitionNotFoundException isntance.</summary>
      <param name="teamProject">The team project that was queried.</param>
      <param name="name">The name of the build definition that was not found.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionNotFoundForUriException">
      <summary>Exception that is thrown when a build definition was not found at the specified URI.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionNotFoundForUriException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionNotFoundForUriException.#ctor(System.Uri,System.String)">
      <summary>Initializes a new BuildDefinitionNotFoundForUriException instance.</summary>
      <param name="buildDefinitionUri">The URI that was queried that did not contain a build definition.</param>
      <param name="userName">The name of the user who queried the build definition.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionSpecNotUniqueException">
      <summary>Exception that is thrown when a build definition spec was not unique.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionSpecNotUniqueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionSpecNotUniqueException.#ctor(System.String,System.String)">
      <summary>Initializes a new BuildDefinitionSpecNotUniqueException instance.</summary>
      <param name="teamProject">The team project that contains the nonunique build definition specs.</param>
      <param name="name">The name of the nonunique build definition spec.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionUpdateException"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionUpdateException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionUpdateException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDefinitionXmlSerializer"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionXmlSerializer.FromXml(Microsoft.TeamFoundation.Build.Client.IBuildServer,System.Xml.XmlReader)">
      <summary>Deserializes a build definition from XML form that was previously serialized by a call to ToXml.</summary>
      <returns>An exact copy of the previously serialized build definition object</returns>
      <param name="buildServer">The build server</param>
      <param name="reader">The System.Xml.XmlReader from which the definition should be read</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDefinitionXmlSerializer.ToXml(Microsoft.TeamFoundation.Build.Client.IBuildDefinition,System.Xml.XmlWriter)">
      <summary>Serializes the build definition to an XML serialized form.</summary>
      <param name="definition">The build definition to serialize</param>
      <param name="writer">The System.Xml.XmlWriter to which the definition should be written</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDeployment">
      <summary>This class contains the build summary for the actual deployment and the build summary for source build being deployed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDeployment.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeployment.Deployment">
      <summary>Gets the deployment build URI. This field is read-only.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.BuildSummary" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeployment.DeploymentDefinitionName">
      <summary>Gets the build definition used to execute the deployment.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeployment.Source">
      <summary>Gets the source build URI. This field is read-only.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.BuildSummary" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDeployment.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeployment.WebsiteUrl">
      <summary>Url to the build Web site for the deployment.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec">
      <summary>Provides properties for querying build deployments in a team project collection.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.DefinitionPath">
      <summary>The full build definition path</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.DeploymentStatus">
      <summary>Gets or sets the build status filter.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.BuildStatus" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.EnvironmentName">
      <summary>The name of target deployment enviornment.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.MaxDeployments">
      <summary>Maximum deployments to return.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.MaxFinishTime">
      <summary>Gets or sets the maximum finish time filter.</summary>
      <returns>Returns <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.MinFinishTime">
      <summary>Gets or sets the minimum finish time filter.</summary>
      <returns>Returns <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.QueryOrder">
      <summary>Gets or sets the desired order of the deployments returned.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.BuildQueryOrder" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.RequestedFor">
      <summary>Gets or sets the requested for filter.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.TeamProject">
      <summary>Gets or sets the team project filter.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.AgentStatus)">
      <summary>Gets the localized display text for AgentStatus values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus)">
      <summary>Gets the localized display text for BuildPhaseStatus values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.BuildReason)">
      <summary>Gets the localized display text for BuildReason values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.BuildStatus)">
      <summary>Gets the localized display text for BuildStatus values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.BuildStepStatus)">
      <summary>Gets the localized display text for BuildStepStatus values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.ControllerStatus)">
      <summary>Gets the localized display text for ControllerStatus values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.DefinitionQueueStatus)">
      <summary>Gets the localized display text for DefinitionQueueStatus values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType)">
      <summary>Gets the localized display text for DefinitionTriggerType values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.DeleteOptions)">
      <summary>Gets the localized display text for DeleteOptions values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.QueuePriority)">
      <summary>Gets the localized display text for QueuePriority values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(Microsoft.TeamFoundation.Build.Client.QueueStatus)">
      <summary>Gets the localized display text for QueueStatus values.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayText(System.Object)">
      <summary>Gets the localized display text for known enumeration values (and the ToString value for others).</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildEnumerationHelper.GetDisplayTextValues(System.Type)">
      <summary>Gets an array of the localized display text values for a known enumeration (and the ToString values for others).</summary>
      <returns>The array of localized display text values.</returns>
      <param name="enumType">The type of the enum.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildExtensionAttribute">
      <summary>Represents a build extension attribute.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildExtensionAttribute.#ctor(Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption)">
      <summary>Initializes a new BuildExtensionAttribute instance.</summary>
      <param name="option">Host environment options to set.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildExtensionAttribute.Option">
      <summary>Gets the current host environment options for this attribute.</summary>
      <returns>The current host environment options for this attribute.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildFailedException">
      <summary>Exception that is thrown when a build failed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildFailedException.#ctor(System.String)">
      <summary>Initializes a new BuildFailedException instance.</summary>
      <param name="build">The build that failed.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildFailureException">
      <summary>Exception for a build failure.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildFailureException.#ctor(System.String,System.String,Microsoft.TeamFoundation.Build.Client.IFailure)">
      <summary>Initializes a new BuildFailureException instance.</summary>
      <param name="teamProject">The team project that contains the failed build.</param>
      <param name="name">The name of the failed build.</param>
      <param name="failure">The specific failure instance.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildGroupAlreadyExistsException">
      <summary>Exception that is thrown when a build group already exists.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildGroupAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildGroupAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new BuildGroupAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildGroupAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildGroupAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildGroupDoesNotExistException">
      <summary>Exception that is thrown when a build group does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildGroupDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildGroupDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new BuildGroupDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildGroupDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildGroupDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildMessageImportance">
      <summary>Describes the importance of a message. For more information about how to use this type, see Manage Build Information and Control Verbosity.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Low">
      <summary>Low importance.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.Normal">
      <summary>Normal importance.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildMessageImportance.High">
      <summary>High importance.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildNotDeletedException">
      <summary>Exception for a build that was not deleted.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotDeletedException.#ctor(System.String)">
      <summary>Initializes a new BuildNotDeletedException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotDeletedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildNotDeletedException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildNotFinishedException">
      <summary>Exception that is thrown when a build did not finish.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotFinishedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotFinishedException.#ctor(System.String)">
      <summary>Initializes a new BuildNotFinishedException instance.</summary>
      <param name="build">The build that did not finish.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildNotFoundException">
      <summary>Exception that is thrown when a build was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotFoundException.#ctor(System.String,System.String)">
      <summary>Initializes a new BuildNotFoundException instance.</summary>
      <param name="buildNumber">The build number that was not found.</param>
      <param name="buildDefinitionPath">The build definition path that was used.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildNotFoundForUriException">
      <summary>Exception that is thrown when a build was not found at the specified uniform resource identifier (URI).</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotFoundForUriException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNotFoundForUriException.#ctor(System.Uri,System.String)">
      <summary>Initializes a new BuildNotFoundForUriException instance.</summary>
      <param name="buildUri">The URI that was queried that did not contain a build definition.</param>
      <param name="userName">The name of the user who queried the build.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildNumberAlreadyExistsException">
      <summary>Exception for a build number that already exists.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNumberAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNumberAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new BuildNumberAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildNumberAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildNumberAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus">
      <summary>Describes the status of the build phase.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Failed">
      <summary>Build has failed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Succeeded">
      <summary>Build has succeeded.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildPhaseStatus.Unknown">
      <summary>Status is unknown.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildQualityDoesNotExistException">
      <summary>Exception that is thrown when build quality does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildQualityDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildQualityDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new BuildQualityDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildQualityDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildQualityDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildQueryOrder">
      <summary>Describes the build query order.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildQueryOrder.FinishTimeAscending">
      <summary>Order by finish time, ascending.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildQueryOrder.FinishTimeDescending">
      <summary>Order by finish time, descending.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildQueryOrder.StartTimeAscending">
      <summary>Order by start time, ascending.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildQueryOrder.StartTimeDescending">
      <summary>Order by start time, descending.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildReason">
      <summary>Describes the reason for the build.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.All">
      <summary>Build was started for any of the prevous reasons.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.BatchedCI">
      <summary>Build was started due to batched check-in.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.CheckInShelveset">
      <summary>Build was started to check shelveset.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.IndividualCI">
      <summary>Build started due to individual check-in.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.Manual">
      <summary>Build started manually.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.None">
      <summary>No reason given.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.Schedule">
      <summary>Build was started due to scheduled time, only if changes were made.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.ScheduleForced">
      <summary>Build was started due to scheduled time, even if no changes were made.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.Triggered">
      <summary>Build was triggered by an event.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.UserCreated">
      <summary>Build was started due to user defined reason.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildReason.ValidateShelveset">
      <summary>Build was started to validate shelveset.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildReasonNotSupportedException">
      <summary>Exception that is thrown when a build reason is not supported.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildReasonNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildReasonNotSupportedException.#ctor(System.String)">
      <summary>Initializes a new BuildReasonNotSupportedException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildReasonNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildReasonNotSupportedException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServerException">
      <summary>Base class for a build server exception.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServerVersion">
      <summary>Describes the version of the build server.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildServerVersion.V1">
      <summary>Version 1.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildServerVersion.V2">
      <summary>Version 2.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildServerVersion.V3">
      <summary>Version 3.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildServerVersion.V4">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServiceHostAlreadyExistsException">
      <summary>Exception that is thrown when a build service host already exists.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostAlreadyExistsException.#ctor(System.String)">
      <summary>Initializes a new BuildServiceHostAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildServiceHostAlreadyExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServiceHostDeletionException"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostDeletionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostDeletionException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostDeletionException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServiceHostDoesNotExistException">
      <summary>Exception that is thrown when a build service host does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new BuildServiceHostDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new BuildServiceHostDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServiceHostNotFoundException">
      <summary>Exception that is thrown when a build service host was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostNotFoundException.#ctor(System.String)">
      <summary>Initializes a new BuildServiceHostNotFoundException instance.</summary>
      <param name="name">The name of the build service host that was not found.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServiceHostNotFoundForUriException">
      <summary>Exception that is thrown when a build service host was not found at the specified URI.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostNotFoundForUriException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostNotFoundForUriException.#ctor(System.Uri,System.String)">
      <summary>Initializes a new BuildServiceHostNotFoundForUriException instance.</summary>
      <param name="buildServiceHostUri">The URI that was queried that did not contain a build service host.</param>
      <param name="userName">The name of the user who queried the build service host.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServiceHostOwnershipException"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostOwnershipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostOwnershipException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostOwnershipException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServiceHostSpecNotUniqueException">
      <summary>Exception that is thrown when a build service host spec was not unique.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostSpecNotUniqueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildServiceHostSpecNotUniqueException.#ctor(System.String)">
      <summary>Initializes a new BuildServiceHostSpecNotUniqueException instance.</summary>
      <param name="name">The name of the nonunique build service host spec.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildServiceHostUpdate">
      <summary>Describes an update on the build service host.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildServiceHostUpdate.BaseUrl">
      <summary>Base URL was changed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildServiceHostUpdate.Name">
      <summary>Name was changed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildServiceHostUpdate.None">
      <summary>Nothing was changed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildServiceHostUpdate.RequireClientCertificates">
      <summary>Required client certificates were changed.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildSpecNotUniqueException">
      <summary>Exception that is thrown when a build spec was not unique.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildSpecNotUniqueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildSpecNotUniqueException.#ctor(System.String,System.String)">
      <summary>Initializes a new BuildSpecNotUniqueException instance.</summary>
      <param name="buildNumber">The nonunique build number that contains the nonunique build spec.</param>
      <param name="buildDefinitionPath">The build definition path.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildStatus">
      <summary>This enumeration represents the status of builds and build steps.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStatus.All">
      <summary>All status applies.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStatus.Failed">
      <summary>Build failed. </summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStatus.InProgress">
      <summary>Build is in progress. </summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStatus.None">
      <summary>No status available.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStatus.NotStarted">
      <summary>Build is not started. </summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStatus.PartiallySucceeded">
      <summary>Build is partially succeeded.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStatus.Stopped">
      <summary>Build is stopped.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStatus.Succeeded">
      <summary>Build succeeded.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildStepStatus">
      <summary>Describes the build step status.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStepStatus.Failed">
      <summary>Build step failed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStepStatus.InProgress">
      <summary>Build step is in progress.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStepStatus.Succeeded">
      <summary>Build step succeeded.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildStepStatus.Unknown">
      <summary>Status is unknown.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildStoppedException">
      <summary>Exception that is thrown when the build stopped.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildStoppedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildStoppedException.#ctor(System.String,System.String)">
      <summary>Initializes a new BuildStoppedException instance.</summary>
      <param name="build">The build that stopped.</param>
      <param name="stoppedBy">The cause of the stop.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildSummary">
      <summary>This class contains basic build information so the UI can display what it needs</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildSummary.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.ChangeSet">
      <summary>Gets all associated changesets with user display names with this build.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.ChangesetDisplayInformation" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.FinishTime">
      <summary>Gets the finish time.</summary>
      <returns>Returns <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.KeepForever">
      <summary>Gets if this build will not be deleted.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.Number">
      <summary>Gets the build number.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.Quality">
      <summary>Gets the quality.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.Reason">
      <summary>Gets the reason this deployment started.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.BuildReason" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.RequestedFor">
      <summary>Gets list of user guids, display names this build was requested for.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.RequestedForDisplayInformation" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.StartTime">
      <summary>Gets the start time.</summary>
      <returns>Returns <see cref="T:System.DateTime" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.Status">
      <summary>Gets the status.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.BuildStatus" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildSummary.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildSummary.Uri">
      <summary>Gets the build URI. This field is read-only.</summary>
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission">
      <summary>Represents a build project permission for a particular user.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission.#ctor">
      <summary>Initializes a new BuildTeamProjectPermission instance.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission.Allows">
      <summary>Gets or sets the array of permissions that are allowed.</summary>
      <returns>The array of permissions that are allowed.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission.Denies">
      <summary>Gets or sets the array of permissions that are denied.</summary>
      <returns>The array of permissions that are denied.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission.IdentityName">
      <summary>Gets or sets the identity name that is associated with this permissions instance.</summary>
      <returns>The identity name that is associated with this permissions instance.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission.ToString">
      <summary>Creates a user-readable string that describes the properties of this BuildTeamProjectPermission instance.</summary>
      <returns>The user-readable string that describes this instance.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission2010">
      <summary>Represents a build project permission for a particular user.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission2010.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission2010.Allows">
      <summary>Gets the list of permissions that are allowed.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission2010.Denies">
      <summary>Gets the list of permissions that are denied.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission2010.IdentityName">
      <summary>Gets or sets the identity this permission affects.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission2010.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.BuildUpdate">
      <summary>Describes an update to the build.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.BuildNumber">
      <summary>Build number was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.CompilationStatus">
      <summary>Compilation status was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.DropLocation">
      <summary>Drop location was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.KeepForever">
      <summary>Keep forever option was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.LabelName">
      <summary>Label name was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.LogLocation">
      <summary>Log location was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.None">
      <summary>No update.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.Quality">
      <summary>Quality was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.SourceGetVersion">
      <summary>SourceGetVersion was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.Status">
      <summary>Status was updated.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.BuildUpdate.TestStatus">
      <summary>Test status was updated.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CannotDeleteDefinitionBuildExistsException">
      <summary>Exception that is thrown when the build definition cannot be deleted because of an existing build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotDeleteDefinitionBuildExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotDeleteDefinitionBuildExistsException.#ctor(System.String)">
      <summary>Initializes a new CannotDeleteDefinitionBuildExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotDeleteDefinitionBuildExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new CannotDeleteDefinitionBuildExistsException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CannotDeleteInProgressBuildException">
      <summary>Exception that is caused by an attempt do delete a build that is in progress.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotDeleteInProgressBuildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotDeleteInProgressBuildException.#ctor(System.String)">
      <summary>Initializes a new CannotDeleteInProgressBuildException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotDeleteInProgressBuildException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new CannotDeleteInProgressBuildException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CannotRedeployException"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotRedeployException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotRedeployException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotRedeployException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CannotStartBuildException"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotStartBuildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotStartBuildException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotStartBuildException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CannotStopBuildException">
      <summary>Exception that is thrown when the build cannot be stopped.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotStopBuildException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotStopBuildException.#ctor(System.String)">
      <summary>Initializes a new CannotStopBuildException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CannotStopBuildException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new CannotStopBuildException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ChangesetDisplayInformation">
      <summary>This class contains changeset number, user display name</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ChangesetDisplayInformation.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ChangesetDisplayInformation.ChangesetId">
      <summary>Changeset number</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ChangesetDisplayInformation.CheckedInBy">
      <summary>Display name for user who checked in changeset</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ChangesetDisplayInformation.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CodeAnalysisRunType">
      <summary>Describes the code analysis run type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.CodeAnalysisRunType.Default">
      <summary>Default run type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.CodeAnalysisRunType.Always">
      <summary>Run always.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.CodeAnalysisRunType.Never">
      <summary>Never run.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ConfigurationFolderPathNotFoundException">
      <summary>Exception that is thrown when a configuration folder path was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ConfigurationFolderPathNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ConfigurationFolderPathNotFoundException.#ctor(System.String)">
      <summary>Initializes a new ConfigurationFolderPathNotFoundException instance.</summary>
      <param name="folderPath">The folder path that did not contain the configuration folder.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType">
      <summary>Describes the continuous integration type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType.All">
      <summary>All continuous integration types.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType.Batch">
      <summary>Batch continuous integration.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType.Gated">
      <summary>Gated continuous integration.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType.Individual">
      <summary>Individual continuous integration.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType.None">
      <summary>Continuous integeration not set.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType.Schedule">
      <summary>Scheduled continuous integration only when changes occur.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType.ScheduleForced">
      <summary>Scheduled continuous integration even without changes.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ControllerStatus">
      <summary>Describes the controller status.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ControllerStatus.Available">
      <summary>Controller is available.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ControllerStatus.Offline">
      <summary>Controller is offline.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ControllerStatus.Unavailable">
      <summary>Controller is unavailable.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CoverageServiceRestartFailureDuringDeleteException">
      <summary>Exception that is caused when coverage service restarts during a delete operation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CoverageServiceRestartFailureDuringDeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CoverageServiceRestartFailureDuringDeleteException.#ctor(System.String)">
      <summary>Initializes a new CoverageServiceRestartFailureDuringDeleteException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CoverageServiceRestartFailureDuringDeleteException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new CoverageServiceRestartFailureDuringDeleteException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CustomAssemblyPathNotFoundException">
      <summary>Exception that is thrown when a custom assembly path was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CustomAssemblyPathNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CustomAssemblyPathNotFoundException.#ctor(System.String)">
      <summary>Initializes a new CustomAssemblyPathNotFoundException instance.</summary>
      <param name="folderPath">The folder path that did not contain the custom assembly.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CustomAssemblyPathNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new CustomAssemblyPathNotFoundException instance.</summary>
      <param name="folderPath">The folder path that did not contain the custom assembly.</param>
      <param name="innerException">The exception that caused this exception.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.CustomBuildServiceException">
      <summary>Exception for an error with a custom build service.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CustomBuildServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.CustomBuildServiceException.#ctor(System.Type,System.String)">
      <summary>Initializes a new CustomBuildServiceException instance.</summary>
      <param name="type">The type of this exception.</param>
      <param name="assembly">The assembly in which this exception was thrown.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DefinitionQueueStatus">
      <summary>Specifies the status of a definition queue.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionQueueStatus.Disabled">
      <summary>When disabled, the definition queue will not allow for builds to be queued by users and the system will not queue scheduled, gated, or continuous integration builds. Builds already in the queue will not be started by the system.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionQueueStatus.Enabled">
      <summary>When enabled, the definition queue allows for builds to be queued by users, the system will queue scheduled, gated, and continuous integration builds, and the queued builds will be started by the system.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionQueueStatus.Paused">
      <summary>When paused, the definition queue allows for builds to be queued by users and the system will queue scheduled, gated, and continuous integration builds. Builds in the queue will not be started by the system.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType">
      <summary>Specifies the trigger type that is used for a build definition.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType.All">
      <summary>All types.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType.BatchedContinuousIntegration">
      <summary>A build should be started for multiple changesets at a time at a specified interval.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType.BatchedGatedCheckIn">
      <summary>A validation build should be started for each batch of check-ins.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType.ContinuousIntegration">
      <summary>A build should be started for each changeset.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType.GatedCheckIn">
      <summary>A validation build should be started for each check-in.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType.None">
      <summary>Manual builds only.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType.Schedule">
      <summary>A build should be started on a specified schedule if changesets exist.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType.ScheduleForced">
      <summary>A build should be started on a specified schedule whether or not changesets exist.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DeleteBuildFailedException">
      <summary>Exception that is thrown when a build delete request failed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeleteBuildFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeleteBuildFailedException.#ctor(System.String,System.String)">
      <summary>Initializes a new DeleteBuildFailedException instance.</summary>
      <param name="build">The build that failed to delete.</param>
      <param name="failureMessage">A message that describes the failure.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DeleteOptions">
      <summary>Options for delete.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeleteOptions.All">
      <summary>Delete all.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeleteOptions.Details">
      <summary>Delete details.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeleteOptions.DropLocation">
      <summary>Delete drop location.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeleteOptions.Label">
      <summary>Delete the label.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeleteOptions.None">
      <summary>No delete options selected.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeleteOptions.Symbols">
      <summary>Delete symbols.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeleteOptions.TestResults">
      <summary>Delete test results.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironment">
      <summary>This class contains all the deployment enviornment metadata and also the secret environment properties. This class does not serialize the secret values, those are fetched from the client on demand.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironment.ConnectedService"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironment.EnvironmentMetadata">
      <summary>The deployment enviornment metadata which includes the name (ID), connectedServiceName, friendly name, description, kind, TeamProject and ProjectId</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironment.GetPropertyValue(System.String)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironment.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentCreationData"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentCreationData.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentCreationData.#ctor(System.String,System.String,System.String,Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentCreationData.EnvironmentMetadata">
      <summary>The deployment enviornment metadata which includes the name (ID), connectedServiceName, friendly name, description, kind, TeamProject and ProjectId</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentCreationData.EnvironmentProperties">
      <returns>Returns <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentCreationData.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind"></member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureCloudApp">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.AzureWebsite">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind.Custom">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata">
      <summary>This class contains the "public" information about a DeploymentEnvironent. This includes the Name, TeamProject, ConnectedServiceName, FriendlyName, Kind, and Description. Used by Clients to display DeploymentEnviornment without revealing the secret information.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata.ConnectedServiceName">
      <summary>Name of the ConnectedService associated with this deployment.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata.Description">
      <summary>Extra description on the deployment.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata.FriendlyName">
      <summary>A friendly name to represent the deployment instead of 'name' which will often be a GUID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata.Kind">
      <summary>The kind of deployment.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata.Name">
      <summary>Unique name of the deployment such as a GUID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata.TeamProject">
      <summary>Name of the project associated with this deployment</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentMetadata.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentNotFoundException"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentNotFoundException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentNotFoundException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DeploymentService"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.BeginCreateBuildDeployment(System.Uri,System.Uri,System.String,System.AsyncCallback,System.Object)">
      <summary>Mark build as a deployment and the associated build being deployed.</summary>
      <returns>IAsyncResult that saves variable information for this async call.</returns>
      <param name="deploymentUri">The build Uri that runs the deployment.</param>
      <param name="sourceUri">The build Uri for the build being deployed.</param>
      <param name="callback">The method to call when this operation has completed.</param>
      <param name="state">An object that saves variable information for an instance of an asynchronous activity.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.ConnectAzureCloudApp(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.ConnectAzureCloudApp(System.String,System.String,System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.ConnectAzureWebsite(System.String,System.String,System.String,System.String)">
      <summary>Connect an AzureWebSite to a Team Project. This method creates a deployment enviroment for the given Azure WebSite and then creates a Continuous Integration build definition for deploying builds to that site.</summary>
      <param name="teamProject">The name of the team project with which to connect</param>
      <param name="subscriptionId">The subscription Id of the azure web site. Corresponds to the name of a connected service.</param>
      <param name="webspace">The webspace of the Azure web site.</param>
      <param name="website">The azure web site name.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.CreateBuildDeployment(System.Uri,System.Uri,System.String)">
      <summary>Mark build as a deployment and the associated build being deployed.</summary>
      <returns>A BuildDeployment that contains basic information about the deployment build and the source build.</returns>
      <param name="deploymentUri">The build Uri that runs the deployment.</param>
      <param name="sourceUri">The build Uri for the build being deployed.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.CreateDeploymentEnvironment(System.String,System.String,System.String,Microsoft.TeamFoundation.Build.Client.DeploymentEnvironmentKind,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>Create a new Deployment Environment</summary>
      <returns>The DeploymentEnvironmentMetadata for the new enviornment</returns>
      <param name="name">the name of the environment</param>
      <param name="environmentKind">The kind of the environment</param>
      <param name="friendlyName">An optional friendly name for the environment</param>
      <param name="description">An optional description for the environment</param>
      <param name="environmentProperties">Any environment specific properties</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.DeleteDeploymentEnvironment(System.String,System.String)">
      <summary>Delete a deployment environment.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.EndCreateBuildDeployment(System.IAsyncResult)">
      <summary>Returns BuildDeployment created during this async operation.</summary>
      <returns>A BuildDeployment that contains basic information about the deployment build and the source build.</returns>
      <param name="result">IAsyncResult that saved variable information from the corresponding Begin call.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.GetDeploymentEnvironment(System.String,System.String)">
      <summary>Get all of the data for a particular deployment environment</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.QueryDeploymentEnvironments(System.String)">
      <summary>List the deployment environments</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.QueryDeployments(Microsoft.TeamFoundation.Build.Client.BuildDeploymentSpec)">
      <summary>Query the list of deployments</summary>
      <returns>An array of BuildDeployment[], each that contain basic information about the deployment build and the source build.</returns>
      <param name="spec">The parameters to query on.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.Redeploy(System.Uri)">
      <summary>Redeploy a previous successful deployment</summary>
      <returns>List of queued builds</returns>
      <param name="deploymentUri">The build uri for the deployment</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DeploymentService.Redeploy(System.Uri,Microsoft.TeamFoundation.Build.Common.AzureDeploymentSlot)">
      <summary>Redeploy a previous successful deployment</summary>
      <returns>List of queued builds</returns>
      <param name="deploymentUri">The build uri for the deployment</param>
      <param name="deploymentSlot">Indicates Azure slot to redeploy</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DuplicateBuildUpdateRequestException"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateBuildUpdateRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateBuildUpdateRequestException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateBuildUpdateRequestException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DuplicateInformationChangeRequestException">
      <summary>Exception that is caused by a duplicate information change request.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateInformationChangeRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateInformationChangeRequestException.#ctor(System.String)">
      <summary>Initializes a new DuplicateInformationChangeRequestException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateInformationChangeRequestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new DuplicateInformationChangeRequestException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.DuplicateProcessTemplateException">
      <summary>Exception for a duplicate process template.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateProcessTemplateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateProcessTemplateException.#ctor(System.String)">
      <summary>Initializes a new DuplicateProcessTemplateException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.DuplicateProcessTemplateException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new DuplicateProcessTemplateException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.GatedCheckInTicketValidationException">
      <summary>Exception that is caused by an error that occurs in gated check-in ticker validation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.GatedCheckInTicketValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.GatedCheckInTicketValidationException.#ctor(System.String)">
      <summary>Initializes a new GatedCheckInTicketValidationException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.GatedCheckInTicketValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new GatedCheckInTicketValidationException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.GetOption">
      <summary>Describes options for a get operation.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.GetOption.Custom">
      <summary>Custom get.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.GetOption.LatestOnBuild">
      <summary>Gets the latest item on the build.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.GetOption.LatestOnQueue">
      <summary>Gets the latest item on the queue.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption">
      <summary>Describes the host environment options.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption.None">
      <summary>No options set.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption.Agent">
      <summary>Agent.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption.Controller">
      <summary>Controller.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption.All">
      <summary>Agent or controller.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IActivityProperties">
      <summary>Interface for an IActivityProperties type of IBuildInformationNode. To obtain an IActivityProperties node, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityProperties.Node">
      <summary>Gets the IBuildInformationNode object that is encapsulated by this interface.</summary>
      <returns>The IBuildInformationNode object that is encapsulated by this interface.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityProperties.Properties">
      <summary>Gets the properties of the activity and their values.</summary>
      <returns>A dictionary of property-value pairs.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IActivityProperties.Save">
      <summary>Saves this information node.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IActivityTracking">
      <summary>Interface for an IActivityTracking type of IBuildInformationNode. To obtain an IActivityTracking, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.ActivityInstanceId">
      <summary>Gets or sets the instance ID of the tracked activity.</summary>
      <returns>The instance ID of the tracked activity.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.ActivityType">
      <summary>Gets or sets the type of the tracked activity.</summary>
      <returns>The type of the tracked activity.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IActivityTracking.AddActivityTracking(System.String,System.String,System.String)">
      <summary>Adds a child activity tracking node.</summary>
      <returns>The child activity tracking node.</returns>
      <param name="activityInstanceId">The instance ID of the child activity that will be tracked.</param>
      <param name="activityType">The type of the child activity that will be tracked.</param>
      <param name="displayText">The display name of the child activity.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IActivityTracking.AddAgentScopeActivityTracking(System.String,System.String,System.String)">
      <summary>Adds a child activity tracking node for an AgentScope activity.</summary>
      <returns>The child agent scope activity tracking node.</returns>
      <param name="activityInstanceId">The instance ID of the child activity that will be tracked.</param>
      <param name="activityType">The type of the child activity that will be tracked.</param>
      <param name="displayText">The display name of the child activity.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IActivityTracking.AddPropertyValues(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>Adds a child activity properties node.</summary>
      <returns>The child activity properties node.</returns>
      <param name="properties">The property names and values.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.DisplayName">
      <summary>Gets or sets the display name of the tracked activity.</summary>
      <returns>The display name of the tracked activity.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.FinalPropertyValues">
      <summary>Gets the properties and their values at the time that the tracked activity completed execution.</summary>
      <returns>The properties and their values at the time that the tracked activity completed execution.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.FinishTime">
      <summary>Gets or sets the time that the tracked activity completed execution.</summary>
      <returns>The time that the tracked activity completed execution.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.InitialPropertyValues">
      <summary>Gets the properties and their values at the time that the tracked activity began execution.</summary>
      <returns>The properties and their values at the time that the tracked activity began execution.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.Node">
      <summary>Gets the IBuildInformationNode that is encapsulated by this interface.</summary>
      <returns>The IBuildInformationNode that is encapsulated by this interface.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IActivityTracking.Save">
      <summary>Saves this information node.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.StartTime">
      <summary>Gets or sets the time that the tracked activity began execution.</summary>
      <returns>The time that the tracked activity began execution.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IActivityTracking.State">
      <summary>Gets or sets the state of the tracked activity.</summary>
      <returns>The state of the tracked activity.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IAgentScopeActivityTracking">
      <summary>Interface for an IAgentScopeActivityTracking type of IBuildInformationNode. To obtain an IAgentScopeActivityTracking node, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IAgentScopeActivityTracking.ReservationStatus">
      <summary>Gets or sets the status of the reservation for the tracked AgentScope activity.</summary>
      <returns>The status of the reservation for the tracked AgentScope activity.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IAgentScopeActivityTracking.ReservedAgentName">
      <summary>Gets or sets the name of the reserved agent for the tracked AgentScope activity.</summary>
      <returns>The name of the reserved agent for the tracked AgentScope activity.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IAgentScopeActivityTracking.ReservedAgentUri">
      <summary>Gets or sets the uniform resource identifier (URI) of the reserved agent for the tracked AgentScope activity.</summary>
      <returns>The URI of the reserved agent for the tracked AgentScope activity.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildAgent">
      <summary>This interface defines methods for accessing the build agent on the Team Foundation Build computer.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.AttachedProperties">
      <summary>Attached properties</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.BuildDirectory">
      <summary>Gets or sets a path of the build agent working directory.</summary>
      <returns>The working directory for the build agent.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Controller">
      <summary>Gets or sets the build controller that owns this build agent.</summary>
      <returns>The build controller that owns this build agent.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.DateCreated">
      <summary>Gets the date and time that this agent was created.</summary>
      <returns>The date and time that this agent was created.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.DateUpdated">
      <summary>Gets the date and time that this agent was last updated.</summary>
      <returns>The date and time that this agent was last updated.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Delete">
      <summary>Deletes the build agent from the build computer.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Description">
      <summary>Gets or sets the description of the build agent.</summary>
      <returns>The description of the build agent.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Enabled">
      <summary>Gets or sets a flag that describes whether the build agent is enabled.</summary>
      <returns>True if the build agent is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildAgent.GetExpandedBuildDirectory(Microsoft.TeamFoundation.Build.Client.IBuildDefinition)">
      <summary>Gets the build directory for the build agent with all variable expansions evaluated according to the given build definition. </summary>
      <returns>The path of the build directory.</returns>
      <param name="buildDefinition">
        <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinition" />. Specifies the build definition for which the build directory is returned.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.IsReserved">
      <summary>Gets a flag that describes whether this agent is currently being used by a build.</summary>
      <returns>True if this agent is reserved; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.MessageQueueUrl">
      <summary>Gets the message queue address. This field is for system use only.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Refresh(System.String[])">
      <summary>Refresh this build agent by getting updated property values from the server.</summary>
      <param name="propertyNameFilters">The property names to obtain.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.ReservedForBuild">
      <summary>Gets the identifier of the build that is currently using this agent. Returns null if the agent is not currently being used.</summary>
      <returns>The identifier of the build that is currently using this agent. Returns null if the agent is not currently being used.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Save">
      <summary>Saves any changes that were made to the build agent on the build computer.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.ServiceHost">
      <summary>Gets the service host in which this build agent resides.</summary>
      <returns>The service host in which this build agent resides.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Status">
      <summary>Gets or sets the build agent status.</summary>
      <returns>The status of the build agent.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.StatusMessage">
      <summary>Gets a message from the build computer about the build agent status.</summary>
      <returns>A displayable message from the server that describes the status of the agent. May be empty.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Tags">
      <summary>Gets or sets the tags that are defined for this build agent.</summary>
      <returns>The tags that are defined for this build agent.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgent.Url">
      <summary>Gets the URL that is used to communicate with the build agent.</summary>
      <returns>The URL that is used to communicate with the build agent.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildAgentQueryResult">
      <summary>This interface returns the results of a query for <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildAgent" />.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgentQueryResult.Agents">
      <summary>Gets the array of build agents for this query result.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgentQueryResult.Failures">
      <summary>Gets the array of failures for this query result.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildAgentSpec">
      <summary>This interface specifies a build agent used to query for build agents.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgentSpec.Name">
      <summary>Gets or sets the name of the build agent or build agents.</summary>
      <returns>The name of the desired build agents. Wildcard characters are supported.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgentSpec.PropertyNameFilters">
      <summary>The property names to be returned from the query/queries. A "*" will retrieve all property names, an empty array will retrieve none, and any other array will match types verbatim.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgentSpec.ServiceHostName">
      <summary>Gets or sets the service host name of the desired build agents. Wildcard characters are supported.</summary>
      <returns>The service host name of the desired build agents. Wildcard characters are supported.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildAgentSpec.Tags">
      <summary>Gets or sets the tags that are defined for the desired build agents.</summary>
      <returns>The tags that are defined for the desired build agents.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildController">
      <summary>Interface for a build controller in the server that is running Team Foundation Build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildController.AddBuildAgent(Microsoft.TeamFoundation.Build.Client.IBuildAgent)">
      <summary>Adds a build agent to this build controller.</summary>
      <param name="agent">The build agent to add.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.Agents">
      <summary>Gets the build agents that are owned by this build controller.</summary>
      <returns>The build agents that are owned by this build controller.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.AttachedProperties">
      <summary>Attached properties</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.CustomAssemblyPath">
      <summary>Gets or sets the version control path where custom assemblies are stored.</summary>
      <returns>The version control path where custom assemblies are stored.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.DateCreated">
      <summary>Gets the date and time that this build controller was created.</summary>
      <returns>The date and time that this build controller was created.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.DateUpdated">
      <summary>Gets the date and time that this build controller was last updated.</summary>
      <returns>The date and time that this build controller was last updated.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildController.Delete">
      <summary>Deletes this build controller.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.Description">
      <summary>Gets or sets the description of this build controller.</summary>
      <returns>The description of this build controller.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.Enabled">
      <summary>Gets or sets a flag that describes whether this build controller is enabled.</summary>
      <returns>True if this build controller is enabled; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildController.LoadCustomActivities(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption,System.Collections.Generic.List{System.Type}@,System.Collections.Generic.List{Microsoft.TeamFoundation.Build.Client.IFailure}@)">
      <summary>Downloads all assemblies from the CustomAssemblyLocation to the local path, loads the assemblies that contain custom activity types, and returns a list of the custom activity types.</summary>
      <returns>A list of assemblies that were loaded.</returns>
      <param name="localPath">The local path where custom assemblies are downloaded.</param>
      <param name="recursionType">The recursion type for the custom assembly download.</param>
      <param name="environmentOptions">Options to constrain the loaded activities.</param>
      <param name="activityTypes">The custom activity types that are found in the custom assemblies.</param>
      <param name="failures">The list of failures that occurred during this operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildController.LoadCustomActivitiesAndExtensions(System.String,Microsoft.TeamFoundation.VersionControl.Client.RecursionType,Microsoft.TeamFoundation.Build.Client.HostEnvironmentOption,System.Collections.Generic.List{System.Type}@,System.Collections.Generic.List{System.Type}@,System.Collections.Generic.List{Microsoft.TeamFoundation.Build.Client.IFailure}@)">
      <summary>Downloads all assemblies from the CustomAssemblyLocation to the local path, loads the assemblies that contain custom activity and extension types, and returns a list of the custom activity and extension types.</summary>
      <returns>A list of assemblies that were loaded.</returns>
      <param name="localPath">The local path to which custom assemblies are downloaded.</param>
      <param name="recursionType">The recursion type for the custom assembly download.</param>
      <param name="environmentOptions">Options to constrain the loaded activities.</param>
      <param name="activityTypes">The custom activity types that are found in the custom assemblies.</param>
      <param name="extensionTypes">The custom extension types that are found in the custom assemblies.</param>
      <param name="failures">The list of failures that occurred during this operation.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.MaxConcurrentBuilds">
      <summary>Gets or sets the maximum number of builds that may run at the same time on this build controller.</summary>
      <returns>The maximum number of builds that may run at the same time on this build controller.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.MessageQueueUrl">
      <summary>Gets the message queue address. This field is for system use only.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.Name">
      <summary>Gets or sets the name of this build controller.</summary>
      <returns>The name of this build controller.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.QueueCount">
      <summary>Gets the current queue count for this build controller.</summary>
      <returns>The current queue count for this build controller.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildController.Refresh(System.Boolean)">
      <summary>Refreshes the build controller by getting current property values from the build server.</summary>
      <param name="refreshAgentList">True to request agents from the server and refresh the local list of agents.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildController.Refresh(System.String[],System.Boolean)">
      <summary>Refreshes the build controller by getting current property values from the build server.</summary>
      <param name="propertyNameFilters">The property names to obtain.</param>
      <param name="refreshAgentList">If true, agents are requested from the server and the list of agents is replaced.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildController.RemoveBuildAgent(Microsoft.TeamFoundation.Build.Client.IBuildAgent)">
      <summary>Removes a build agent from this controller.</summary>
      <param name="agent">The agent that will be removed.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildController.Save">
      <summary>Saves changes that were made to this build controller to the build server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.ServiceHost">
      <summary>Gets the service host in which this build controller resides.</summary>
      <returns>The service host in which this build controller resides.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.Status">
      <summary>Gets or sets the status of this build controller.</summary>
      <returns>The status of this build controller.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.StatusMessage">
      <summary>Gets or sets a displayable message from the server about the status of this controller. May be empty.</summary>
      <returns>A displayable message from the server about the status of this controller. May be empty.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.Tags">
      <summary>Gets a read-only collection of tags for all the agents of this controller.</summary>
      <returns>A read-only collection of tags for all the agents of this controller.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.Uri">
      <summary>Gets the uniform resource identifier (URI) of this build controller.</summary>
      <returns>The URI of this build controller.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildController.Url">
      <summary>Gets the URL of this build controller.</summary>
      <returns>The URL of this build controller.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildControllerQueryResult">
      <summary>The interface for the result of a query for IBuildControllers.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildControllerQueryResult.Controllers">
      <summary>Gets the array of build controllers for this query result.</summary>
      <returns>The array of build controllers for this query result.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildControllerQueryResult.Failures">
      <summary>Gets the array of failures for this query result.</summary>
      <returns>The array of failures for this query result.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildControllerSpec">
      <summary>Interface for a build controller specification. Used to query for build controllers.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildControllerSpec.IncludeAgents">
      <summary>Gets or sets a flag that describes whether to include build agents in the result set.</summary>
      <returns>True to include build agents in the result set; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildControllerSpec.Name">
      <summary>Gets or sets the name of the desired build controllers. Wildcard characters are supported.</summary>
      <returns>The name of the desired build controllers. Wildcard characters are supported.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildControllerSpec.PropertyNameFilters">
      <summary>The property names to be returned from the query/queries. A "*" will retrieve all property names, an empty array will retrieve none, and any other array will match types verbatim.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildControllerSpec.ServiceHostName">
      <summary>Gets or sets the service host name of the desired build controllers. Wildcard characters are supported.</summary>
      <returns>The service host name of the desired build controllers. Wildcard characters are supported.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinition">
      <summary>This interface represents a build definition.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.AddRetentionPolicy(Microsoft.TeamFoundation.Build.Client.BuildReason,Microsoft.TeamFoundation.Build.Client.BuildStatus,System.Int32,Microsoft.TeamFoundation.Build.Client.DeleteOptions)">
      <summary>Adds a retention policy to the list of retention policies of this build definition.</summary>
      <returns>The newly added retention policy.</returns>
      <param name="reason">The reason for the retention policy.</param>
      <param name="status">The status of the retention policy.</param>
      <param name="numberToKeep">The number of builds to keep.</param>
      <param name="deleteOptions">The parts of the build to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.AddSchedule">
      <summary>Adds a schedule to the list of schedules for the build definition. The schedule has no effect if the <see cref="T:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType" /> is not <see cref="F:Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType.Schedule" />. Only one schedule is accepted in the list.</summary>
      <returns>Returns the <see cref="T:Microsoft.TeamFoundation.Build.Client.ISchedule" /> that was added.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.AttachedProperties">
      <summary>Attached properties</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.BatchSize">
      <summary>The maximum batch size for queued builds when you use the Gated continuous integration type.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.BuildController">
      <summary>Gets or sets the build controller that builds this build definition.</summary>
      <returns>The build controller that builds this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.BuildControllerUri">
      <summary>Gets the uniform resource identifier (URI) of the build controller that builds this build definition.</summary>
      <returns>The URI of the build controller that builds this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.BuildServer">
      <summary>Gets the server or computer that is hosting the build definition.</summary>
      <returns>The server that owns the build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.ContinuousIntegrationQuietPeriod">
      <summary>Gets or sets the time (in minutes) of the quiet period that is associated with Batch type continuous integration builds.</summary>
      <returns>Returns an int that contains the offset in minutes.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.ContinuousIntegrationType">
      <summary>Gets or sets the continuous integration type of the build definition. </summary>
      <returns>The continuous integration type of this build definition.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.CopyFrom(Microsoft.TeamFoundation.Build.Client.IBuildDefinition)">
      <summary>Updates the current build definition instance using the property values in the provided build definition.</summary>
      <param name="buildDefinition">The build definition from which properties should be copied</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.CreateBuildRequest">
      <summary>Creates a build request from the build definition that has values for <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildAgent" /> and drop location set to the default build agent and default drop location.</summary>
      <returns>Returns an <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildRequest" />, the new build request, that can be used to queue a build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.CreateManualBuild(System.String)">
      <summary>Creates a build detail record in the Team Foundation Server build database. Build information and other changes can be made to the returned <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDetail" /> object.</summary>
      <returns>The new IBuildDetail object that now is in the database.</returns>
      <param name="buildNumber">Build number for the new build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.CreateManualBuild(System.String,System.String)">
      <summary>Creates a build detail record in the Team Foundation Server build database. Build information and other changes can be made to the returned <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDetail" /> object.</summary>
      <returns>The new IBuildDetail object that now is in the database.</returns>
      <param name="buildNumber">Build number for the new build.</param>
      <param name="dropLocation">Location of the binary files created by the manual build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.CreateManualBuild(System.String,System.String,Microsoft.TeamFoundation.Build.Client.BuildStatus,Microsoft.TeamFoundation.Build.Client.IBuildController,System.String)">
      <summary>Creates a build detail record in the Team Foundation Server build database.</summary>
      <returns>The new IBuildDetail object that now is in the database.</returns>
      <param name="buildNumber">Build number to assign to the new build.</param>
      <param name="dropLocation">Location of the binary files that are created by the manual build.</param>
      <param name="buildStatus">The status of the build to set. </param>
      <param name="controller">The build controller that is used to create the build.</param>
      <param name="requestedFor">The user who requested the build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.CreateSpec">
      <summary>Creates a new build specification for the build definition.</summary>
      <returns>The new build definition specification.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.DateCreated">
      <summary>The date and time at which this build definition was created.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.DefaultDropLocation">
      <summary>Gets or sets the default drop location for builds generated by the build definition.</summary>
      <returns>The default location to drop the output of builds that are generated by the definition.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Delete">
      <summary>Deletes the build definition and all its builds from the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Description">
      <summary>Gets or sets the description for the build definition.</summary>
      <returns>The description of this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Enabled">
      <summary>Gets or sets the enabled status of the build definition.</summary>
      <returns>True if this build definition is enabled; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Id">
      <summary>Gets the ID of this build definition.</summary>
      <returns>The ID of this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.LastBuildUri">
      <summary>Gets the URI of the last build for the build definition, regardless of status.</summary>
      <returns>The URI of the last build that was completed for this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.LastGoodBuildLabel">
      <summary>Gets the name of the label for the last successful build for the build definition.</summary>
      <returns>The label name of the last build that was completed successfully for this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.LastGoodBuildUri">
      <summary>Gets the URI for the last successful build for the build definition.</summary>
      <returns>The URI of the last build that was completed successfully for this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Process">
      <summary>Gets or sets the build process template for this definition.</summary>
      <returns>The build process template for this definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.ProcessParameters">
      <summary>Gets an XML formatted string representing all the process parameters for this build.</summary>
      <returns>An XML formatted string representing all the process parameters for this build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.QueryBuilds">
      <summary>Gets all the builds for this build definition.</summary>
      <returns>The builds for this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.QueueStatus">
      <summary>The queue status of the build definition.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Refresh(System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Refresh this build definition by getting updated property values from the server.</summary>
      <param name="propertyNameFilters">The property names to obtain.</param>
      <param name="queryOptions">The query options.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.RetentionPolicyList">
      <summary>Gets a list of retention policies for this build definition.</summary>
      <returns>A list of retention policies for this build definition.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Save">
      <summary>Saves any changes that were made to the <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinition" /> object to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Schedules">
      <summary>Gets a list of schedules for the build definition.</summary>
      <returns>A list of schedules for this build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.TriggerType">
      <summary>Gets or sets the definition system trigger.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinition.Workspace">
      <summary>Gets the workspace template for the build definition.</summary>
      <returns>The workspace template for this build definition.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionQueryResult">
      <summary>This interface represents the result of a query of <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinition" /> objects.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionQueryResult.Definitions">
      <summary>Gets the array of build definitions for this query result.</summary>
      <returns>The array of build definitions for this query result.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionQueryResult.Failures">
      <summary>Gets the array of failures for this query results.</summary>
      <returns>The array of failures for this query result.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec">
      <summary>An interface for a build definition specification. Used to query for build definitions.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec.ContinuousIntegrationType">
      <summary>Gets or sets an optional filter to control the type of build definitions that are returned from the query.</summary>
      <returns>An optional filter to control the type of build definitions that are returned from the query.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec.FullPath">
      <summary>Gets the full path of the desired build definitions.</summary>
      <returns>The full path of the desired build definitions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec.Name">
      <summary>Gets or sets the name of the desired build definitions. Wildcard characters are supported.</summary>
      <returns>The name of the desired build definitions. Wildcard characters are supported.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec.Options">
      <summary>Gets or sets the query options that are used to determine whether supporting objects are returned from the query.</summary>
      <returns>The query options that are used to determine whether supporting objects are returned from the query.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec.PropertyNameFilters">
      <summary>The property names to be returned from the query/queries. A "*" will retrieve all property names, an empty array will retrieve none, and any other array will match types verbatim.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec.TeamProject">
      <summary>Gets the team project of the desired build definitions.</summary>
      <returns>The team project of the desired build definitions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec.TriggerType">
      <summary>An optional filter to control the type of build definitions returned from the query.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildDeletionResult">
      <summary>An interface for a build deletion result. It represents the results of deleting a build from Team Foundation Server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDeletionResult.DropLocationFailure">
      <summary>Gets the failure that is associated with drop location deletion, if a failure occurred.</summary>
      <returns>The failure that is associated with drop location deletion, if a failure occurred.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDeletionResult.LabelFailure">
      <summary>Gets the failure that is associated with label deletion, if a failure occurred.</summary>
      <returns>The failure that is associated with label deletion, if a failure occurred.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDeletionResult.Successful">
      <summary>Gets a flag that describes the success of the deletion.</summary>
      <returns>True if the deletion was successful. If false, other properties should be examined for the source of the failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDeletionResult.SymbolsFailure">
      <summary>Gets the failure that is associated with symbols deletion, if a failure occurred.</summary>
      <returns>The failure that is associated with symbols deletion, if a failure occurred.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDeletionResult.TestResultFailure">
      <summary>Gets the failure that is associated with test result deletion, if a failure occurred.</summary>
      <returns>The failure that is associated with test result deletion, if a failure occurred.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildDetail">
      <summary>Interface for a build on the server that is running Team Foundation Build. For more information about how to use this interface, see Manage Build Information and Control Verbosity or Team Foundation Build Activities.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.BuildController">
      <summary>Gets the build controller used to perform this build. May be null.</summary>
      <returns>The build controller used to perform this build. May be null.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.BuildControllerUri">
      <summary>Gets the URI of the build controller used to perform this build.</summary>
      <returns>The URI of the build controller used to perform this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.BuildDefinition">
      <summary>Gets the build definition that owns this build. May be null.</summary>
      <returns>The build definition that owns this build. May be null.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.BuildDefinitionUri">
      <summary>Gets the URI of the build definition used to perform this build.</summary>
      <returns>The URI of the build definition used to perform this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.BuildFinished">
      <summary>Gets a flag indicating whether the build has finished.</summary>
      <returns>True if the build has finished. False otherwise.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.BuildNumber">
      <summary>Gets or sets the number for this build.</summary>
      <returns>The build number of this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.BuildServer">
      <summary>Gets the server that owns this build.</summary>
      <returns>The server that owns this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.CompilationStatus">
      <summary>Gets or sets the status of the compilation phase of this build.</summary>
      <returns>The status of the compilation phase of this build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Connect">
      <summary>Starts polling by using the default interval of five seconds and no synchronization object.  When events are handled by a visual Windows Forms component, the other overload should be used for this method and that component should be passed in as the synchronizingObject so that the event handlers are called on the same thread on which the component was created.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Connect(System.Int32,System.ComponentModel.ISynchronizeInvoke)">
      <summary>Starts polling by using the specified interval and ISynchronizeInvoke object. When the StatusChanging, StatusChanged, or PollingCompleted events are handled by a visual Windows Forms component, that component should be passed in as the synchronizingObject so that the event handlers are called on the same thread on which the component was created.</summary>
      <param name="pollingInterval">The polling interval, in milliseconds.</param>
      <param name="synchronizingObject">The object that is used to synchronize polling events. If null, events will be fired on a thread pool thread.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Connect(System.Int32,System.Int32,System.ComponentModel.ISynchronizeInvoke)">
      <summary>Starts polling, using the specified interval, time-out and ISynchronizeInvoke object.  When the StatusChanging, StatusChanged, or PollingCompleted events are handled by a visual Windows Forms component, that component should be passed in as the synchronizingObject so that the event handlers are called on the same thread on which the component was created.</summary>
      <param name="pollingInterval">The polling interval, in milliseconds.</param>
      <param name="timeout">The time-out, in milliseconds.</param>
      <param name="synchronizingObject">The object that is used to synchronize polling events. If null, events will be fired on a thread pool thread.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Delete">
      <summary>Deletes the build, and all associated data, from the server and drop location.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Delete(Microsoft.TeamFoundation.Build.Client.DeleteOptions)">
      <summary>Delete the build and only the specified information.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildDeletionResult" />.</returns>
      <param name="options">The parts of the build to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Disconnect">
      <summary>Stops polling the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.DropLocation">
      <summary>Gets or sets the location for the output of the build.</summary>
      <returns>The location for the output of the build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.DropLocationRoot">
      <summary>Gets the root drop location of the build.</summary>
      <returns>The root drop location of the build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.FinalizeStatus">
      <summary>Notifies the server that the build is finished.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.FinalizeStatus(Microsoft.TeamFoundation.Build.Client.BuildStatus)">
      <summary>Notifies the server that the build is complete and sets the status accordingly.</summary>
      <param name="status">The final status of the completed build.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.FinishTime">
      <summary>Gets the time that this build finished.</summary>
      <returns>The time that this build finished.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Information">
      <summary>Gets the collection of information nodes for this build.</summary>
      <returns>The collection of information nodes for this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.IsDeleted">
      <summary>Gets a flag describing whether the build has been deleted.</summary>
      <returns>True if the build was deleted. False if the build is not deleted.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.KeepForever">
      <summary>Gets or sets a flag describing whether the build participates in the retention policy of the build definition or to keep the build forever.</summary>
      <returns>True to keep the build forever. False to follow the retention policy specified in the build definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.LabelName">
      <summary>Gets or sets the name of the label created for the build.</summary>
      <returns>The name of the label created for the build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.LastChangedBy">
      <summary>Gets the last user to change this build.</summary>
      <returns>The last user to change this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.LastChangedByDisplayName">
      <summary>Gets the display name of the last user to change the build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.LastChangedOn">
      <summary>Gets the date and time of the last change to this build.</summary>
      <returns>The date and time of the last change to this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.LogLocation">
      <summary>Gets or sets the location of the log file for this build.</summary>
      <returns>The location of the log file for this build.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Build.Client.IBuildDetail.PollingCompleted">
      <summary>Raised when polling finishes.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.ProcessParameters">
      <summary>Gets an XML formatted string representing all the process parameters for this build.</summary>
      <returns>An XML formatted string representing all the process parameters for this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Quality">
      <summary>Gets or sets the quality of this build.</summary>
      <returns>The quality of this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Reason">
      <summary>Gets the reason the build exists. For more information about the use of this property, see Specify Build Triggers and Reasons</summary>
      <returns>The reason the build exists.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Refresh(System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Retrieves the latest build data from the server that has the specified query options and information types.</summary>
      <param name="informationTypes">The information types to retrieve.  Valid types include the members of Microsoft.TeamFoundation.Build.Common.InformationTypes, and "*".</param>
      <param name="queryOptions">The query options to use for the Refresh.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.RefreshAllDetails">
      <summary>Retrieves the latest build data from the server together with all details.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.RefreshMinimalDetails">
      <summary>Retrieves the latest build data from the server together with no details.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.RequestedBy">
      <summary>Gets the user who requested this build.</summary>
      <returns>The user who requested this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.RequestedFor">
      <summary>Gets the user for whom this build was requested.</summary>
      <returns>The user for whom this build was requested.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.RequestIds">
      <summary>The request Ids that started this build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.RequestIntermediateLogs">
      <summary>Requests the intermediate diagnostics logs of an in-progress build.</summary>
      <returns>The request identifier</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Requests">
      <summary>The requests that started this build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Save">
      <summary>Saves any changes that were made on the build to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.ShelvesetName">
      <summary>Gets the shelveset that was built.</summary>
      <returns>The shelveset that was built.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.SourceGetVersion">
      <summary>Gets or sets the version specification for which the sources were retrieved for this build.</summary>
      <returns>The version specification for which the sources were retrieved for this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.StartTime">
      <summary>Gets the time that this build actually started.</summary>
      <returns>The time that this build actually started.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Status">
      <summary>Gets or sets the overall status of this build.</summary>
      <returns>The overall status of this build.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Build.Client.IBuildDetail.StatusChanged">
      <summary>Raised when any change in the build is discovered on the server.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.Build.Client.IBuildDetail.StatusChanging">
      <summary>Raised when any change in the build is discovered on the server.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Stop">
      <summary>Stops the build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.TeamProject">
      <summary>Gets the team project that owns this build.</summary>
      <returns>The team project that owns this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.TestStatus">
      <summary>Gets or sets the status of the test phase of this build.</summary>
      <returns>The status of the test phase of this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Uri">
      <summary>Gets the URI of this build.</summary>
      <returns>The URI of this build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Wait">
      <summary>Blocks additional builds until this build is finished.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Wait(System.TimeSpan,System.TimeSpan)">
      <summary>Blocks the calling thread until the build finishes or the time-out expires.</summary>
      <returns>True if the build finished in the specified time-out, false otherwise</returns>
      <param name="pollingInterval">The interval of time between server polling</param>
      <param name="timeout">The overall time-out of the blocking call</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildDetail.Wait(System.TimeSpan,System.TimeSpan,System.ComponentModel.ISynchronizeInvoke)">
      <summary>Blocks the calling thread until the build finishes or the time-out expires.</summary>
      <returns>True if the build finished in the specified time-out, false otherwise</returns>
      <param name="pollingInterval">The interval of time between server polling</param>
      <param name="timeout">The overall time-out of the blocking call</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec">
      <summary>Interface for a build detail specification. Used to query for builds on the server that is running Team Foundation Build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.BuildNumber">
      <summary>Gets or sets the number of the desired builds. Wildcard characters are supported.</summary>
      <returns>The number of the desired builds. Wildcard characters are supported.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.DefinitionSpec">
      <summary>Gets the build definition specification of the desired builds.</summary>
      <returns>The build definition specification of the desired builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.DefinitionUris">
      <summary>Gets the build definition uniform resource identifiers (URIs) of the desired builds.</summary>
      <returns>The build definition URIs of the desired builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.InformationTypes">
      <summary>Gets or sets the information types that will be returned from the query or queries.</summary>
      <returns>The information types that will be returned from the query or queries.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.MaxBuildsPerDefinition">
      <summary>Gets or sets the maximum number of builds to return per definition.</summary>
      <returns>The maximum number of builds to return per definition.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.MaxFinishTime">
      <summary>Gets or sets the end of the finish time range of the specified builds.</summary>
      <returns>The end of the finish time range of the specified builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.MinChangedTime">
      <summary>Gets or sets the earliest revision date and time of the desired builds.</summary>
      <returns>The earliest revision date and time of the desired builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.MinFinishTime">
      <summary>Gets or sets the start value of the finish time range of the specified builds.</summary>
      <returns>The start value of the finish time range of the specified builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.Quality">
      <summary>Gets or sets the quality of the desired builds.</summary>
      <returns>The quality of the desired builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.QueryDeletedOption">
      <summary>Gets or sets options to query deleted builds.</summary>
      <returns>The options to query deleted builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.QueryOptions">
      <summary>Gets or sets the additional data that will be returned from the queries.</summary>
      <returns>The additional data that will be returned from the queries.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.QueryOrder">
      <summary>Gets or sets the ordering scheme to use when the user sets a maximum number of builds.</summary>
      <returns>The ordering scheme to use when the user sets a maximum number of builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.Reason">
      <summary>Gets or sets the reason for the desired builds.</summary>
      <returns>The reason for the desired builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.RequestedFor">
      <summary>Gets or sets the user for whom the build was requested.</summary>
      <returns>The user for whom the build was requested.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec.Status">
      <summary>Gets or sets the statuses of the desired builds.</summary>
      <returns>The statuses of the desired builds.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildError">
      <summary>Interface for a BuildError type of IBuildInformationNode. To obtain an IBuildError, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildError.ErrorType">
      <summary>Gets or sets the type of the error.</summary>
      <returns>The type of the error.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase">
      <summary>Interface for BuildError and BuildWarning types of IBuildInformationNodes. To obtain an IBuildError or IBuildWarning, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.Code">
      <summary>Gets or sets the error or warning code.</summary>
      <returns>The error or warning code.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.EndLineNumber">
      <summary>Gets or sets the ending line number of the error or warning.</summary>
      <returns>The ending line number of the error or warning.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.File">
      <summary>Gets or sets the file of the error or warning.</summary>
      <returns>The file of the error or warning.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.LineNumber">
      <summary>Gets or sets the starting line number of the error or warning.</summary>
      <returns>The starting line number of the error or warning.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.Message">
      <summary>Gets or sets the message of the error or warning.</summary>
      <returns>The message of the error or warning.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.Save">
      <summary>Saves the build error to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.ServerPath">
      <summary>Gets or sets the server path of the file, if it can be determined.</summary>
      <returns>The server path of the file, if it can be determined.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildErrorBase.Timestamp">
      <summary>Gets or sets the time at which the error or warning occurred.</summary>
      <returns>The time at which the error or warning occurred.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildGroupItem">
      <summary>Interface for a build group item on the server that is running Team Foundation Build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildGroupItem.FullPath">
      <summary>Gets the full path of this build group item.</summary>
      <returns>The full path of this build group item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildGroupItem.Name">
      <summary>Gets or sets the name of this build group item.</summary>
      <returns>The name of this build group item.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildGroupItem.Refresh">
      <summary>Refreshes this build group item by getting current property values from the build server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildGroupItem.TeamProject">
      <summary>Gets the team project that owns this build group item.</summary>
      <returns>The team project that owns this build group item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildGroupItem.Uri">
      <summary>Gets the uniform resource identifier (URI) of this build group item.</summary>
      <returns>The URI of this build group item.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildInformation">
      <summary>Interface for a collection of information nodes about a build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.CreateNode">
      <summary>Adds an information node to this collection.</summary>
      <returns>The new information node.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.Delete">
      <summary>Deletes the collection of information nodes from the server.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.GetNode(System.Int32)">
      <summary>Gets the information node in this collection that has the specified ID.</summary>
      <returns>The node in this collection that has the specified ID, or null if no node was found.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.GetNodesByType(System.String)">
      <summary>Gets the information nodes in this collection of the specified type.This method is nonrecursive.</summary>
      <returns>The list of nodes in this collection of the specified type.</returns>
      <param name="type">The type of nodes to return.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.GetNodesByType(System.String,System.Boolean)">
      <summary>Gets the information nodes in this collection of the specified type that have the specified recursion type.</summary>
      <returns>The list of nodes in this collection of the specified type.</returns>
      <param name="type">The type of nodes to return.</param>
      <param name="recursive">True to recurse through the nodes; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.GetNodesByTypes(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Gets the information nodes in this collection of the specified types. This method is nonrecursive.</summary>
      <returns>The list of nodes in this collection of the specified types.</returns>
      <param name="types">The enumerable collection of types of nodes to return.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.GetNodesByTypes(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>Gets the information nodes in this collection of the specified types that have the specified recursion type.</summary>
      <returns>The list of nodes in this collection of the specified types.</returns>
      <param name="types">The enumerable collection of types of nodes to return.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.GetSortedNodes(System.Collections.Generic.IComparer{Microsoft.TeamFoundation.Build.Client.IBuildInformationNode})">
      <summary>Gets a sorted list of the information nodes and all subtrees in this collection.</summary>
      <returns>A sorted list of the information nodes and all subtrees in this collection.</returns>
      <param name="comparer">The comparison that is used to sort nodes at the same level in the hierarchy.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.GetSortedNodesByType(System.String,System.Collections.Generic.IComparer{Microsoft.TeamFoundation.Build.Client.IBuildInformationNode})">
      <summary>Gets a sorted list of the information nodes and all subtrees of the specified type in this collection. This method is recursive.</summary>
      <returns>A sorted list of the information nodes and all subtrees of the specified type in this collection.</returns>
      <param name="type">The type of nodes to return.</param>
      <param name="comparer">The comparison that is used to sort nodes at the same level in the hierarchy.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.GetSortedNodesByTypes(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IComparer{Microsoft.TeamFoundation.Build.Client.IBuildInformationNode})">
      <summary>Gets a sorted list of the information nodes and all subtrees of the specified types in this collection. This method is recursive.</summary>
      <returns>A sorted list of the information nodes and all subtrees of the specified types in this collection.</returns>
      <param name="types">The types of nodes to return.</param>
      <param name="comparer">The comparison that is used to sort nodes at the same level in the hierarchy.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildInformation.Nodes">
      <summary>Gets the information nodes in this collection.</summary>
      <returns>The information nodes in this collection.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformation.Save">
      <summary>Saves any changes to the collection of information nodes and all subtrees to the server.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode">
      <summary>Interface for a single piece of hierarchical information about a build. For more information about the use of this interface, see Team Foundation Build Activities.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.Children">
      <summary>Gets the child nodes of this information node.</summary>
      <returns>The child nodes of this information node.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.Delete">
      <summary>Deletes this information node.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.Fields">
      <summary>Gets the custom name-value pairs that are associated with this information node.</summary>
      <returns>The custom name-value pairs that are associated with this information node.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.Id">
      <summary>Gets the ID of this information node.</summary>
      <returns>The ID of this information node.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.LastModifiedBy">
      <summary>Gets the user who most recently modified this information node.</summary>
      <returns>The user who most recently modified this information node.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.LastModifiedDate">
      <summary>Gets the date when this information node was most recently modified.</summary>
      <returns>The date when this information node was most recently modified.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.Parent">
      <summary>Gets the parent of this information node.</summary>
      <returns>The parent of this information node.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.Save">
      <summary>Saves any changes to this information node and its child nodes.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode.Type">
      <summary>Gets or sets the type of this information node.</summary>
      <returns>The type of this information node.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildMessage">
      <summary>Interface for the BuildMessage type of IBuildInformationNode. To obtain an IBuildMessage, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildMessage.Importance">
      <summary>Gets or sets the importance of the message, which determines the verbosity level at which the message is logged.</summary>
      <returns>The importance of the message, which determines the verbosity level at which the message is logged.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildMessage.Message">
      <summary>Gets or sets the display text of this build message.</summary>
      <returns>The display text of this build message.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildMessage.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildMessage.Save">
      <summary>Saves the build message to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildMessage.Timestamp">
      <summary>Gets or sets the time when the message was logged.</summary>
      <returns>The time when the message was logged.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode">
      <summary>Interface for a BuildProjectNode type of IBuildInformationNode. To obtain an IBuildProjectNode, use the InformationNodeConverters class.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.AddBuildProjectNode">
      <summary>Adds a child project node to this project node.</summary>
      <returns>The added project node.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.Children">
      <summary>Gets the project node child nodes of this project node.</summary>
      <returns>The project node child nodes of this project node.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.CompilationErrors">
      <summary>Gets or sets the number of compilation errors that were encountered for this project.</summary>
      <returns>The number of compilation errors that were encountered for this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.CompilationWarnings">
      <summary>Gets or sets the number of compilation warnings that were encountered for this project.</summary>
      <returns>The number of compilation warnings that were encountered for this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.FinishTime">
      <summary>Gets or sets the time when the invocation of the project was completed.</summary>
      <returns>The time when the invocation of the project was completed.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.Flavor">
      <summary>Gets or sets the flavor for which this project was built.</summary>
      <returns>The flavor for which this project was built.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.GetErrors(System.String)">
      <summary>Gets all the errors for this project and all its child nodes.</summary>
      <returns>The errors.</returns>
      <param name="errorType">The type of errors to be retrieved (typically values from ErrorWarningTypes).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.GetWarnings(System.String)">
      <summary>Gets all the warnings for this project and all its child nodes.</summary>
      <returns>The warnings.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.LocalPath">
      <summary>Gets or sets the local path of this project.</summary>
      <returns>The local path of this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.LogFile">
      <summary>Gets the log file for this project.</summary>
      <returns>The log file for this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.Parent">
      <summary>Gets the project node parent of this compilation summary. May be null.</summary>
      <returns>The project node parent of this compilation summary. May be null.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.Platform">
      <summary>Gets or sets the platform for which this project was built.</summary>
      <returns>The platform for which this project was built.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.Save">
      <summary>Saves the build project to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.ServerPath">
      <summary>Gets or sets the server path of this project.</summary>
      <returns>The server path of this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.StartTime">
      <summary>Gets or sets the time when the project was invoked.</summary>
      <returns>The time when the project was invoked.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.StaticAnalysisErrors">
      <summary>Gets or sets the number of static analysis errors that were encountered for this project.</summary>
      <returns>The number of static analysis errors that were encountered for this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.StaticAnalysisWarnings">
      <summary>Gets or sets the number of static analysis warnings that were encountered for this project.</summary>
      <returns>The number of static analysis warnings that were encountered for this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildProjectNode.TargetNames">
      <summary>Gets or sets the targets on which the project was invoked.</summary>
      <returns>The targets on which the project was invoked.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildQueryResult">
      <summary>The interface for the result of a query for IBuildDetails.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildQueryResult.Builds">
      <summary>Gets the array of builds for this query result.</summary>
      <returns>The array of builds for this query result.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildQueryResult.Failures">
      <summary>Gets the array of failures for this query result.</summary>
      <returns>The array of failures for this query result.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildRequest">
      <summary>Interface for a build request on the server that is running Team Foundation Build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.BatchId">
      <summary>The batch ID for the request.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.BuildController">
      <summary>Gets or sets the build controller that will start the requested build.</summary>
      <returns>The build controller that will start the requested build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.BuildControllerUri">
      <summary>Gets the uniform resource identifier (URI) of the build controller that will start the requested build.</summary>
      <returns>The URI of the build controller that will start the requested build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.BuildDefinition">
      <summary>Gets the build definition for which the requested build should be started.  Provides default values for BuildController and DropLocation.</summary>
      <returns>The build definition for which the requested build should be started.  Provides default values for BuildController and DropLocation.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.BuildDefinitionUri">
      <summary>Gets the URI of the build definition for which the requested build should be started.</summary>
      <returns>The URI of the build definition for which the requested build should be started.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.BuildServer">
      <summary>Gets the build server from which this build request was created.</summary>
      <returns>The build server from which this build request was created.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.CustomGetVersion">
      <summary>Gets or sets the custom get versionSpec. Valid only when GetOption is set to 'Custom'.</summary>
      <returns>The custom get versionSpec. Valid only when GetOption is set to 'Custom'.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.DropLocation">
      <summary>Gets or sets the location in which to drop the output of the requested build.</summary>
      <returns>The location in which to drop the output of the requested build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.GatedCheckInTicket">
      <summary>Gets or sets an optional ticket that is issued by the server for gated check-in submissions.</summary>
      <returns>An optional ticket that is issued by the server for gated check-in submissions.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.GetOption">
      <summary>Gets or sets the time for which sources should be retrieved for the requested build.  Valid settings are 'LatestOnQueue', 'LatestOnBuild', or 'Custom'.</summary>
      <returns>The time for which sources should be retrieved for the requested build.  Valid settings are 'LatestOnQueue', 'LatestOnBuild', or 'Custom'.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.MaxQueuePosition">
      <summary>Gets or sets the maximum position in the queue for the requested build at queue time. If the build request falls below this position in the queue, an exception will be thrown.</summary>
      <returns>The maximum position in the queue for the requested build at queue time.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.Postponed">
      <summary>Gets or sets a flag that describes whether the build request will be submitted together with a postponed status.</summary>
      <returns>True to set the build request together with a postponed status. False not to set a postponed status.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.Priority">
      <summary>Gets or sets the priority for the requested build.</summary>
      <returns>The priority for the requested build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.ProcessParameters">
      <summary>Gets an XML formatted string representing all the process parameters for this build.</summary>
      <returns>An XML formatted string representing all the process parameters for this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.Reason">
      <summary>Gets or sets the reason for the build request.</summary>
      <returns>The reason for the build request.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.RequestedFor">
      <summary>Gets or sets the user for whom the build is being requested.</summary>
      <returns>The user for whom the build is being requested.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildRequest.ShelvesetName">
      <summary>Gets or sets an optional shelveset to be built.</summary>
      <returns>An optional shelveset to be built.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildServer">
      <summary>Interface for the server that is running Team Foundation Build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.AddBuildQuality(System.String,System.String)">
      <summary>Adds the build quality to the specified team project.</summary>
      <param name="teamProject">The target team project.</param>
      <param name="quality">The quality to be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.AddBuildQuality(System.String,System.String[])">
      <summary>Adds the array of build qualities to the specified team project.</summary>
      <param name="teamProject">The target team project.</param>
      <param name="qualities">The array of qualities to add.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.BeginQueryBuildDefinitions(Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec[],System.AsyncCallback,System.Object)">
      <summary>Gets the build definition query results for a given array of build definition specifications.</summary>
      <returns>The asynchronous operation</returns>
      <param name="specs">The build definition specifications</param>
      <param name="callback">The System.AsyncCallback delegate that receives notification that the operation is finished.</param>
      <param name="state">An object, specified by the caller, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.BeginQueryBuildDefinitionsByUri(System.Uri[],System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to query build definitions by uniform resource identifier.</summary>
      <returns>The asynchronous operation</returns>
      <param name="uris">The build definition URIs</param>
      <param name="propertyNameFilters">An optional array of property names to query</param>
      <param name="options">The options to use when querying for data</param>
      <param name="callback">The System.AsyncCallback delegate that receives notification that the operation is finished.</param>
      <param name="state">An object, specified by the caller, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.BeginQueryBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec[],System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to query builds using an array of specifications.</summary>
      <returns>The asynchronous operation</returns>
      <param name="specs">The build query specifications</param>
      <param name="callback">The System.AsyncCallback delegate that receives notification that the operation is finished.</param>
      <param name="state">An object, specified by the caller, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.BeginQueryBuildsByUri(System.Uri[],System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions,Microsoft.TeamFoundation.Build.Client.QueryDeletedOption,System.AsyncCallback,System.Object)">
      <summary>Gets the builds that match the given URIs.</summary>
      <returns>The asynchronous operation</returns>
      <param name="informationTypes">The information types which should be retrieved. Valid types include "*", meaning all types, and the members of Microsoft.TeamFoundation.Build.Common.InformationTypes.</param>
      <param name="queryOptions">The query options.</param>
      <param name="queryDeletedOption">Specify whether to include deleted builds in the query.</param>
      <param name="callback">The System.AsyncCallback delegate that receives notification that the operation is finished.</param>
      <param name="state">An object, specified by the caller, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.BeginQueryQueuedBuilds(Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec[],System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to query the build queue.</summary>
      <returns>The asynchronous operation</returns>
      <param name="specs">The build queue query specifications</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServer.BuildServerVersion">
      <summary>Gets the version of the build server.</summary>
      <returns>The version of the build server.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CancelBuilds(Microsoft.TeamFoundation.Build.Client.IQueuedBuild[])">
      <summary>Cancels the provided queued builds if they are currently in the active or postponed states.</summary>
      <param name="builds">The builds to cancel.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CancelBuilds(System.Int32[])">
      <summary>Cancels queued builds with the provided IDs if they are currently in active or postponed states.</summary>
      <param name="ids">The IDs of queued builds to cancel.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildAgentSpec">
      <summary>Creates a new build agent specification that can be used to query build agents.</summary>
      <returns>The new build agent specification.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildAgentSpec(Microsoft.TeamFoundation.Build.Client.IBuildAgent)">
      <summary>Creates a new build agent specification that can be used to query build agents.</summary>
      <returns>Returns the new build agent specification.</returns>
      <param name="agent">The agent for which a specification is created.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildAgentSpec(System.String,System.String,System.Collections.Generic.List{System.String})">
      <summary>Creates a new build agent specification that can be used to query build agents.</summary>
      <returns>The new build agent specification.</returns>
      <param name="name">The agent name to query. Supports wildcard characters.</param>
      <param name="computer">The computer to query. Null or empty means "do not care".</param>
      <param name="tags">The tags to query. Null or empty means "do not care".</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildAgentSpec(System.String,System.String,System.String[],System.Collections.Generic.List{System.String})">
      <summary>Creates a new build agent specification that can be used to query build agents.</summary>
      <returns>The new build agent specification.</returns>
      <param name="name">The agent name to query - supports wildcard characters.</param>
      <param name="computer">The computer to query - null/empty means "do not care".</param>
      <param name="propertyNameFilters">Property name filters</param>
      <param name="tags">The tags to query - null/empty means "do not care".</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildControllerSpec">
      <summary>Creates a new build controller specification that can be used to query build controllers.</summary>
      <returns>The new build controller specification.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildControllerSpec(System.String,System.String)">
      <summary>Creates a new build controller specification that can be used to query build controllers.</summary>
      <returns>The new build controller specification.</returns>
      <param name="name">The controller name to query. Supports wildcard characters.</param>
      <param name="computer">The computer to query. Null or empty means "do not care".</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildControllerSpec(System.String,System.String,System.String[],System.Boolean)">
      <summary>Creates a new build controller specification that can be used to query build controllers.</summary>
      <returns>The new build controller specification.</returns>
      <param name="name">The controller name to query - supports wildcard characters.</param>
      <param name="computer">The computer to query - null/empty means "do not care".</param>
      <param name="propertyNameFilters">Property name filters</param>
      <param name="includeAgents">Include agents into the query or not</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDefinition(System.String)">
      <summary>Creates a new build definition owned by the build server.</summary>
      <returns>The new build definition.</returns>
      <param name="teamProject">The team project under which the build definition will be created.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDefinitionSpec(Microsoft.TeamFoundation.Build.Client.IBuildDefinition)">
      <summary>Creates a new build definition specification that can be used to query build definitions.</summary>
      <returns>The new build definition specification.</returns>
      <param name="definition">The definition for which a specification is created.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDefinitionSpec(System.String)">
      <summary>Creates a new build definition specification that can be used to query build definitions.</summary>
      <returns>The new build definition specification.</returns>
      <param name="teamProject">The team project for which definitions can be queried.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDefinitionSpec(System.String,System.String)">
      <summary>Creates a new build definition specification that can be used to query build definitions.</summary>
      <returns>The new build definition specification.</returns>
      <param name="teamProject">The team project for which definitions can be queried.</param>
      <param name="definitionName">The definition name to query. Wildcard characters are supported.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDefinitionSpec(System.String,System.String,System.String[])">
      <summary>Creates a new build definition specification that can be used to query build definitions.</summary>
      <returns>The new build definition specification.</returns>
      <param name="teamProject">The team project for which definitions can be queried.</param>
      <param name="definitionName">The definition name to query - supports wildcard characters.</param>
      <param name="propertyNameFilters">Property name filters</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDetailSpec(Microsoft.TeamFoundation.Build.Client.IBuildDefinition)">
      <summary>Creates a new build detail specification that can be used to query builds for a team project. </summary>
      <returns>The new build detail specification.</returns>
      <param name="definition">The build definition for which builds can be queried.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDetailSpec(Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec)">
      <summary>Creates a new build detail specification that can be used to query builds for a team project. </summary>
      <returns>The new build detail specification.</returns>
      <param name="definitionSpec">A build definition specification that includes the team project and definition for which builds can be queried.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDetailSpec(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Creates a new build detail specification that can be used to query builds for the specified definitions.</summary>
      <returns>The new build detail specification.</returns>
      <param name="definitionUris">The build definitions for which builds can be queried.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDetailSpec(System.String)">
      <summary>Creates a new build detail specification that can be used to query builds for a team project. </summary>
      <returns>The new build detail specification.</returns>
      <param name="teamProject">The team project for which builds can be queried.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildDetailSpec(System.String,System.String)">
      <summary>Creates a new build detail specification that can be used to query builds for a team project. </summary>
      <returns>The new build detail specification.</returns>
      <param name="teamProject">The team project for which builds can be queried.</param>
      <param name="definitionName">The build definition for which builds can be queried. Wildcard characters are supported.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildQueueSpec(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Creates a new build queue specification that can be used to query queued builds.</summary>
      <returns>A new build queue specification.</returns>
      <param name="definitionUris">The definitions to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildQueueSpec(System.String)">
      <summary>Creates a new build queue specification that can be used to query queued builds.</summary>
      <returns>The new build queue specification.</returns>
      <param name="teamProject">The team project for which queued builds can be queried.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildQueueSpec(System.String,System.String)">
      <summary>Creates a new build queue specification that can be used to query queued builds.</summary>
      <returns>The new build queue specification.</returns>
      <param name="teamProject">The team project for which queued builds can be queried.</param>
      <param name="definitionName">The definition name to query. Supports wildcard characters.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildRequest(System.Uri)">
      <summary>Creates a new build request for the specified build definition.</summary>
      <returns>A new build request.</returns>
      <param name="buildDefinitionUri">The build definition.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildRequest(System.Uri,System.Uri)">
      <summary>Creates a new build request for the specified build definition and controller.</summary>
      <returns>A new build request.</returns>
      <param name="buildDefinitionUri">The build definiton.</param>
      <param name="buildControllerUri">The build controller.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildServiceHost(System.String,System.String,System.String,System.Int32)">
      <summary>Creates a new service host with the specified name, and with a base URL that consists of the specified scheme, host, port, and the default path.</summary>
      <returns>The new service host.</returns>
      <param name="name">The name of the service host.</param>
      <param name="scheme">The scheme of the base URL of the service host.</param>
      <param name="host">The host of the base URL of the service host.</param>
      <param name="port">The port of the base URL of the service host.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateBuildServiceHost(System.String,System.Uri)">
      <summary>Creates a new service host with the specified name and base URL.</summary>
      <returns>The new service host.</returns>
      <param name="name">The name of the service host.</param>
      <param name="baseUrl">The base URL of the service host.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateProcessTemplate(System.String,System.String)">
      <summary>Creates a new build process template, that will be used by build definitions.</summary>
      <returns>The new build process template.</returns>
      <param name="teamProject">The Team Project for which a process template is created.</param>
      <param name="serverPath">The version control path of the build process XAML file.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateQueuedBuildsView">
      <summary>Creates a queued builds view.&lt;/</summary>
      <returns>The new view.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateQueuedBuildsView(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>Creates a queued builds view filtered by the provided definitions.</summary>
      <returns>The new view.</returns>
      <param name="definitionUris">The definitions whose queued builds can be included in the view.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateQueuedBuildsView(System.String)">
      <summary>Creates a queued builds view filtered by team project.</summary>
      <returns>The new view.</returns>
      <param name="teamProject">The team project whose queued builds can be included in the view.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.CreateTeamProjectComponents(System.Uri,System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.Client.BuildTeamProjectPermission})">
      <summary>Creates the build components that are needed to create a TeamProject.</summary>
      <param name="projectUri">The Uri for the project.</param>
      <param name="permissions">The permissions to set.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildAgents(Microsoft.TeamFoundation.Build.Client.IBuildAgent[])">
      <summary>Deletes build agents from the server.</summary>
      <param name="agents">The agents to be deleted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildAgents(System.Uri[])">
      <summary>Deletes build agents from the server.</summary>
      <param name="agentUris">The URIs of the agents to be deleted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildControllers(Microsoft.TeamFoundation.Build.Client.IBuildController[])">
      <summary>Deletes build controllers from the server.</summary>
      <param name="controllers">The controllers to be deleted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildControllers(System.Uri[])">
      <summary>Deletes build controllers from the server.</summary>
      <param name="controllerUris">The URIs of the controllers to be deleted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildDefinitions(Microsoft.TeamFoundation.Build.Client.IBuildDefinition[])">
      <summary>Deletes build definitions from the server.</summary>
      <param name="definitions">The definitions to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildDefinitions(System.Uri[])">
      <summary>Deletes build definitions from the server.</summary>
      <param name="definitionUris">The URIs of the definitions to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildQuality(System.String,System.String)">
      <summary>Deletes the specified build quality from the target team project.</summary>
      <param name="teamProject">The target team project.</param>
      <param name="quality">The quality to remove.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildQuality(System.String,System.String[])">
      <summary>Deletes the specified array of build qualities from the target team project. </summary>
      <param name="teamProject">The target team project.</param>
      <param name="qualities">The array of qualities to remove.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDetail[])">
      <summary>Deletes builds from the server. All parts of the build are deleted.</summary>
      <returns>The build deletion result.</returns>
      <param name="builds">The builds to be deleted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDetail[],Microsoft.TeamFoundation.Build.Client.DeleteOptions)">
      <summary>Deletes builds from the server.</summary>
      <returns>The build deletion result.</returns>
      <param name="builds">The builds to be deleted.</param>
      <param name="options">The parts of the build to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuilds(System.Uri[])">
      <summary>Deletes builds from the server. All parts of the build are deleted.</summary>
      <returns>The build deletion result.</returns>
      <param name="buildUris">The URIs of the builds to be deleted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuilds(System.Uri[],Microsoft.TeamFoundation.Build.Client.DeleteOptions)">
      <summary>Deletes builds from the server.</summary>
      <returns>The build deletion result.</returns>
      <param name="buildUris">The URIs of the builds to delete.</param>
      <param name="options">The parts of the build to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteBuildServiceHost(System.Uri)">
      <summary>Deletes the service host and all associated services from the server.</summary>
      <param name="serviceHostUri">The URI of the service host to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DeleteProcessTemplates(Microsoft.TeamFoundation.Build.Client.IProcessTemplate[])">
      <summary>Deletes the build process templates from the server.</summary>
      <param name="processTemplates">The build process templates to be deleted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DestroyBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDetail[])">
      <summary>Destroys builds from the server.</summary>
      <param name="builds">The builds to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.DestroyBuilds(System.Uri[])">
      <summary>Destroys builds from the server.</summary>
      <param name="buildUris">The URIs of the builds to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.EndQueryBuildDefinitions(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to query build definitions.</summary>
      <returns>The build definition query results for the given specifications</returns>
      <param name="result">The asynchronous operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.EndQueryBuildDefinitionsByUri(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to query build definitions.</summary>
      <returns>The matching build definitions. For unmatched URIs, the corresonding indices will be null</returns>
      <param name="result">The asynchronous operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.EndQueryBuilds(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to query builds.</summary>
      <returns>The build query results for the given specifications</returns>
      <param name="result">The asynchronous operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.EndQueryBuildsByUri(System.IAsyncResult)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.EndQueryQueuedBuilds(System.IAsyncResult)">
      <summary>Ends an asynchronous operation to query the build queue.</summary>
      <returns>The build queue query results for the given specifications</returns>
      <param name="result">The asynchronous operation</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetAffectedBuildDefinitions(System.String[])">
      <summary>Gets an array of all build definitions affected by the specified Version Control server paths.</summary>
      <returns>An array of build definitions.</returns>
      <param name="serverItems">An array of Version Control server paths.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetAffectedBuildDefinitions(System.String[],Microsoft.TeamFoundation.Build.Client.ContinuousIntegrationType)">
      <summary>Gets an array of all build definitions affected by the specified Version Control server paths and are configured to have a trigger supplied in the filter.</summary>
      <returns>An array of build definitions.</returns>
      <param name="serverItems">An array of Version Control server paths.</param>
      <param name="continuousIntegrationType">The type of triggers to query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetAffectedBuildDefinitions(System.String[],Microsoft.TeamFoundation.Build.Client.DefinitionTriggerType)">
      <summary>Gets a list of all build definitions which are affected by the provided TFS Version Control server paths and are configured to have a trigger supplied in the filter.</summary>
      <returns>An array of build definitions</returns>
      <param name="serverItems">An array of TFS Version Control server paths</param>
      <param name="triggerType">The type of trigger(s) which should be queried</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetAllBuildDetails(System.Uri)">
      <summary>Gets a single build with all details.</summary>
      <returns>The build with the specified URI, with all details.</returns>
      <param name="buildUri">The URI of the build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuild(Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec,System.String,System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets a single build.</summary>
      <returns>Returns the build with the given build definition path and number.</returns>
      <param name="buildDefinitionSpec">The specification of the build definition that owns the build.</param>
      <param name="buildNumber">The number of the build.</param>
      <param name="informationTypes">The information type that should be retrieved.</param>
      <param name="queryOptions">The query options.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuild(System.Uri)">
      <summary>Gets a single build. </summary>
      <returns>Returns the build with the given URI.</returns>
      <param name="buildUri">The URI of the build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuild(System.Uri,System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets a single build.</summary>
      <returns>Returns the build with the given URI.</returns>
      <param name="buildUri">The URI of the build.</param>
      <param name="informationTypes">The information types that should be retrieved.</param>
      <param name="queryOptions">The query options.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuild(System.Uri,System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions,Microsoft.TeamFoundation.Build.Client.QueryDeletedOption)">
      <summary>Gets a single build by Uri.</summary>
      <returns>The build with the given Uri.</returns>
      <param name="buildUri">The Uri of the build to obtain.</param>
      <param name="informationTypes">The information types which should be retrieved.</param>
      <param name="queryOptions">The query options.</param>
      <param name="queryDeletedOption">The deleted options.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildAgent(System.Uri)">
      <summary>Gets a single build agent.</summary>
      <returns>Returns the build agent with the given URI.</returns>
      <param name="buildAgentUri">The URI of the build agent.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildAgent(System.Uri,System.String[])">
      <summary>Gets a single build agent.</summary>
      <returns>The build agent with the given URI.</returns>
      <param name="buildAgentUri">The URI of the build agent.</param>
      <param name="propertyNameFilters">The property names to obtain.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildController(System.String)">
      <summary>Retrieves a single build controller using the specified display name. A wildcard character may be specified, but if more than one controller is matched than an exception is thrown.</summary>
      <returns>The discovered build controller</returns>
      <param name="name">The display name of the build controller (wildcard characters allowed)</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildController(System.Uri,System.Boolean)">
      <summary>Gets a single build controller.</summary>
      <returns>The build controller with the given URI.</returns>
      <param name="buildControllerUri">The URI of the build controller.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildController(System.Uri,System.String[],System.Boolean)">
      <summary>Gets a single build controller.</summary>
      <returns>The build controller with the given URI.</returns>
      <param name="buildControllerUri">The URI of the build controller.</param>
      <param name="propertyNameFilters">The property names to obtain.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildDefinition(System.String,System.String)">
      <summary>Gets a single build definition.</summary>
      <returns>Returns the build definition with the given name in the given team project.</returns>
      <param name="teamProject">The build definition with the given URI.</param>
      <param name="name">The name of the build definition.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildDefinition(System.String,System.String,Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets a single build definition using the specified options to control the amount of data retrieved.</summary>
      <returns>The build definition with the specified name in the specified team project.</returns>
      <param name="teamProject">The team project that owns the build definition.</param>
      <param name="name">The name of the build definition.</param>
      <param name="options">The options to use when querying for data.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildDefinition(System.Uri)">
      <summary>Gets a single build definition.</summary>
      <returns>The build definition with the given URI.</returns>
      <param name="buildDefinitionUri">The URI of the build definition.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildDefinition(System.Uri,Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets a single build definition using the specified options to control the amount of data retrieved.</summary>
      <returns>The build definition with the specified URI.</returns>
      <param name="buildDefinitionUri">The URI of the build definition.</param>
      <param name="options">The options to use when querying for data.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildDefinition(System.Uri,System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets a single build definition using the specified options to control the amount of data retrieved.</summary>
      <returns>The build definition with the given URI.</returns>
      <param name="buildDefinitionUri">The URI fo the build definition</param>
      <param name="propertyNameFilters">Property names to query</param>
      <param name="options">The options to use when querying for data</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildQualities(System.String)">
      <summary>Gets the array of defined build qualities for the target team project.</summary>
      <returns>The array of qualities currently defined.</returns>
      <param name="teamProject">The target team project.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildServiceHost(System.String)">
      <summary>Gets the service host that matches the specified name.</summary>
      <returns>The build service host for the specified name.</returns>
      <param name="serviceHostName">The name of the service host.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetBuildServiceHost(System.Uri)">
      <summary>Gets the service host that matches the specified URI.</summary>
      <returns>The build service host for the specified URI.</returns>
      <param name="buildServiceHostUri">The URI of the build service host.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetDisplayText(System.Object)">
      <summary>Gets the localized display text for enumeration values, or the ToString() value.</summary>
      <returns>The localized display text.</returns>
      <param name="value">The value for which display text is returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetDisplayTextValues(System.Type)">
      <summary>Gets an array of the localized display text values for an enumeration, or the ToString value.</summary>
      <returns>The array of localized display text values.</returns>
      <param name="enumType">The type of the enum.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetEnumValue(System.Type,System.String,System.Object)">
      <summary>Gets an enumeration value from corresponding localized display text.</summary>
      <returns>The corresponding enumeration value, or defaultValue if the conversion is unsuccessful.</returns>
      <param name="enumType">The type of the returned enumeration.</param>
      <param name="displayText">The localized display text.</param>
      <param name="defaultValue">The default value - returned if the display text cannot be converted.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetMinimalBuildDetails(System.Uri)">
      <summary>Gets a single build without agent, definition, or information nodes.</summary>
      <returns>The build with the specified URI.</returns>
      <param name="buildUri">The URI of the build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetQueuedBuild(System.Int32,Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets a single queued build for a specified ID.</summary>
      <returns>The queued build for the specified ID.</returns>
      <param name="queuedBuildId">The ID.</param>
      <param name="queryOptions">Options specifying the additional data to be returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetQueuedBuild(System.Int32[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets the queued builds for the specified IDs.</summary>
      <returns>The queued builds for the specified IDs.</returns>
      <param name="queuedBuildIds">The IDs.</param>
      <param name="queryOptions">Options specifying the additional data to be returned.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.GetScheduleDaysFromDaysOfWeek(System.DayOfWeek[])">
      <summary>Takes an array of DayOfWeek enumeration values and returns a ScheduleDays value that can be used to set ISchedule.DaysToBuild.</summary>
      <returns>The corresponding ScheduleDays value.</returns>
      <param name="weekdays">An array of DayOfWeek enumeration values.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServer.NoCICheckInComment">
      <summary>Gets the comment string that signals the continuous integration system to ignore a check-in. Any check-in with this string in its comment will not trigger a new build.</summary>
      <returns>The comment string that signals the continuous integration system to ignore a check-in. Any check-in with this string in its comment will not trigger a new build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildAgents(Microsoft.TeamFoundation.Build.Client.IBuildAgentSpec)">
      <summary>Gets a single build agent query result for a specified build agent specification.</summary>
      <returns>The build agent query result for the specified specification.</returns>
      <param name="buildAgentSpec">The build agent specification.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildAgents(Microsoft.TeamFoundation.Build.Client.IBuildAgentSpec[])">
      <summary>Gets the build agent query results for the specified build agent specifications.</summary>
      <returns>The build agent query results for the specified specifications.</returns>
      <param name="buildAgentSpecs">The build agent specifications.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildAgentsByUri(System.Uri[])">
      <summary>Gets the build agents that match the specified URIs.</summary>
      <returns>The build agents with the specified URIs.</returns>
      <param name="buildAgentUris">The URIs of the build agents.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildAgentsByUri(System.Uri[],System.String[])">
      <summary>Gets the build agents that match the given URIs.</summary>
      <returns>The build agents with the given URIs.</returns>
      <param name="buildAgentUris">The URIs of the build agents.</param>
      <param name="propertyNameFilters">The property names to obtain.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildControllers">
      <summary>Gets all build controllers and their associated agents.</summary>
      <returns>All of the build controllers.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildControllers(Microsoft.TeamFoundation.Build.Client.IBuildControllerSpec)">
      <summary>Gets a single build controller query result for a specified build controller specification.</summary>
      <returns>The build controller query result for the specified specification.</returns>
      <param name="buildControllerSpec">The build controller specification.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildControllers(Microsoft.TeamFoundation.Build.Client.IBuildControllerSpec[])">
      <summary>Gets the build controller query results for the specified build controller specifications.</summary>
      <returns>The build controller query results for the specified specifications.</returns>
      <param name="buildControllerSpecs">The build controller specifications.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildControllers(System.Boolean)">
      <summary>Gets all build controllers.</summary>
      <returns>All of the build controllers.</returns>
      <param name="includeAgents">True to include build agents; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildControllersByUri(System.Uri[],System.Boolean)">
      <summary>Gets the build controllers that match the specified URIs.</summary>
      <returns>The build controllers with the specified URIs.</returns>
      <param name="buildControllerUris">The URIs of the build controllers.</param>
      <param name="includeAgents">True to include build agents; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildControllersByUri(System.Uri[],System.String[],System.Boolean)">
      <summary>Gets the build controllers that match the given URIs.</summary>
      <returns>The build controllers with the given URIs.</returns>
      <param name="buildControllerUris">The URIs of the build controllers.</param>
      <param name="propertyNameFilters">The property names to obtain.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildDefinitions(Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec)">
      <summary>Gets a single build definition query result for a specified build definition specification.</summary>
      <returns>The build definition query result for the specified specification.</returns>
      <param name="buildDefinitionSpec">The build definition specification.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildDefinitions(Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec[])">
      <summary>Gets the build definition query results for a specified array of build definition specifications.</summary>
      <returns>The build definition query results for the specified specifications.</returns>
      <param name="buildDefinitionSpec">The build definition specifications.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildDefinitions(System.String)">
      <summary>Gets the build definitions for the specified team project.</summary>
      <returns>The build definitions for the specified team project.</returns>
      <param name="teamProject">The team project for which build definitions are retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildDefinitions(System.String,Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets the build definitions for the specified team project. The specified query options determine the amount of data that is retrieved in the query.</summary>
      <returns>The build definitions for the specified team project.</returns>
      <param name="teamProject">The team project for which build definitions are retrieved.</param>
      <param name="options">The options to use when querying for data.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildDefinitionsByUri(System.Uri[])">
      <summary>Gets the build definitions that match the specified URIs.</summary>
      <returns>The build definitions. For unmatched URIs, corresponding indices will be null.</returns>
      <param name="buildDefinitionUris">The build definition URIs.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildDefinitionsByUri(System.Uri[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets the build definitions that match the given URIs. The specified query options determine the amount of data that is retrieved in the query.</summary>
      <returns>The build definitions. For unmatched URIs, corresponding indices will be null.</returns>
      <param name="buildDefinitionUris">The build definition URIs.</param>
      <param name="options">The options to use when querying for data.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildDefinitionsByUri(System.Uri[],System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets the build definitions that match the given URIs. The specified query options determine the amount of data that is retrieved in the query.</summary>
      <returns>The build definitions. For unmatched URIs, corresponding indices will be null.</returns>
      <param name="buildDefinitionUris">The build definition URIs.</param>
      <param name="propertyNameFilters">Property names to query</param>
      <param name="options">The options to use when querying for data</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDefinition)">
      <summary>Gets all builds for a build definition.</summary>
      <returns>The builds for the specified build definition.</returns>
      <param name="definition">The build definition for which builds are retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDefinitionSpec)">
      <summary>Gets all builds for a build definition specification.</summary>
      <returns>The builds for the specified build definition specification.</returns>
      <param name="definitionSpec">The build definition specification for which builds are retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec)">
      <summary>Gets a single build query result for the specified build specification.</summary>
      <returns>The build query result for the specified specification.</returns>
      <param name="buildDetailSpec">The build specification.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDetailSpec[])">
      <summary>Gets the build query results for the specified list of build specifications.</summary>
      <returns>The build query results for the specified build specifications.</returns>
      <param name="buildDetailSpecs">The array of build specifications.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuilds(System.String)">
      <summary>Gets all builds for a team project.</summary>
      <returns>The builds for the specified team project.</returns>
      <param name="teamProject">The team project for which builds are retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuilds(System.String,System.String)">
      <summary>Gets all builds for a team project and definition.</summary>
      <returns>The builds for the specified team project and definition.</returns>
      <param name="teamProject">The team project for which builds are retrieved.</param>
      <param name="definitionName">The definition for which builds are retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildsByUri(System.Uri[],System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets the builds that match the specified URIs.</summary>
      <returns>The query options.</returns>
      <param name="buildUris">The build URIs.</param>
      <param name="informationTypes">The information types which should be retrieved.  Valid types include the members of Microsoft.TeamFoundation.Build.Common.InformationTypes. Wildcards supported.</param>
      <param name="queryOptions">The query options.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildsByUri(System.Uri[],System.String[],Microsoft.TeamFoundation.Build.Client.QueryOptions,Microsoft.TeamFoundation.Build.Client.QueryDeletedOption)">
      <summary>Gets the builds that match the specified URIs.</summary>
      <returns>The builds matching the specified URIs. For unmatched URIs, corresponding indices will be null.</returns>
      <param name="buildUris">The build URIs.</param>
      <param name="informationTypes">The information types which should be retrieved.  Valid types include the members of Microsoft.TeamFoundation.Build.Common.InformationTypes. Wildcards supported.</param>
      <param name="queryOptions">The query options.</param>
      <param name="queryDeletedOption">Specify whether to include deleted builds in the query.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildServiceHosts(System.String)">
      <summary>Gets an array of all build service hosts that are hosted on the specified computers.</summary>
      <returns>An array of build service hosts that are hosted by computers matching the input.</returns>
      <param name="serviceHostName">The name of the service host to match (may contain wildcard characters).</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryBuildServiceHostsByUri(System.Uri[])">
      <summary>Gets the build service hosts that match the specified URIs.</summary>
      <returns>The build service hosts for the specified URIs.</returns>
      <param name="buildServiceHostUris">The URIs of the build service hosts.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryProcessTemplates(System.String)">
      <summary>Gets all build process templates for a Team Project.</summary>
      <returns>An array of the build process templates.</returns>
      <param name="teamProject">The Team Project for which to query for process templates.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryProcessTemplates(System.String,Microsoft.TeamFoundation.Build.Client.ProcessTemplateType[])">
      <summary>Gets all build process templates for a Team Project of a specified type or types.</summary>
      <returns>An array of the build process templates.</returns>
      <param name="teamProject">The Team Project for which to query for process templates.</param>
      <param name="types">An array of ProcessTemplateType to query for.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryQueuedBuilds(Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec)">
      <summary>Gets a single build query result for a specified queued build specification.</summary>
      <returns>The queued build query result for the specified specification.</returns>
      <param name="spec">The queued build specification.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueryQueuedBuilds(Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec[])">
      <summary>Gets the build query results for a specified array of queued build specifications.</summary>
      <returns>The queued build query results for the specified specifications.</returns>
      <param name="specs">The queued build specifications.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueueBuild(Microsoft.TeamFoundation.Build.Client.IBuildDefinition)">
      <summary>Queues a build for the specified build definition with all default options.</summary>
      <returns>The queued build.</returns>
      <param name="definition">The definition for which a build is queued.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueueBuild(Microsoft.TeamFoundation.Build.Client.IBuildRequest)">
      <summary>Queues a build for the specified build request with default QueueOptions.</summary>
      <returns>The queued build.</returns>
      <param name="request">The parameters that are used in queuing the build, including the BuildDefinition and BuildAgent.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueueBuild(Microsoft.TeamFoundation.Build.Client.IBuildRequest,Microsoft.TeamFoundation.Build.Client.QueueOptions)">
      <summary>Queues a build for the specified build request.</summary>
      <returns>The queued build.</returns>
      <param name="request">The parameters that are used in queuing the build, including the BuildDefinition and BuildAgent.</param>
      <param name="options">The options for the queuing of the build, including whether to preview the queue position.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.QueueBuild(System.Collections.Generic.IEnumerable{Microsoft.TeamFoundation.Build.Client.IBuildRequest},Microsoft.TeamFoundation.Build.Client.QueueOptions)">
      <summary>Queues builds for the given build requests.</summary>
      <returns>The queued build.</returns>
      <param name="options">The options for the queuing of the build, including whether to preview the queue position.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.RetryQueuedBuilds(Microsoft.TeamFoundation.Build.Client.IQueuedBuild[])">
      <summary>Retries the specified builds and puts them into a batch together.</summary>
      <returns>The updated queued builds.</returns>
      <param name="queuedBuilds">The queued builds to be retried in a batch.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.RetryQueuedBuilds(Microsoft.TeamFoundation.Build.Client.IQueuedBuild[],System.Guid)">
      <summary>Retries the specified builds and puts them into a batch together.</summary>
      <returns>The updated queued builds.</returns>
      <param name="queuedBuilds">The queued builds to be retried in a batch.</param>
      <param name="batchId">The ID of the newly created batch.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.RetryQueuedBuilds(Microsoft.TeamFoundation.Build.Client.IQueuedBuild[],System.Guid,Microsoft.TeamFoundation.Build.Client.QueuedBuildRetryOption)">
      <summary>Retries the specified builds with the specific retry option and puts all specified builds into a batch together.</summary>
      <returns>The updated queued builds.</returns>
      <param name="queuedBuilds">The queued builds to be retried in a batch.</param>
      <param name="batchId">The ID of the newly created batch.</param>
      <param name="retryOption">Option to retry a completed or an in progress build</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.SaveBuildAgents(Microsoft.TeamFoundation.Build.Client.IBuildAgent[])">
      <summary>Saves any changes that were made to the build agents to the server.</summary>
      <returns>The saved build agents.</returns>
      <param name="agents">The agents to save.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.SaveBuildControllers(Microsoft.TeamFoundation.Build.Client.IBuildController[])">
      <summary>Saves any changes that were made to the build controllers to the server.</summary>
      <returns>The saved build controllers.</returns>
      <param name="controllers">The controllers to be saved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.SaveBuildDefinitions(Microsoft.TeamFoundation.Build.Client.IBuildDefinition[])">
      <summary>Saves any changes that were made to the build definitions to the server.</summary>
      <returns>The saved definitions.</returns>
      <param name="definitions">The definitions to save.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.SaveBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDetail[])">
      <summary>Saves any changes that were made on the builds to the server.</summary>
      <returns>The saved builds.</returns>
      <param name="builds">The builds to be saved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.SaveBuildServiceHost(Microsoft.TeamFoundation.Build.Client.IBuildServiceHost)">
      <summary>Saves the service host changes to the server.</summary>
      <param name="serviceHost">The service host to save.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.SaveProcessTemplates(Microsoft.TeamFoundation.Build.Client.IProcessTemplate[])">
      <summary>Saves any changes that were made to the build process templates to the server.</summary>
      <returns>The build process templates.</returns>
      <param name="processTemplates">The build process templates to be saved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.SaveQueuedBuilds(Microsoft.TeamFoundation.Build.Client.IQueuedBuild[])">
      <summary>Saves any changes that were made to the queued builds to the server.</summary>
      <returns>The saved queued builds.</returns>
      <param name="queuedBuilds">The queued builds to be saved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.StartQueuedBuildsNow(Microsoft.TeamFoundation.Build.Client.IQueuedBuild[])">
      <summary>Starts the provided queued builds if they are in a paused definition queue and have a status of Queued.</summary>
      <param name="builds">The builds which should be started</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.StartQueuedBuildsNow(System.Int32[])">
      <summary>Starts queued builds with the provided IDs if they are in a paused definition queue and have a status of Queued.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.StopBuilds(Microsoft.TeamFoundation.Build.Client.IBuildDetail[])">
      <summary>Stops the specified builds.</summary>
      <param name="builds">An array of builds to stop.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.StopBuilds(System.Uri[])">
      <summary>Stops all builds with the specified URIs.</summary>
      <param name="uris">An array of build URIs to stop.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServer.TeamProjectCollection">
      <summary>Gets the TeamProjectCollection object that created this IBuildServer.</summary>
      <returns>The TeamProjectCollection object that created this IBuildServer.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.TestConnectionForBuildAgent(Microsoft.TeamFoundation.Build.Client.IBuildAgent)">
      <summary>Instructs application-tier to test connection for build agent and updates the agent status messages.</summary>
      <param name="agent">BuildAgent to be tested.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.TestConnectionForBuildController(Microsoft.TeamFoundation.Build.Client.IBuildController)">
      <summary>Instructs application-tier to test connection for build controller and updates the controller status messages.</summary>
      <param name="controller">BuildController to be tested.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServer.TestConnectionsForBuildMachine(Microsoft.TeamFoundation.Build.Client.IBuildServiceHost)">
      <summary>Instructs application-tier to test connection for build computer resources and update resource status messages.</summary>
      <param name="host">BuildServiceHost to be tested.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost">
      <summary>Interface for a build service host in the server that is running Team Foundation Build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.AddBuildAgent(Microsoft.TeamFoundation.Build.Client.IBuildAgent)">
      <summary>Adds a build agent to the collection of agents that are associated with this service host.</summary>
      <param name="agent">The build agent to add.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.Agents">
      <summary>Gets a read-only collection of agents that is associated with this service host.</summary>
      <returns>A read-only collection of agents that is associated with this service host.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.BaseUrl">
      <summary>Gets or sets the base URL for this service host.</summary>
      <returns>The base URL for this service host.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.BuildServer">
      <summary>Gets the build server for this service host.</summary>
      <returns>The build server for this service host.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.Controller">
      <summary>Gets the build controller that is associated with this service host.</summary>
      <returns>The build controller that is associated with this service host.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.CreateBuildAgent(System.String,System.String)">
      <summary>Creates a build agent that is associated with the current service host and adds it to the collection of agents.</summary>
      <returns>The new IBuildAgent instance.</returns>
      <param name="name">The name of the build agent.</param>
      <param name="buildDirectory">The build directory to use when builds are run on the agent.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.CreateBuildAgent(System.String,System.String,Microsoft.TeamFoundation.Build.Client.IBuildController)">
      <summary>Creates a build agent that is associated with the current service host and adds it to the collection of agents.</summary>
      <returns>The new IBuildAgent instance.</returns>
      <param name="name">The name by which the agent should be referenced.</param>
      <param name="buildDirectory">The build directory to use when builds are run on the agent.</param>
      <param name="buildController">The build controller with which to associate the agent.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.CreateBuildController(System.String)">
      <summary>Creates a build controller that is associated with the current service host.</summary>
      <returns>The new IBuildController instance.</returns>
      <param name="name">The name to assign to the build controller.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.Delete">
      <summary>Deletes the service host together with all associated controllers and agents.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.DeleteBuildAgent(Microsoft.TeamFoundation.Build.Client.IBuildAgent)">
      <summary>Deletes the specified build agent from this service host.</summary>
      <returns>True if the build agent was successfully deleted; otherwise, false.</returns>
      <param name="agent">The build agent to delete.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.DeleteBuildController">
      <summary>Deletes the build controller that is associated with this service host.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.FindBuildAgent(System.String,System.String)">
      <summary>Gets the build agent that has the specified name and that is associated with the specified build controller.</summary>
      <returns>The build agent that has the specified name and that is associated with the specified build controller.</returns>
      <param name="controller">The build controller that is associated with the desired build agent.</param>
      <param name="name">The name of the desired build agent.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.IsVirtual">
      <summary>Gets a value indicating whether this service host is virtual. A virtual service host is dynamically allocated to computers on demand instead of statically at installation time.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.MessageQueueUrl">
      <summary>Gets the message queue address. This field is for system use only.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.Name">
      <summary>Gets or sets the name for this service host.</summary>
      <returns>The name for this service host.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.ReleaseOwnership">
      <summary>Releases ownership of the service host.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.RequireClientCertificates">
      <summary>Gets or sets a flag that describes whether the service host requires client certificates for incoming calls.</summary>
      <returns>True to require client certificates. False not to require client certificates.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.Save">
      <summary>Saves any changes that were made since the last time that the save method was called.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.SetBuildAgentStatus(Microsoft.TeamFoundation.Build.Client.IBuildAgent,Microsoft.TeamFoundation.Build.Client.AgentStatus,System.String)">
      <summary>Sets the build agent status.</summary>
      <param name="agent">The build agent to modify.</param>
      <param name="status">The status to apply to the build agent.</param>
      <param name="message">The display message about the build agent status.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.SetBuildController(Microsoft.TeamFoundation.Build.Client.IBuildController)">
      <summary>Switches the build controller that is associated with this service host.</summary>
      <param name="controller">The build controller to switch to.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.SetBuildControllerStatus(Microsoft.TeamFoundation.Build.Client.ControllerStatus,System.String)">
      <summary>Sets the build controller status.</summary>
      <param name="status">The status to apply to the build controller.</param>
      <param name="message">The display message about the build controller status.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.TakeOwnership">
      <summary>Takes ownership of the service host.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHost.Uri">
      <summary>Gets the uniform resource identifier (URI) for this service host.</summary>
      <returns>The URI for this service host.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildServiceHostQueryResult">
      <summary>The interface for the result of a query for IBuildServiceHosts.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHostQueryResult.Failures">
      <summary>Gets the query failures.</summary>
      <returns>The query failures.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildServiceHostQueryResult.ServiceHosts">
      <summary>Gets the service hosts that are returned from the query.</summary>
      <returns>The service hosts that are returned from the query.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildStep">
      <summary>Interface for a BuildStep type of IBuildInformationNode. To obtain an IBuildStep, use the InformationNodeConverters class.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildStep.Add(System.String,System.String,System.DateTime)">
      <summary>Adds a child build step to this build step.</summary>
      <returns>The child build step that is added to this build step.</returns>
      <param name="name">The name of the child build step .</param>
      <param name="message">The message of the child build step.</param>
      <param name="startTime">The start time of the child build step.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildStep.Add(System.String,System.String,System.DateTime,Microsoft.TeamFoundation.Build.Client.BuildStepStatus)">
      <summary>Adds a child build step to this build step.</summary>
      <returns>The added build step.</returns>
      <param name="name">The name of the child build step.</param>
      <param name="message">The message of the child build step.</param>
      <param name="time">The start or finish time of the child build step.</param>
      <param name="status">The status of the child build step.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildStep.FinishTime">
      <summary>Gets or sets the time that this build step finished.</summary>
      <returns>The time that this build step finished.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildStep.Id">
      <summary>Gets the ID of the underlying information node of this build step.</summary>
      <returns>The ID of the underlying information node of this build step.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildStep.Message">
      <summary>Gets or sets the display message of the build step.</summary>
      <returns>The display message of the build step.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildStep.Name">
      <summary>Gets or sets the name of this build step.</summary>
      <returns>The name of this build step.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildStep.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IBuildStep.Save">
      <summary>Saves the build step to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildStep.StartTime">
      <summary>Gets or sets the time that this build step started.</summary>
      <returns>The time that this build step started.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildStep.Status">
      <summary>Gets or sets the status of this build step.</summary>
      <returns>The status of this build step.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IBuildWarning">
      <summary>Interface for a BuildWarning type of IBuildInformationNode. To obtain an IBuildWarning, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IBuildWarning.WarningType">
      <summary>Gets or sets the type of the warning.</summary>
      <returns>The type of the warning.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IChangesetSummary">
      <summary>Interface for a ChangesetSummary type of IBuildInformationNode.  To obtain an IChangesetSummary, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IChangesetSummary.ChangesetId">
      <summary>Gets or sets the ID of this changeset.</summary>
      <returns>The ID of this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IChangesetSummary.ChangesetUri">
      <summary>Gets or sets the uniform resource identifier (URI) of this changeset.</summary>
      <returns>The URI of this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IChangesetSummary.CheckedInBy">
      <summary>Gets or sets the user who checked in this changeset.</summary>
      <returns>The user who checked in this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IChangesetSummary.Comment">
      <summary>Gets or sets the comment for this changeset.</summary>
      <returns>The comment for this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IChangesetSummary.Id">
      <summary>Gets the ID of the underyling information node of this changeset.</summary>
      <returns>The ID of the underyling information node of this changeset.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IChangesetSummary.Node">
      <summary>Gets the underlying information node of this changeset.</summary>
      <returns>The underlying information node of this changeset.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IChangesetSummary.Save">
      <summary>Saves the changeset summary to the server.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary">
      <summary>Interface for a CodeCoverageSummary type of IBuildInformationNode.  To obtain an ICodeCoverageSummary, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.BlocksCovered">
      <summary>Gets or sets the number of blocks that are covered by this code coverage run.</summary>
      <returns>The number of blocks that are covered by this code coverage run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.BlocksNotCovered">
      <summary>Gets or sets the number of blocks that are not covered by this code coverage run.</summary>
      <returns>The number of blocks that are not covered by this code coverage run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.Id">
      <summary>Gets the ID of the underlying IBuildInformationNode of this code coverage summary.</summary>
      <returns>The ID of the underlying IBuildInformationNode of this code coverage summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.IsBuildCoverageProcessing">
      <summary>Gets or sets a flag that describes whether this code coverage run is currently processing.</summary>
      <returns>True if this code coverage run is currently processing; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.LinesCovered">
      <summary>Gets or sets the number of lines that are covered by this code coverage run.</summary>
      <returns>The number of lines that are covered by this code coverage run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.LinesNotCovered">
      <summary>Gets or sets the number of lines that are not covered by this code coverage run.</summary>
      <returns>The number of lines that are not covered by this code coverage run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.LinesPartiallyCovered">
      <summary>Gets or sets the number of lines that are partially covered by this code coverage run.</summary>
      <returns>The number of lines that are partially covered by this code coverage run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.Name">
      <summary>Gets or sets the name of this code coverage run.</summary>
      <returns>The name of this code coverage run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.Node">
      <summary>Gets the underlying IBuildInformationNode of this code coverage run.</summary>
      <returns>The underlying IBuildInformationNode of this code coverage run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.RunId">
      <summary>Gets or sets the ID of this code coverage run.</summary>
      <returns>The ID of this code coverage run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.RunUser">
      <summary>Gets or sets the user who initiated this code coverage run.</summary>
      <returns>The user who initiated this code coverage run.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ICodeCoverageSummary.Save">
      <summary>Saves this code coverage summary to the server.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ICompilationSummary">
      <summary>Interface for a CompilationSummary type of IBuildInformationNode. To obtain an ICompilationSummary, use the InformationNodeConverters class.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.AddCompilationSummary">
      <summary>Adds a child compilation summary to this compilation summary.</summary>
      <returns>The added compilation summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.Children">
      <summary>Gets the child nodes of this compilation summary.</summary>
      <returns>The child nodes of this compilation summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.CompilationErrors">
      <summary>Gets or sets the number of compilation errors that were encountered for this project.</summary>
      <returns>The number of compilation errors that were encountered for this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.CompilationWarnings">
      <summary>Gets or sets the number of compilation warnings that were encountered for this project.</summary>
      <returns>The number of compilation warnings that were encountered for this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.Id">
      <summary>Gets the ID of the underlying IBuildInformationNode of the compilation summary.</summary>
      <returns>The ID of the underlying IBuildInformationNode of the compilation summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.Parent">
      <summary>Gets the compilation summary parent of this compilation summary. May be null if this node has no parent.</summary>
      <returns>The compilation summary parent of this compilation summary. May be null if this node has no parent.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.ProjectFile">
      <summary>Gets or sets the project whose compilation is summarized by this compilation summary.</summary>
      <returns>The project whose compilation is summarized by this compilation summary.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.Save">
      <summary>Saves the compilation summary to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.StaticAnalysisErrors">
      <summary>Gets or sets the number of static analysis errors that were encountered for this project.</summary>
      <returns>The number of static analysis errors that were encountered for this project.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICompilationSummary.StaticAnalysisWarnings">
      <summary>Gets or sets the number of static analysis warnings that were encountered for this project.</summary>
      <returns>The number of static analysis warnings that were encountered for this project.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary">
      <summary>Interface for a ConfigurationSummary type of IBuildInformationNode. To obtain an IConfigurationSummary, use the InformationNodeConverters class.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.AddCodeCoverageSummary">
      <summary>Adds a child code coverage summary to this configuration summary.</summary>
      <returns>The added code coverage summary.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.AddCompilationSummary">
      <summary>Adds a child compilation summary to this configuration summary.</summary>
      <returns>The added compilation summary.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.AddTestSummary">
      <summary>Adds a child test summary to this configuration summary.</summary>
      <returns>The added test summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.CodeCoverageSummaries">
      <summary>Gets the code coverage summaries that are associated with this configuration.</summary>
      <returns>The code coverage summaries that are associated with this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.CompilationSummaries">
      <summary>Gets the top-level compilation summaries that are associated with this configuration.</summary>
      <returns>The top-level compilation summaries that are associated with this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.Flavor">
      <summary>Gets or sets the flavor of this configuration.</summary>
      <returns>The flavor of this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.FullName">
      <summary>Gets the full name of this configuration. This ncludes platform and flavor.</summary>
      <returns>The full name of this configuration. This includes platform and flavor.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.GetTopLevelProjects">
      <summary>Gets the top-level projects for this configuration.</summary>
      <returns>The top-level IBuildProjectNode nodes for this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.Id">
      <summary>Gets the ID of the underlying IBuildInformationNode of this configuration summary.</summary>
      <returns>The ID of the underlying IBuildInformationNode of this configuration summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.LogFile">
      <summary>Gets or sets the full path of the errors/warnings log file for this configuration.</summary>
      <returns>The full path of the errors/warnings log file for this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.Platform">
      <summary>Gets or sets the platform of this configuration.</summary>
      <returns>The platform of this configuration.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.Save">
      <summary>Saves the configuration summary to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.TestSummaries">
      <summary>Gets the test summaries that are associated with this configuration.</summary>
      <returns>The test summaries that are associated with this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.TotalCompilationErrors">
      <summary>Gets the total number of compilation errors that were encountered for this configuration.</summary>
      <returns>The total number of compilation errors that were encountered for this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.TotalCompilationWarnings">
      <summary>Gets the total number of compilation warnings that were encountered for this configuration.</summary>
      <returns>The total number of compilation warnings that were encountered for this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.TotalStaticAnalysisErrors">
      <summary>Gets the total number of static analysis errors that were encountered for this configuration.</summary>
      <returns>The total number of static analysis errors that were encountered for this configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationSummary.TotalStaticAnalysisWarnings">
      <summary>Gets the total number of static analysis warnings that were encountered for this configuration.</summary>
      <returns>The total number of static analysis warnings that were encountered for this configuration.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IConfigurationToBuild">
      <summary>An interface for a configuration to build in TfsBuild.proj.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationToBuild.Flavor">
      <summary>Gets or sets the flavor of the configuration.</summary>
      <returns>The flavor of the configuration.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IConfigurationToBuild.Platform">
      <summary>Gets or sets the platform of the configuration.</summary>
      <returns>The platform of the configuration.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ICustomSummaryInformation">
      <summary>ICustomSummaryInformation is a helper interface for IBuildInformationNodes of type "CustomSummaryInformation". To obtain an ICustomSummaryInformation, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICustomSummaryInformation.Message">
      <summary>The message.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICustomSummaryInformation.Node">
      <summary>The underlying IBuildInformationNode.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Build.Client.IBuildInformationNode" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ICustomSummaryInformation.Save">
      <summary>Saves the custom summary information to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICustomSummaryInformation.SectionHeader">
      <summary>Gets or sets the Section header which is the string displayed at the top of the section</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICustomSummaryInformation.SectionName">
      <summary>Gets or sets the Section name which uniquely identifies the section</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ICustomSummaryInformation.SectionPriority">
      <summary>Gets or sets the Section priority which is used to determine the order of the sections</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IExternalLink">
      <summary>Interface for an ExternalLink type of IBuildInformationNode. To obtain an IExternalLink, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IExternalLink.DisplayText">
      <summary>Gets or sets the text to display for the external link.</summary>
      <returns>The text to display for the external link.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IExternalLink.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IExternalLink.Save">
      <summary>Saves the build project to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IExternalLink.Url">
      <summary>Gets or sets the external link uniform resource identifier (URI).</summary>
      <returns>The external link URI.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IFailure">
      <summary>Interface for a failure that occurred during a server call.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IFailure.Code">
      <summary>Gets the code that is associated with this failure.</summary>
      <returns>The code that is associated with this failure.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IFailure.Message">
      <summary>Gets the message that is associated with this failure.</summary>
      <returns>The message that is associated with this failure.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IMetadataFile">
      <summary>Interface for a MetadataFile item in TfsBuild.proj.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IMetadataFile.FilePath">
      <summary>Gets or sets the version control server path of the metadata file.</summary>
      <returns>The version control server path of the metadata file.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IMetadataFile.TestList">
      <summary>Gets or sets the semicolon-separated test lists in the file to run.</summary>
      <returns>The semicolon-separated test lists in the file to run.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InformationAddRequestCycleException">
      <summary>Exception that is caused by an error in an information add request cycle.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationAddRequestCycleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationAddRequestCycleException.#ctor(System.String)">
      <summary>Initializes a new InformationAddRequestCycleException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationAddRequestCycleException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InformationAddRequestCycleException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InformationChangeRequestException">
      <summary>Exception that is caused by an error in an information change request.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationChangeRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationChangeRequestException.#ctor(System.String)">
      <summary>Initializes a new InformationChangeRequestException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationChangeRequestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InformationChangeRequestException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InformationEditOptions">
      <summary>Describes options for information edit.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.InformationEditOptions.MergeFields">
      <summary>Merge fields.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.InformationEditOptions.ReplaceFields">
      <summary>Replace fields.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters">
      <summary>Provides methods to convert IBuildInformationNode objects to more specific types.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddActivityTracking(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.String)">
      <summary>Adds an activity tracking node to the specified build information object. Does not save to the server.</summary>
      <returns>The activity tracking node.</returns>
      <param name="buildInformation">The build information object to which the activity tracking node will be added.</param>
      <param name="activityType">The full type of the activity.</param>
      <param name="displayText">The display text of the activity.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddAgentScopeActivityTracking(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.String)">
      <summary>Adds an agent scope activity tracking node to a build information object. Does not save to the server.</summary>
      <returns>The agent scope activity tracking node.</returns>
      <param name="buildInformation">The build information object to which the activity tracking node will be added.</param>
      <param name="activityType">The full type of the activity.</param>
      <param name="displayText">The display text of the activity.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddAssociatedChangesets(Microsoft.TeamFoundation.Build.Client.IBuildDetail,Microsoft.TeamFoundation.VersionControl.Client.Changeset[])">
      <summary>Associates summaries of changesets with a build.</summary>
      <returns>The list of changeset summaries that are now associated with the specified build information.</returns>
      <param name="build">The build.</param>
      <param name="changesets">The array of changesets to be associated.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddAssociatedChangesets(Microsoft.TeamFoundation.Build.Client.IBuildInformation,Microsoft.TeamFoundation.VersionControl.Client.Changeset[])">
      <summary>Adds an array of changesets to the specified build information.  Saves the modified build information to the server.</summary>
      <returns>The list of changeset summaries that are now associated with the build information.</returns>
      <param name="buildInformation">The build information.</param>
      <param name="changesets">The array of changesets to add to the build information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddAssociatedWorkItems(Microsoft.TeamFoundation.Build.Client.IBuildDetail,Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem[])">
      <summary>Adds associated work item summaries to the specified build. Saves to the server.</summary>
      <returns>The added associated work item summaries.</returns>
      <param name="build">The build to which the work item summaries will be added.</param>
      <param name="workItems">The work items to be associated.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddAssociatedWorkItems(Microsoft.TeamFoundation.Build.Client.IBuildInformation,Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem[])">
      <summary>Adds associates summaries of work items the specified build information object. Does not save to the server.</summary>
      <returns>The associated work item summaries.</returns>
      <param name="buildInformation">The build information object to which the work item summaries will be added.</param>
      <param name="workItems">The work items to be associated.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildError(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.DateTime)">
      <summary>Adds an error to the specified build information object. Does not save to the server.</summary>
      <returns>The error node.</returns>
      <param name="buildInformation">The build information object to which the error will be added.</param>
      <param name="message">The error message.</param>
      <param name="timestamp">The time of the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildError(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
      <summary>Adds an error to the specified build information object. Does not save to the server.</summary>
      <returns>The error node.</returns>
      <param name="buildInformation">The build information object to which the error will be added.</param>
      <param name="file">The file in which the error occurred.</param>
      <param name="lineNumber">The line number on which the error began.</param>
      <param name="endLineNumber">The line number of which the error ended.</param>
      <param name="code">The error code.</param>
      <param name="message">The error message.</param>
      <param name="timestamp">The time of the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildError(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
      <summary>Adds an error to the specified build information object. Does not save to the server.</summary>
      <returns>The error node.</returns>
      <param name="buildInformation">The build information object to which the error will be added.</param>
      <param name="errorType">The type of the error.</param>
      <param name="file">The file in which the error occurred.</param>
      <param name="lineNumber">The line number on which the error began.</param>
      <param name="endLineNumber">The line number of which the error ended.</param>
      <param name="code">The error code.</param>
      <param name="message">The error message.</param>
      <param name="timestamp">The time of the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildError(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
      <summary>Adds an error to the specified build information object. Does not save to the server.</summary>
      <returns>The error node.</returns>
      <param name="buildInformation">The build information object to which the error will be added.</param>
      <param name="errorType">The type of the error.</param>
      <param name="file">The file in which the error occurred.</param>
      <param name="serverPath">The server path in version control for the file.</param>
      <param name="lineNumber">The line number on which the error began.</param>
      <param name="endLineNumber">The line number of which the error ended.</param>
      <param name="code">The error code.</param>
      <param name="message">The error message.</param>
      <param name="timestamp">The time of the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildMessage(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,Microsoft.TeamFoundation.Build.Client.BuildMessageImportance,System.DateTime)">
      <summary>Adds a message to the specified build. Does not save to the server.</summary>
      <returns>The message node.</returns>
      <param name="buildInformation">The build information to which the message will be added.</param>
      <param name="message">The message.</param>
      <param name="importance">The importance of the message.</param>
      <param name="timestamp">The time of the message.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildProjectNode(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.DateTime,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
      <summary>Adds a project to the specified build information object. Does not save to the server.</summary>
      <returns>The project node.</returns>
      <param name="buildInformation">The build information to which the message will be added.</param>
      <param name="finishTime">The time at which the project finished building.</param>
      <param name="flavor">The flavor (configuration) the project was built for.</param>
      <param name="localPath">The local path of the project file.</param>
      <param name="platform">The platform the project was built for.</param>
      <param name="serverPath">The server path of the project file.</param>
      <param name="startTime">The time at which the project was built.</param>
      <param name="targetNames">The targets for which the project was built.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildProjectNode(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.String,System.String,System.DateTime,System.String)">
      <summary>Adds a project to the specified build information. Does not save to the server.</summary>
      <returns>The project node.</returns>
      <param name="buildInformation">The build information to which the message will be added.</param>
      <param name="flavor">The flavor (configuration) the project was built for.</param>
      <param name="localPath">The local path of the project file.</param>
      <param name="platform">The platform the project was built for.</param>
      <param name="serverPath">The server path of the project file.</param>
      <param name="startTime">The time at which the project was built.</param>
      <param name="targetNames">The targets for which the project was built.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildStep(Microsoft.TeamFoundation.Build.Client.IBuildDetail,System.String,System.String)">
      <summary>Adds a top-level build step to the specified build with a start time of DateTime.Now. Saves to the server.</summary>
      <returns>The added build step instance.</returns>
      <param name="build">The build to which the build step will be added.</param>
      <param name="name">The name of the build step to be added.</param>
      <param name="message">The message of the build step to be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildStep(Microsoft.TeamFoundation.Build.Client.IBuildDetail,System.String,System.String,System.DateTime)">
      <summary>Adds a top-level build step to the specified build. Saves to the server.</summary>
      <returns>The added build step instance.</returns>
      <param name="build">The build to which the build step will be added.</param>
      <param name="name">The name of the build step to be added.</param>
      <param name="message">The message of the build step to be added.</param>
      <param name="startTime">The start time of the build step to be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildStep(Microsoft.TeamFoundation.Build.Client.IBuildDetail,System.String,System.String,System.DateTime,Microsoft.TeamFoundation.Build.Client.BuildStepStatus)">
      <summary>Adds a top-level build step to the specified build. Saves to the server.</summary>
      <returns>The added build step instance.</returns>
      <param name="build">The build to which the build step will be added.</param>
      <param name="name">The name of the build step to be added.</param>
      <param name="message">The message of the build step to be added.</param>
      <param name="time">The start and finish time of the build step to be added.</param>
      <param name="status">The status of the build step to be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildStep(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String)">
      <summary>Adds a top-level build step to the specified build information object that has a start time of DateTime.Now.  Does not save to the server.</summary>
      <returns>The added build step instance.</returns>
      <param name="buildInformation">The build information object to which the build step will be added.</param>
      <param name="name">The name of the build step to be added.</param>
      <param name="message">The message of the build step to be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildStep(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.DateTime)">
      <summary>Adds a top-level build step to the specified build information object. Does not save to the server.</summary>
      <returns>The added build step instance.</returns>
      <param name="buildInformation">The build information.</param>
      <param name="name">The name of the build step to be added.</param>
      <param name="message">The message of the build step to be added.</param>
      <param name="startTime">The start time of the build step to be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildStep(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.DateTime,Microsoft.TeamFoundation.Build.Client.BuildStepStatus)">
      <summary>Adds a top-level build step to the specified build information object. Does not save to the server.</summary>
      <returns>The added build step instance.</returns>
      <param name="buildInformation">The build to which the build step will be added.</param>
      <param name="name">The name of the build step to be added.</param>
      <param name="message">The message of the build step to be added.</param>
      <param name="time">The start and finish time of the build step to be added.</param>
      <param name="status">The status of the build step to be added.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildWarning(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.DateTime)">
      <summary>Adds a warning to the specified build information object. Does not save to the server.</summary>
      <returns>The added warning node.</returns>
      <param name="buildInformation">The build information to which the warning will be added.</param>
      <param name="message">The warning message.</param>
      <param name="timestamp">The time of the warning.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildWarning(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.Int32,System.Int32,System.String,System.String,System.DateTime)">
      <summary>Adds a warning to the specified build information object. Does not save to the server.</summary>
      <returns>The warning node.</returns>
      <param name="buildInformation">The build information to which the warning will be added.</param>
      <param name="file">The file in which the warning occurred.</param>
      <param name="lineNumber">The line number on which the warning began.</param>
      <param name="endLineNumber">The line number on which the warning ended.</param>
      <param name="code">The warning code.</param>
      <param name="message">The warning message.</param>
      <param name="timestamp">The time of the warning.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildWarning(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.String)">
      <summary>Adds a warning to the specified build information object. Does not save to the server.</summary>
      <returns>The warning node.</returns>
      <param name="buildInformation">The build information to which the warning will be added.</param>
      <param name="file">The file in which the warning occurred.</param>
      <param name="lineNumber">The line number on which the warning began.</param>
      <param name="endLineNumber">The line number on which the warning ended.</param>
      <param name="code">The warning code.</param>
      <param name="message">The warning message.</param>
      <param name="timestamp">The time of the warning.</param>
      <param name="warningType">The type of the warning.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddBuildWarning(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.String)">
      <summary>Adds a warning to the specified build information object. Does not save to the server.</summary>
      <returns>The warning node.</returns>
      <param name="buildInformation">The build information to which the warning will be added.</param>
      <param name="file">The file in which the warning occurred.</param>
      <param name="serverPath">The server path in version control for the file.</param>
      <param name="lineNumber">The line number on which the warning began.</param>
      <param name="endLineNumber">The line number on which the warning ended.</param>
      <param name="code">The warning code.</param>
      <param name="message">The warning message.</param>
      <param name="timestamp">The time of the warning.</param>
      <param name="warningType">The type of the warning.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddConfigurationSummary(Microsoft.TeamFoundation.Build.Client.IBuildDetail,System.String,System.String,System.String)">
      <summary>Adds a configuration summary to a build.</summary>
      <returns>Returns the added configuration summary.</returns>
      <param name="build">The build.</param>
      <param name="flavor">The configuration of the build. For example, "Debug" or "Release".</param>
      <param name="platform">The platform of the configuration. For example "Any CPU" or "x86".</param>
      <param name="logFile">The full path of the log file that contains the errors and warnings for this configuration.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddConfigurationSummary(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String)">
      <summary>Adds a configuration summary to the specified build information object. Does not save to the server.</summary>
      <returns>The added configuration summary.</returns>
      <param name="buildInformation">The build information object to which the configuration summary will be added.</param>
      <param name="flavor">The flavor of the configuration.</param>
      <param name="platform">The platform of the configuration.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddCustomSummaryInformation(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String,System.String,System.Int32)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddExternalLink(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.Uri)">
      <summary>Adds an external link to the specified build information object. Does not save to the server.</summary>
      <returns>The link node.</returns>
      <param name="buildInformation">The build information object to which the external link will be added.</param>
      <param name="displayText">The display text for the link.</param>
      <param name="url">The URL for the link.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddOpenedWorkItems(Microsoft.TeamFoundation.Build.Client.IBuildDetail,Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem[])">
      <summary>Adds associated opened work item summaries with the specified build. Saves to the server.</summary>
      <returns>The associated opened work item summaries.</returns>
      <param name="build">The build to which the opened work items will be added.</param>
      <param name="workItems">The opened work items to be associated with the build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.AddOpenedWorkItems(Microsoft.TeamFoundation.Build.Client.IBuildInformation,Microsoft.TeamFoundation.WorkItemTracking.Client.WorkItem[])">
      <summary>Adds associated open work item summaries with the specified build information object.  Does not save to the server.</summary>
      <returns>The associated opened work item summaries.</returns>
      <param name="buildInformation">The build information object to which the opened work items will be added.</param>
      <param name="workItems">The opened work items to be associated with the build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetActivityTracking(Microsoft.TeamFoundation.Build.Client.IBuildDetail,System.Int32)">
      <summary>Gets an activity tracking node from the specified build with the specified ID.</summary>
      <returns>The matched activity tracking node, or null if none was found.</returns>
      <param name="build">The build from which the activity tracking node will be retrieved.</param>
      <param name="nodeId">The ID of the activity tracking node.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetActivityTracking(Microsoft.TeamFoundation.Build.Client.IBuildDetail,System.String)">
      <summary>Gets an activity tracking node from the specified build with the specified instance ID.</summary>
      <returns>The matched activity tracking node, or null if none was found.</returns>
      <param name="build">The build from which the activity tracking nodes will be retrieved.</param>
      <param name="activityInstanceId">The activity instance ID of the activity tracking node.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetActivityTracking(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String)">
      <summary>Gets an activity tracking node from the specified build information object that has the specified instance ID.</summary>
      <returns>The matched activity tracking node, or null if none was found.</returns>
      <param name="buildInformation">The build information object from which the activity tracking nodes will be retrieved.</param>
      <param name="activityInstanceId">The context ID of the activity tracking node.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetActivityTrackingNodes(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets the activity tracking nodes from the specified build.</summary>
      <returns>The activity tracking nodes.</returns>
      <param name="build">The build from which the activity tracking nodes will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetActivityTrackingNodes(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets the activity tracking nodes from the specified build information object.</summary>
      <returns>The activity tracking nodes.</returns>
      <param name="buildInformation">The build information object from which the activity tracking nodes will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetAssociatedChangesets(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets the associated changeset summaries from the specified build.</summary>
      <returns>The associated changeset summaries from the specified build.</returns>
      <param name="build">The build from which the changeset summaries will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetAssociatedChangesets(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Get the associated changeset summaries from the specified build information object.</summary>
      <returns>The associated changeset summaries from the specified build.</returns>
      <param name="buildInformation">The build information object from which the changeset summaries will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetAssociatedWorkItems(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets the associated work item summaries from the specified build.</summary>
      <returns>The associated work item summaries.</returns>
      <param name="build">The build from which the work item summaries will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetAssociatedWorkItems(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets the associated work item summaries from the specified build information object.</summary>
      <returns>The associated work item summaries.</returns>
      <param name="buildInformation">The build information object from which the work item summaries will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildError(Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
      <summary>Converts a single IBuildInformationNode of type BuildError into an IBuildError object.</summary>
      <returns>The converted build error node.</returns>
      <param name="node">The build information node to convert.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildErrors(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets the build error nodes from the specified build.</summary>
      <returns>The build error nodes.</returns>
      <param name="build">The build from which to retrieve build error nodes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildErrors(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets the build error nodes from a build information object.</summary>
      <returns>The build error nodes.</returns>
      <param name="buildInformation">The build information node from which to retrieve error nodes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildProjectNode(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String)">
      <summary>Gets the project node with the corresponding local path, or null if none is found.</summary>
      <returns>The corresponding project node.</returns>
      <param name="buildInformation">The build information to search.</param>
      <param name="localPath">The desired local path.</param>
      <param name="targets">The name of the project node.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildProjectNodes(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets the build project nodes from the specified build.</summary>
      <returns>The build project nodes.</returns>
      <param name="build">The build from which the build project nodes will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildProjectNodes(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets the build project nodes from the specified build information object.</summary>
      <returns>The build project nodes.</returns>
      <param name="buildInformation">The build information from which the build project nodes will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildSteps(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets a sorted list of the build steps from the specified build.</summary>
      <returns>The sorted list of build steps. Sorting is accomplished first by hierarchy, then by start time, and finally by ID.</returns>
      <param name="build">The build from which the build steps will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildSteps(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets a sorted list of the build steps from the specified build information object.</summary>
      <returns>The sorted list of build steps. Sorting is accomplished first by hierarchy, then by start time, and finally by ID.</returns>
      <param name="buildInformation">The build information object from which the build steps will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildWarning(Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
      <summary>Converts a single IBuildInformationNode of type BuildWarning into an IBuildWarning object.</summary>
      <returns>The build warning node.</returns>
      <param name="node">The build information node.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildWarnings(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets build warning nodes from the specified build.</summary>
      <returns>The build warning nodes.</returns>
      <param name="build">The build from which the warning nodes will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetBuildWarnings(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets the build warning nodes from the specified build information object.</summary>
      <returns>The build warning nodes.</returns>
      <param name="buildInformation">The build information node.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetChangesetId(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets a changeset ID from the specified build information object.</summary>
      <returns>The changeset ID</returns>
      <param name="buildInformation">The build information object to search.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetChangesetId(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.Int32)">
      <summary>Gets a changesetId from the build for a particular request</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetChangesetId(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.Int32,System.Boolean)">
      <summary>Gets a changesetId from the build for a particular request, if returnFirstIfNotFound is specified, it returns the first changeset in the list if the one specified is not present.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetChangesetsInfo(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.Int32@,System.Int32@)">
      <summary>Gets several changesets from the build</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetConfigurationSummaries(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets the configuration summaries from the specified build.</summary>
      <returns>The list of configuration summaries.</returns>
      <param name="build">The build from which to retrieve the configuration summaries.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetConfigurationSummaries(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets the configuration summaries from the specified build information object.</summary>
      <returns>The list of configuration summaries.</returns>
      <param name="buildInformation">The build information object from which to retrieve the configuration summaries.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetConfigurationSummary(Microsoft.TeamFoundation.Build.Client.IBuildDetail,System.String,System.String)">
      <summary>Gets a configuration summary from the specified build.</summary>
      <returns>The configuration summary, or null if none was found for the given platform and flavor.</returns>
      <param name="build">The build from which the configuration summary will be retrieved.</param>
      <param name="flavor">The flavor of the desired configuration.</param>
      <param name="platform">The platform of the desired configuration.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetConfigurationSummary(Microsoft.TeamFoundation.Build.Client.IBuildInformation,System.String,System.String)">
      <summary>Gets a configuration summary from the specified build information object.</summary>
      <returns>The desired configuration summary, or null if none was found for the given platform and flavor.</returns>
      <param name="buildInformation">The build information object from which the configuration summary will be retrieved.</param>
      <param name="flavor">The flavor of the desired configuration.</param>
      <param name="platform">The platform of the desired configuration.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetConfigurationSummary(Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
      <summary>Gets a configuration summary from the specified build information node.</summary>
      <returns>The configuration summary.</returns>
      <param name="buildInformationNode">The build information node from which to get a configuration summary.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetCustomSummaryInformation(Microsoft.TeamFoundation.Build.Client.IBuildInformationNode)">
      <summary>Converts a single Information node of type CustomSummaryInformation into an ICustomSummaryInformation object.</summary>
      <returns>The Custom Summary Information node.</returns>
      <param name="node">The build information node.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetCustomSummaryInformationNodes(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets all of the Custom Summary Information nodes from a build.</summary>
      <returns>The Custom Summary Information nodes.</returns>
      <param name="build">The build.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetCustomSummaryInformationNodes(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets all of the Custom Summary Information nodes from a build information object.</summary>
      <returns>The Custom Summary Information nodes.</returns>
      <param name="buildInformation">The build information.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetOpenedWorkItems(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets the associated opened work item summaries for the specified build.</summary>
      <returns>The associated opened work item summaries.</returns>
      <param name="build">The build from which the opened work items will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetOpenedWorkItems(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets the associated opened work item summaries for the specified build information object.</summary>
      <returns>The associated opened work item summaries.</returns>
      <param name="buildInformation">The build information object from which the opened work items will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetTopLevelProjects(Microsoft.TeamFoundation.Build.Client.IBuildDetail)">
      <summary>Gets the top-level build project nodes from the specified build.</summary>
      <returns>The build project nodes.</returns>
      <param name="build">The build from which the top-level build project nodes will be retrieved.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeConverters.GetTopLevelProjects(Microsoft.TeamFoundation.Build.Client.IBuildInformation)">
      <summary>Gets top-level build project nodes from the specified build information object.</summary>
      <returns>The build project nodes.</returns>
      <param name="buildInformation">The build information object from which the build project nodes will be retrieved.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InformationNodeDoesNotExistException">
      <summary>Exception that is thrown when an information node does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new InformationNodeDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationNodeDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InformationNodeDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InformationParentNodeDoesNotExistException">
      <summary>Exception that is thrown when an information node parent does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationParentNodeDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationParentNodeDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new InformationParentNodeDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InformationParentNodeDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InformationParentNodeDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InvalidBuildAgentReservationException">
      <summary>Exception for an invalid build agent reservation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildAgentReservationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildAgentReservationException.#ctor(System.String)">
      <summary>Initializes a new InvalidBuildAgentReservationException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildAgentReservationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InvalidBuildAgentReservationException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InvalidBuildGroupItemUpdateException">
      <summary>Exception that is caused by a build group item update that is not valid.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildGroupItemUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildGroupItemUpdateException.#ctor(System.String)">
      <summary>Initializes a new InvalidBuildGroupItemUpdateException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildGroupItemUpdateException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InvalidBuildGroupItemUpdateException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InvalidBuildRequestException">
      <summary>Exception that is caused by a build request that is not valid.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildRequestException.#ctor(System.String)">
      <summary>Initializes a new InvalidBuildRequestException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildRequestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InvalidBuildRequestException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InvalidBuildUriException">
      <summary>Exception that is caused by a build URI that is not valid.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildUriException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildUriException.#ctor(System.String)">
      <summary>Initializes a new InvalidBuildUriException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidBuildUriException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InvalidBuildUriException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InvalidFinalStatusException">
      <summary>Exception for a final status that is not valid.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidFinalStatusException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidFinalStatusException.#ctor(System.String,Microsoft.TeamFoundation.Build.Client.BuildStatus,Microsoft.TeamFoundation.Build.Client.IBuildServer)">
      <summary>Initializes a new InvalidFinalStatusException instance.</summary>
      <param name="buildNumber">The build number of the build that has the invalid final status.</param>
      <param name="invalidStatus">The invalid build status.</param>
      <param name="buildServer">The build server instance that contains the invalid build.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InvalidPlatformFlavorException">
      <summary>Exception that is caused by a platform flavor that is not valid.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidPlatformFlavorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidPlatformFlavorException.#ctor(System.String)">
      <summary>Initializes a new InvalidPlatformFlavorException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidPlatformFlavorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InvalidPlatformFlavorException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.InvalidQueueRequestException">
      <summary>Exception that is thrown when an error occurs because a queue request is not valid.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidQueueRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidQueueRequestException.#ctor(System.String)">
      <summary>Initializes a new InvalidQueueRequestException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.InvalidQueueRequestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new InvalidQueueRequestException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IProcessTemplate">
      <summary>Interface for a process template for a build definition on the server that is running Team Foundation Build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.CopyFrom(Microsoft.TeamFoundation.Build.Client.IProcessTemplate)">
      <summary>Copies properties from a source process template to this instance.</summary>
      <param name="source">Template to copy from</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.Delete">
      <summary>Deletes the build process template from the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.Description">
      <summary>Gets or sets the description of the build process template.</summary>
      <returns>The description of the build process template.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.Download">
      <summary>Downloads the latest version of the build process template.</summary>
      <returns>The complete build process template as a string.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.Download(System.String)">
      <summary>Downloads the build process template at the specified version specification.</summary>
      <returns>The complete build process template as a string.</returns>
      <param name="versionSpec">Any valid version control version specifier in string form.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.Id">
      <summary>Gets the identifier for this process template.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.Parameters">
      <summary>Gets the process templates parameters.</summary>
      <returns>The process templates parameters.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.Save">
      <summary>Saves the build process template to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.ServerPath">
      <summary>Gets the version control path of the build process file.</summary>
      <returns>The version control path of the build process file.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.SupportedReasons">
      <summary>Gets or sets the valid build reasons that are supported by this build process template.</summary>
      <returns>The valid build reasons that are supported by this build process template.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.TeamProject">
      <summary>Gets the team project for this process template.</summary>
      <returns>The team project for this process template.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.TemplateType">
      <summary>Gets or sets the type of the build process template.</summary>
      <returns>The type of the build process template.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProcessTemplate.Version">
      <summary>Gets the version of this process template.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IProjectFile">
      <summary>Interface for a Team Foundation Server build project file (TfsBuild.proj).</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProjectFile.AddConfigurationToBuild">
      <summary>Adds a configuration to build to the list of configurations.</summary>
      <returns>The newly added configuration.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProjectFile.AddMetadataFile">
      <summary>Adds a metadata file to the list of MetadataFiles.</summary>
      <returns>The newly added metadata file.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProjectFile.AddSolutionToBuild">
      <summary>Adds a new solution-to-build to the list of Solutions.</summary>
      <returns>The newly added solution.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProjectFile.AddTestContainer">
      <summary>Adds a test container assembly file to the list of TestContainers.</summary>
      <returns>The newly added TestContainer item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProjectFile.Configurations">
      <summary>Gets the list of configurations to build.</summary>
      <returns>The list of configurations to build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProjectFile.MetadataFiles">
      <summary>Gets the list of metadata files containing test lists to run.</summary>
      <returns>The list of metadata files containing test lists to run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProjectFile.RunCodeAnalysis">
      <summary>Gets or sets the code analysis run type.</summary>
      <returns>The code analysis run type.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProjectFile.RunTest">
      <summary>Gets or sets a flag describing whether to run tests.</summary>
      <returns>True to run all tests. False to run no tests.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IProjectFile.Save(System.String)">
      <summary>Generates the project file and saves it to the specified version control path. Also generates an empty TfsBuild.rsp file in the same location.</summary>
      <param name="serverFolder">The version control folder path.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProjectFile.Solutions">
      <summary>Gets the list of solutions and projects to be built.</summary>
      <returns>The list of solutions and projects to be built.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IProjectFile.TestContainers">
      <summary>Gets the list of test assemblies containing tests to run.</summary>
      <returns>The list of test assemblies containing tests to run.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IQueuedBuild">
      <summary>The interface for a queued build on the server that is running Team Foundation Build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.BatchId">
      <summary>The batch ID of the queued build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Build">
      <summary>Gets the build in progress associated with this queued build.</summary>
      <returns>The build in progress associated with this queued build if the queued build is in progress. Null if the queued build is still in queue.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.BuildController">
      <summary>Gets the build controller on which this queued build will be built.</summary>
      <returns>The build controller on which this queued build will be built.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.BuildControllerUri">
      <summary>Gets the URI of the build controller on which this queued build will be built.</summary>
      <returns>The URI of the build controller on which this queued build will be built.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.BuildDefinition">
      <summary>Gets the build definition for which this queued build will be built.</summary>
      <returns>The build definition for which this queued build will be built.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.BuildDefinitionUri">
      <summary>Gets the URI of the build definition for which this queued build will be built.</summary>
      <returns>The URI of the build definition for which this queued build will be built.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Builds">
      <summary>Gets the collection of builds for this queue entry.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.BuildServer">
      <summary>Gets the server that owns this queued build.</summary>
      <returns>The server that owns this queued build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Cancel">
      <summary>Removes this build from the queue.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Connect">
      <summary>Starts polling, by using the default interval of five seconds and no synchronization object.  Events will be fired on a thread pool thread. When events are handled by a visual Windows Forms component, the other overload should be used for this method and that component should be passed in as the synchronizingObject so that the event handlers are called on the same thread on which the component was created.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Connect(System.Int32,System.Int32,System.ComponentModel.ISynchronizeInvoke)">
      <summary>Starts polling, by using the specified interval and ISynchronizeInvoke object. When the StatusChanged, or PollingCompleted events are handled by a visual Windows Forms component, that component should be passed in as the synchronizingObject so that the event handlers are called on the same thread on which the component was created.</summary>
      <param name="pollingInterval">The polling interval, in milliseconds.</param>
      <param name="timeout">The time-out, in milliseconds.</param>
      <param name="synchronizingObject">The object that is used to synchronize polling events. If null, events will be fired on a thread pool thread.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Copy(Microsoft.TeamFoundation.Build.Client.IQueuedBuild,Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Copies the data from the specified queued build into the current instance.  The return value indicates whether anything in the queued build was actually updated that would effect state.</summary>
      <returns>True if this queued build state changed. False otherwise.</returns>
      <param name="build">The queued build from which to copy data.</param>
      <param name="options">The options to customize the copy.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.CustomGetVersion">
      <summary>Gets the time for which sources should be retrieved for the queued build.</summary>
      <returns>The time for which sources should be retrieved for the queued build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Disconnect">
      <summary>Stops polling.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.DropLocation">
      <summary>Gets the location where to drop the outputs of the queued build.</summary>
      <returns>The location where to drop the outputs of the queued build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.GetOption">
      <summary>Gets the time for which sources should be retrieved for the queued build.</summary>
      <returns>The time for which sources should be retrieved for the queued build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Id">
      <summary>Gets the ID of this queued build.</summary>
      <returns>The ID of this queued build.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.PollingCompleted">
      <summary>Raised when polling finishes. Note: to receive this event you must call the Connect method. This event is fired when polling finishes, either because the queued build finished or because an unrecoverable error was encountered (e.g. the queued build was deleted).</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Postpone">
      <summary>Postpones this queued build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Priority">
      <summary>Gets or sets the priority of this queued build.</summary>
      <returns>The priority of this queued build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.ProcessParameters">
      <summary>Gets the process parameters that were used for this build.</summary>
      <returns>The process parameters that were used for this build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.QueuePosition">
      <summary>Gets the current position of the build in the queue.</summary>
      <returns>The current position of the build in the queue.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.QueueTime">
      <summary>Gets the time when the build was queued.</summary>
      <returns>The time when the build was queued.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Reason">
      <summary>Gets the reason that the build was queued.</summary>
      <returns>The reason that the build was queued.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Refresh(Microsoft.TeamFoundation.Build.Client.QueryOptions)">
      <summary>Gets the latest property values from the server.</summary>
      <param name="queryOptions">Options for querying the latest property values.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.RequestedBy">
      <summary>Gets the user who requested the queued build.</summary>
      <returns>The user who requested the queued build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.RequestedByDisplayName">
      <summary>Gets the display name of the user who requested the build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.RequestedFor">
      <summary>Gets the user for whom the queued build was requested.</summary>
      <returns>The user for whom the queued build was requested.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.RequestedForDisplayName">
      <summary>Gets the display name of the user for whom the build was requested.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Resume">
      <summary>Resumes the queued build. </summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Retry">
      <summary>Marks the build for retry without batching. If batching with other builds is desired see IBuildServer.RetryQueuedBuilds.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Retry(System.Guid)">
      <summary>Marks the build for retry and puts it in the specified batch.</summary>
      <param name="batchId">The batch in which this build should be included</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Retry(System.Guid,Microsoft.TeamFoundation.Build.Client.QueuedBuildRetryOption)">
      <summary>Marks the build for retry and puts it in the specified batch with the specified retry option.</summary>
      <param name="batchId">The batch in which this build should be included</param>
      <param name="retryOption">Option to retry a completed or an in progress build</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Save">
      <summary>Sends any changes that were made on the queued build to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.ShelvesetName">
      <summary>Gets the shelveset that will be built.</summary>
      <returns>The shelveset that will be built.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.StartNow">
      <summary>Starts the queued build if its definition is currently paused.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Status">
      <summary>Gets the status of the queued build.</summary>
      <returns>The status of the queued build.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.StatusChanged">
      <summary>Raised when any change in the queued build is discovered on the server. Note: to receive these events you must call the Connect method. This causes the server to be polled regularly until the queued build is completed. This event is fired just after the queued build is updated.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.TeamProject">
      <summary>Gets the team project that owns this queued build.</summary>
      <returns>The team project that owns this queued build.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.Wait">
      <summary>Blocks until the queued build is completed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.WaitForBuildCompletion(System.TimeSpan,System.TimeSpan)">
      <summary>Blocks the calling thread until the build finishes or the time-out expires.</summary>
      <returns>True if the build finished in the specified time-out, false otherwise</returns>
      <param name="pollingInterval">The interval of time between server polling</param>
      <param name="timeout">The overall time-out of the blocking call</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.WaitForBuildCompletion(System.TimeSpan,System.TimeSpan,System.ComponentModel.ISynchronizeInvoke)">
      <summary>Blocks the calling thread until the build finishes or the time-out expires.</summary>
      <returns>True if the build finished in the specified time-out, false otherwise</returns>
      <param name="pollingInterval">The interval of time between server polling</param>
      <param name="timeout">The overall time-out of the blocking call</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.WaitForBuildStart">
      <summary>Blocks the build from starting by using the default polling interval of five seconds and an infinite time-out. When this method exits, the Build property will not be null.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuild.WaitForBuildStart(System.Int32,System.Int32)">
      <summary>Blocks the build from starting by using the specified polling interval and time-out.</summary>
      <returns>True if the build was started in the time-out interval. False otherwise.</returns>
      <param name="pollingInterval">The polling interval, in milliseconds.</param>
      <param name="timeout">The time-out interval, in milliseconds.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IQueuedBuildQueryResult">
      <summary>The interface for the result of a query for IQueuedBuilds.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildQueryResult.Failures">
      <summary>Gets the array of failures for this query result.</summary>
      <returns>The array of failures for this query result.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildQueryResult.QueuedBuilds">
      <summary>Gets the array of queued builds for this query result.</summary>
      <returns>The array of queued builds for this query result.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec">
      <summary>Interface for a build queue specification, which can be used to query for queued builds.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec.CompletedWindow">
      <summary>Gets or sets the completed-by time window that is used to query for completed builds.</summary>
      <returns>The completed-by time window that is used to query for completed builds.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec.ControllerSpec">
      <summary>Gets the controller specification for this build queue specification.</summary>
      <returns>The controller specification for this build queue specification.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec.DefinitionSpec">
      <summary>Gets the definition specification for this build queue specification.</summary>
      <returns>The definition specification for this build queue specification.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec.DefinitionUris">
      <summary>Gets the definition uniform resource identifiers (URIs) for this build queue specification.</summary>
      <returns>The definition URIs for this build queue specification.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec.QueryOptions">
      <summary>Gets or sets the query options that are used for this build queue query.</summary>
      <returns>The query options that are used for this build queue query.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec.RequestedFor">
      <summary>Gets or sets the user for whom this build was requested.</summary>
      <returns>The user for whom this build was requested.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildSpec.Status">
      <summary>Gets or sets the status filter that is used for this build queue query.</summary>
      <returns>The status filter that is used for this build queue query.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView">
      <summary>The interface for a view of the queued builds in the server that is running Team Foundation Build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.CompletedWindow">
      <summary>Gets or sets the time span to hold builds in the queue during polling.</summary>
      <returns>The time span to hold builds in the queue during polling.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.Connect">
      <summary>Starts polling, using the default interval of 30 seconds and no synchronization object.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.Connect(System.Int32,System.ComponentModel.ISynchronizeInvoke)">
      <summary>Starts polling, using the specified interval and ISynchronizeInvoke object.</summary>
      <param name="pollingInterval">The polling interval, in milliseconds.</param>
      <param name="synchronizingObject">The object used to synchronize polling events. If null, events will be fired on a thread pool thread.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.ControllerFilter">
      <summary>Gets the build controller specification used to filter builds in the QueuedBuilds property.</summary>
      <returns>The build controller specification used to filter builds in the QueuedBuilds property.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.DefinitionFilter">
      <summary>Gets the build definition specification used to filter builds in the QueuedBuilds property.</summary>
      <returns>The build definition specification used to filter builds in the QueuedBuilds property.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.Disconnect">
      <summary>Stops polling.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.QueryOptions">
      <summary>Gets or sets the query options to use when querying the QueuedBuilds property.</summary>
      <returns>The query options to use when querying the QueuedBuilds property.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.QueuedBuilds">
      <summary>Gets the queued builds in the team project that match the specified AgentFilter, DefinitionFilter, and StatusFilter properties.</summary>
      <returns>The queued builds in the team project that match the specified AgentFilter, DefinitionFilter, and StatusFilter properties.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.Refresh(System.Boolean)">
      <summary>Manually refreshes the view, and optionally removes completed builds from the view.</summary>
      <param name="useCompletedWindow">True to remove completed builds outside of the completed window from view. False to remove all completed builds from view.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.RequestedForFilter">
      <summary>Gets or sets the requested for filter.</summary>
      <returns>The requested for filter.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.StatusChanged">
      <summary>Raised once for each polling interval.</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.StatusChanging">
      <summary>Raised once for each polling interval.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.StatusFilter">
      <summary>Gets or sets the status filter.</summary>
      <returns>The status filter.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IQueuedBuildsView.TeamProjectFilter">
      <summary>Gets the team project filter.</summary>
      <returns>The team project filter.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IRetentionPolicy">
      <summary>The interface for a retention policy in the server that is running Team Foundation Build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IRetentionPolicy.BuildDefinition">
      <summary>Gets the build definition that owns this retention policy.</summary>
      <returns>The build definition that owns this retention policy.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IRetentionPolicy.BuildReason">
      <summary>Gets or sets the reason of the build to which the retention policy applies.</summary>
      <returns>The reason of the build to which the retention policy applies.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IRetentionPolicy.BuildStatus">
      <summary>Gets or sets the status of the build to which the retention policy applies.</summary>
      <returns>The status of the build to which the retention policy applies.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IRetentionPolicy.DeleteOptions">
      <summary>Gets or sets the parts of the build to delete.</summary>
      <returns>The parts of the build to delete.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IRetentionPolicy.NumberToKeep">
      <summary>Gets or sets the number of builds to keep.</summary>
      <returns>The number of builds to keep.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ISchedule">
      <summary>The interface for a schedule of a build definition on the server that is running Team Foundation Build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ISchedule.BuildDefinition">
      <summary>Gets the build definition that owns this schedule.</summary>
      <returns>The build definition that owns this schedule.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ISchedule.DaysToBuild">
      <summary>Gets or sets the scheduled days of the week to trigger a build.</summary>
      <returns>The scheduled days of the week to trigger a build.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ISchedule.StartTime">
      <summary>Gets or sets the time as the number of seconds past midnight.</summary>
      <returns>The time as the number of seconds past midnight.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ISchedule.TimeZone">
      <summary>Gets or sets the time zone for which daylight savings time rules should apply.</summary>
      <returns>The time zone for which daylight savings time rules should apply.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ISchedule.Type">
      <summary>Gets the type of this schedule.</summary>
      <returns>The type of this schedule.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ISolutionToBuild">
      <summary>Interface for a SolutionToBuild item in TfsBuild.proj.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ISolutionToBuild.Properties">
      <summary>Gets or sets the custom properties for this solution.</summary>
      <returns>The custom properties for this solution.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ISolutionToBuild.SolutionPath">
      <summary>Gets or sets the path that is relative to $(SolutionRoot) of the solution.</summary>
      <returns>The path that is relative to $(SolutionRoot) of the solution.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ISolutionToBuild.Targets">
      <summary>Gets or sets the custom targets for this solution.</summary>
      <returns>The custom targets for this solution.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ITestContainer">
      <summary>Interface for a TestContainer item in TfsBuild.proj.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestContainer.FilePath">
      <summary>Gets or sets the path of the test container assembly file.</summary>
      <returns>The path of the test container assembly file.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ITestSummary">
      <summary>Interface for TestSummary type of IBuildInformationNode. To obtain an ITestSummary, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.Id">
      <summary>Gets the ID of the underlying IBuildInformationNode of this test summary.</summary>
      <returns>The ID of the underlying IBuildInformationNode of this test summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.Name">
      <summary>Gets or sets the name of this test run.</summary>
      <returns>The name of this test run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.RunId">
      <summary>Gets or sets the ID of this test run.</summary>
      <returns>The ID of this test run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.RunPassed">
      <summary>Gets or sets a flag that describes the overall status of this test run.</summary>
      <returns>True if all tests passed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.RunUser">
      <summary>Gets or sets the user who initiated this test run.</summary>
      <returns>The user who initiated this test run.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ITestSummary.Save">
      <summary>Saves the test summary to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.TestsFailed">
      <summary>Gets or sets the number of tests that failed during this test run.</summary>
      <returns>The number of tests that failed during this test run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.TestsInconclusive">
      <summary>Gets the number of tests that were not marked as passed or failed during the run.</summary>
      <returns>The number of tests that were not marked as passed or failed during the run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.TestsPassed">
      <summary>Gets or sets the number of tests that passed during the run.</summary>
      <returns>The number of tests that passed during the run.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.ITestSummary.TestsTotal">
      <summary>Gets or sets the total number of tests.</summary>
      <returns>The total number of tests.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary">
      <summary>Interface for a WorkItemSummary type of IBuildInformationNode. To obtain an IWorkItemSummary, use the InformationNodeConverters class.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.AssignedTo">
      <summary>Gets or sets the user to whom this work item is assigned.</summary>
      <returns>The user to whom this work item is assigned.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.Id">
      <summary>Gets the ID of the underlying IBuildInformationNode of the work item summary.</summary>
      <returns>The ID of the underlying IBuildInformationNode of the work item summary.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.Node">
      <summary>Gets the underlying IBuildInformationNode.</summary>
      <returns>The underlying IBuildInformationNode.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.Save">
      <summary>Saves this work item summary to the server.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.Status">
      <summary>Gets or sets the status of this work item.</summary>
      <returns>The status of this work item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.Title">
      <summary>Gets or sets the title of this work item.</summary>
      <returns>The title of this work item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.Type">
      <summary>Gets or sets the type of this work item.</summary>
      <returns>The type of this work item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.WorkItemId">
      <summary>Gets or sets the ID of this work item.</summary>
      <returns>The ID of this work item.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkItemSummary.WorkItemUri">
      <summary>Gets or sets the uniform resource identifier (URI) of this work item.</summary>
      <returns>The URI of this work item.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IWorkspaceMapping">
      <summary>Represents a workspace mapping on the server that is running Team Foundation Build.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkspaceMapping.Depth">
      <summary>Gets or sets the depth of the mapping.</summary>
      <returns>The depth of the mapping.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkspaceMapping.LocalItem">
      <summary>Gets or sets the local item of the mapping.</summary>
      <returns>The local item of the mapping.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkspaceMapping.MappingType">
      <summary>Gets or sets the mapping type, which is Map or Cloak.</summary>
      <returns>The mapping type, which is Map or Cloak.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkspaceMapping.ServerItem">
      <summary>Gets or sets the server item of the mapping.</summary>
      <returns>The server item of the mapping.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate">
      <summary>Represents a build definition workspace on the server that is running Team Foundation Build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.AddMapping">
      <summary>Adds a workspace mapping to this workspace.</summary>
      <returns>The new workspace mapping.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.AddMapping(System.String,System.String,Microsoft.TeamFoundation.Build.Client.WorkspaceMappingType)">
      <summary>Adds a workspace mapping that has the specified server item, local item, and mapping type.  Sets the mapping depth to 120.</summary>
      <returns>A new workspace mapping.</returns>
      <param name="serverItem">The server item for the mapping.</param>
      <param name="localItem">The local item path for the mapping.</param>
      <param name="type">The mapping type to create.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.AddMapping(System.String,System.String,Microsoft.TeamFoundation.Build.Client.WorkspaceMappingType,Microsoft.TeamFoundation.Build.Client.WorkspaceMappingDepth)">
      <summary>Adds a workspace mapping that has the specified server item, local item, mapping type, and depth.</summary>
      <returns>A new workspace mapping.</returns>
      <param name="serverItem">The server item for the mapping.</param>
      <param name="localItem">The local item path for the mapping.</param>
      <param name="type">The mapping type to create.</param>
      <param name="depth">The depth of the mapping.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.Cloak(System.String)">
      <summary>Adds a cloak entry to this workspace for the specified server item.</summary>
      <returns>A new workspace mapping.</returns>
      <param name="serverItem">The server item to cloak.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.CopyFrom(Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate)">
      <summary>Copies properties from a source workspace template to this one</summary>
      <param name="source">Template to copy from</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.LastModifiedBy">
      <summary>Gets the user who last modified this workspace.</summary>
      <returns>The user who last modified this workspace.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.LastModifiedDate">
      <summary>Gets the date and time when this workspace was last modified.</summary>
      <returns>The date and time when this workspace was last modified.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.Map(System.String,System.String)">
      <summary>Adds a workspace mapping that has the specified server item and local item. Sets the mapping type to WorkspaceMappingType.Map.</summary>
      <returns>A new workspace mapping.</returns>
      <param name="serverItem">The server item to map.</param>
      <param name="localItem">The local item to map.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.Mappings">
      <summary>Gets the workspace mappings for this workspace.</summary>
      <returns>The workspace mappings for this workspace.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.RemoveMapping(Microsoft.TeamFoundation.Build.Client.IWorkspaceMapping)">
      <summary>Removes the specified mapping from the workspace template.</summary>
      <returns>True if the mapping was successfully removed; otherwise, false.</returns>
      <param name="mapping">The mapping that will be removed.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.IWorkspaceTemplate.RemoveMapping(System.String)">
      <summary>Removes the mapping for the specified server item from the workspace template.</summary>
      <returns>True if the mapping was successfully removed; otherwise, false.</returns>
      <param name="serverItem">The server item of the mapping that will be removed.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.MultipleDefaultProcessTemplatesException">
      <summary>Exception caused by the existence of multiple default process templates.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.MultipleDefaultProcessTemplatesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.MultipleDefaultProcessTemplatesException.#ctor(System.String)">
      <summary>Initializes a new MultipleDefaultProcessTemplatesException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.MultipleDefaultProcessTemplatesException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new MultipleDefaultProcessTemplatesException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.MultipleUpgradeProcessTemplatesException">
      <summary>Exception that is caused by the existence of multiple upgrade process templates.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.MultipleUpgradeProcessTemplatesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.MultipleUpgradeProcessTemplatesException.#ctor(System.String)">
      <summary>Initializes a new MultipleUpgradeProcessTemplatesException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.MultipleUpgradeProcessTemplatesException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new MultipleUpgradeProcessTemplatesException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.PollingCompletedEventArgs">
      <summary>Event arguments for a polling completed event.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.PollingCompletedEventArgs.#ctor">
      <summary>Initializes a new PollingCompletedEventArgs instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.PollingCompletedEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new PollingCompletedEventArgs instance.</summary>
      <param name="ex">The exception that caused polling to stop unexpectedly.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.PollingCompletedEventArgs.PollingCompletedException">
      <summary>Gets the polling completed exception.</summary>
      <returns>The polling completed exception.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.PollingCompletedEventArgs.PollingCompletedNormally">
      <summary>Gets a flag that describes whether polling completed normally.</summary>
      <returns>True if the polling completed normally; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.PollingCompletedEventHandler">
      <summary>Event handler for a completed event.</summary>
      <param name="sender">The object that causes the event.</param>
      <param name="e">Arguments for the event.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ProcessTemplateDeletedException">
      <summary>Exception that is thrown when a process template is deleted.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProcessTemplateDeletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProcessTemplateDeletedException.#ctor(System.String)">
      <summary>Initializes a new ProcessTemplateDeletedException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProcessTemplateDeletedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new ProcessTemplateDeletedException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ProcessTemplateNotFoundException">
      <summary>Exception that is thrown when the process template was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProcessTemplateNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProcessTemplateNotFoundException.#ctor(System.String)">
      <summary>Initializes a new ProcessTemplateNotFoundException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProcessTemplateNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new ProcessTemplateNotFoundException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ProcessTemplateType">
      <summary>Describes the type of a process template.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ProcessTemplateType.Custom">
      <summary>Custom type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ProcessTemplateType.Default">
      <summary>Default type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ProcessTemplateType.Upgrade">
      <summary>Upgrade type.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ProjectFileCreationException">
      <summary>Exception for an error in project file creation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProjectFileCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProjectFileCreationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new ProjectFileCreationException instance.</summary>
      <param name="fileName">The file name that was not created.</param>
      <param name="innerException">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ProjectFileTemplateNotFoundException">
      <summary>Exception that is thrown when a project file template was not found.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProjectFileTemplateNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ProjectFileTemplateNotFoundException.#ctor(System.String)">
      <summary>Initializes a new ProjectFileTemplateNotFoundException instance.</summary>
      <param name="fileName">The file name of the project file that was not found.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueryDeletedOption">
      <summary>Options for querying deleted items.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryDeletedOption.ExcludeDeleted">
      <summary>Exclude deleted items from the query.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryDeletedOption.IncludeDeleted">
      <summary>Include deleted items in the query.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryDeletedOption.OnlyDeleted">
      <summary>Query only deleted items.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueryOptions">
      <summary>Options for a query.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.Agents">
      <summary>Query agents.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.All">
      <summary>Query all.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.BatchedRequests">
      <summary>The list of requests batched into this build should be returned.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.Controllers">
      <summary>Query controllers.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.Definitions">
      <summary>Query definitions.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.HistoricalBuilds">
      <summary>The list of builds associated with each request should be returned.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.None">
      <summary>Query nothing.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.Process">
      <summary>Query processes.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueryOptions.Workspaces">
      <summary>Query workspaces.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueuedBuildDoesNotExistException">
      <summary>Exception that is thrown when a queued build does not exist.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.QueuedBuildDoesNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.QueuedBuildDoesNotExistException.#ctor(System.String)">
      <summary>Initializes a new QueuedBuildDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.QueuedBuildDoesNotExistException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new QueuedBuildDoesNotExistException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueuedBuildRetryOption">
      <summary>Specifies the options to requeue a build request.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildRetryOption.CompletedBuild">
      <summary>Requeue when the request is completed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildRetryOption.InProgressBuild">
      <summary>Requeue when the request is still in progress.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildRetryOption.None">
      <summary>Not an option.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdate">
      <summary>Describes the priority of a queued build update.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdate.BatchId">
      <summary>The batch ID for grouping.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdate.None">
      <summary>No update.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdate.Postponed">
      <summary>Update is postponed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdate.Priority">
      <summary>Update has priority.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdate.Requeue">
      <summary>The requeue option should be used.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdate.Retry">
      <summary>The retry status should be used.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdateException">
      <summary>Exception that is thrown when an error occurs with a queued build update.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdateException.#ctor(System.String)">
      <summary>Initializes a new QueuedBuildUpdateException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.QueuedBuildUpdateException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new QueuedBuildUpdateException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueueOptions">
      <summary>Describes options for a queue.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueOptions.None">
      <summary>No options set.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueOptions.Preview">
      <summary>Preview only.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueuePriority">
      <summary>Describes priority in queue.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuePriority.AboveNormal">
      <summary>Above normal priority.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuePriority.BelowNormal">
      <summary>Below normal priority.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuePriority.High">
      <summary>High priority.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuePriority.Low">
      <summary>Low priority.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueuePriority.Normal">
      <summary>Normal priority.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.QueueStatus">
      <summary>Describes the status of the queue item.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueStatus.All">
      <summary>All flags on.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueStatus.Canceled">
      <summary>Item is canceled.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueStatus.Completed">
      <summary>Item is completed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueStatus.InProgress">
      <summary>Item in progress.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueStatus.None">
      <summary>Status unknown.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueStatus.Postponed">
      <summary>Item is postponed.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueStatus.Queued">
      <summary>Item is queued.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.QueueStatus.Retry">
      <summary>The build has been requeued for a retry most likely because of failure.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.RequestedForDisplayInformation">
      <summary>This class contains requestedFor user tfid and display name</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.RequestedForDisplayInformation.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.RequestedForDisplayInformation.DisplayName">
      <summary>Display name for user requested for</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.RequestedForDisplayInformation.TeamFoundationId">
      <summary>TFID for user requested for</summary>
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.RequestedForDisplayInformation.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ResponseFileCreationException">
      <summary>Exception for an error in response file creation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ResponseFileCreationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.ResponseFileCreationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new ResponseFileCreationException instance.</summary>
      <param name="fileName">The file name that was not created.</param>
      <param name="innerException">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ScheduleDays">
      <summary>Describes the schedule days.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.All">
      <summary>Every day.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.Friday">
      <summary>Friday.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.Monday">
      <summary>Monday.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.None">
      <summary>No scheduled days.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.Saturday">
      <summary>Saturday.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.Sunday">
      <summary>Sunday.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.Thursday">
      <summary>Thursday.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.Tuesday">
      <summary>Tuesday.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleDays.Wednesday">
      <summary>Wednesday.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ScheduleType">
      <summary>Describes the schedule type.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ScheduleType.Weekly">
      <summary>Weekly.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.SecurityException">
      <summary>Exception for a security error.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SecurityException.#ctor(System.String)">
      <summary>Initializes a new SecurityException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SecurityException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new SecurityException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.ServiceHostStatus">
      <summary>Specifies the current status of a build service host.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ServiceHostStatus.Offline">
      <summary>The service host is currently disconnected and not accepting commands.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.ServiceHostStatus.Online">
      <summary>The service host is currently connected and accepting commands.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.SharedResourceAlreadyAcquiredException">
      <summary>Exception that is thrown when a shared resource was already acquired.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SharedResourceAlreadyAcquiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SharedResourceAlreadyAcquiredException.#ctor(System.String)">
      <summary>Initializes a new SharedResourceAlreadyAcquiredException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SharedResourceAlreadyAcquiredException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new SharedResourceAlreadyAcquiredException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.SharedResourceAlreadyRequestedException">
      <summary>Exception that is thrown when a shared resource was already requested.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SharedResourceAlreadyRequestedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SharedResourceAlreadyRequestedException.#ctor(System.String)">
      <summary>Initializes a new SharedResourceAlreadyRequestedException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.SharedResourceAlreadyRequestedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new SharedResourceAlreadyRequestedException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.StatusChangedEventArgs">
      <summary>Event arguments for a status change event.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.StatusChangedEventArgs.#ctor">
      <summary>Initializes a new StatusChangedEventArgs instance.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.StatusChangedEventArgs.#ctor(System.Boolean)">
      <summary>Initializes a new StatusChangedEventArgs instance.</summary>
      <param name="changed">True if the status has changed; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.StatusChangedEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new StatusChangedEventArgs instance.</summary>
      <param name="ex">The exception that caused polling to stop unexpectedly.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.StatusChangedEventArgs.Changed">
      <summary>Gets a flag that describes whether the status changed.</summary>
      <returns>True if the status changed. False if the status did not change.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Build.Client.StatusChangedEventArgs.PollingException">
      <summary>Gets the polling exception.</summary>
      <returns>The polling exception.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.StatusChangedEventHandler">
      <summary>Event handler for a status changed event.</summary>
      <param name="sender">The object that causes the event.</param>
      <param name="e">Arguments for the event.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.StopBuildFailedException">
      <summary>Exception that is thrown when a build stop request failed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.StopBuildFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.StopBuildFailedException.#ctor(System.String,System.String)">
      <summary>Initializes a new StopBuildFailedException instance.</summary>
      <param name="build">The build that failed to stop.</param>
      <param name="failureMessage">A message that describes the failure.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.StopBuildTimeoutException">
      <summary>Exception that is caused by a time-out on the request to stop a build.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.StopBuildTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.StopBuildTimeoutException.#ctor(System.String)">
      <summary>Initializes a new StopBuildTimeoutException instance.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Build.Client.StopBuildTimeoutException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new StopBuildTimeoutException instance.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="ex">The exception that caused this error.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.WorkspaceMappingDepth">
      <summary>Describes the workspace mapping depth.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.WorkspaceMappingDepth.OneLevel">
      <summary>One level deep.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.WorkspaceMappingDepth.Full">
      <summary>Full depth.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Build.Client.WorkspaceMappingType">
      <summary>Describes the type of a workspace mapping.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.WorkspaceMappingType.Cloak">
      <summary>Workspace is cloaked.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Build.Client.WorkspaceMappingType.Map">
      <summary>Workspace is mapped.</summary>
    </member>
  </members>
</doc>