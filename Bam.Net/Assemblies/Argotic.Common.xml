<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Argotic.Common</name>
    </assembly>
    <members>
        <member name="T:Argotic.Common.ComparisonUtility">
            <summary>
            Provides methods for performing logical comparison operations. This class cannot be inherited.
            </summary>
            <remarks>
                Primary used within this framework to determine the lexical relationship between generic collections.
            </remarks>
        </member>
        <member name="M:Argotic.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.DayOfWeek},System.Collections.ObjectModel.Collection{System.DayOfWeek})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Int32},System.Collections.ObjectModel.Collection{System.Int32})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Int64},System.Collections.ObjectModel.Collection{System.Int64})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.String},System.StringComparison)">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <param name="comparisonType">Specifies the culture, case, and sort rules to be used when determining the lexical relationship.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands. 
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Type},System.Collections.ObjectModel.Collection{System.Type})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Uri},System.Collections.ObjectModel.Collection{System.Uri},System.StringComparison)">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <param name="comparisonType">Specifies the culture, case, and sort rules to be used when determining the lexical relationship.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands. 
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.ComparisonUtility.CompareSequence(System.Collections.ObjectModel.Collection{System.Xml.XPath.XPathNavigator},System.Collections.ObjectModel.Collection{System.Xml.XPath.XPathNavigator})">
            <summary>
            Compares two specified generic collections.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.ComparisonUtility.CompareSequence(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.StringComparison)">
            <summary>
            Compares two specified generic dictionaries.
            </summary>
            <param name="source">The first collection.</param>
            <param name="target">The second collection.</param>
            <param name="comparisonType">Specifies the culture, case, and sort rules to be used when determining the lexical relationship.</param>
            <returns>A 32-bit signed integer indicating the lexical relationship between the two comparands.</returns>
            <remarks>
                <para>
                    If the collections contain the same number of elements, determines the lexical relationship between the two sequences of comparands.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>greater than</i> the <paramref name="target"/> element count, returns <b>1</b>.
                </para>
                <para>
                    If the <paramref name="source"/> has an element count that is <i>less than</i> the <paramref name="target"/> element count, returns <b>-1</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Argotic.Common.DiscoverableSyndicationEndpoint">
            <summary>
            Represents a discoverable syndication endpoint that is being broadcast by a web resource.
            </summary>
        </member>
        <member name="F:Argotic.Common.DiscoverableSyndicationEndpoint.endpointMediaType">
            <summary>
            Private member to hold the content MIME type of the syndication endpoint.
            </summary>
        </member>
        <member name="F:Argotic.Common.DiscoverableSyndicationEndpoint.endpointTitle">
            <summary>
            Private member to hold the title of the syndication endpoint.
            </summary>
        </member>
        <member name="F:Argotic.Common.DiscoverableSyndicationEndpoint.endpointSource">
            <summary>
            Private member to hold the Uniform Resource Locator (URL) of the syndication endpoint.
            </summary>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> class.
            </summary>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> class using the supplied <see cref="T:System.Uri"/> and MIME content type.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the Uniform Resource Locator (URL) of the syndication endpoint.</param>
            <param name="contentType">The MIME content type that the syndicated resource conforms to.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="contentType"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="contentType"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.#ctor(System.Uri,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> class using the supplied <see cref="T:System.Uri"/>, MIME content type and title.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the Uniform Resource Locator (URL) of the syndication endpoint.</param>
            <param name="contentType">The MIME content type that the syndicated resource conforms to.</param>
            <param name="title">The title of the syndication endpoint.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="contentType"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="contentType"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.CreateNavigator">
            <summary>
            Initializes a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through the auto-discoverable syndicated content located at the <see cref="P:Argotic.Common.DiscoverableSyndicationEndpoint.Source">endpoint location</see>.
            </summary>
            <returns>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating the auto-discoverable syndicated content.</returns>
            <exception cref="T:System.ArgumentNullException">The <see cref="P:Argotic.Common.DiscoverableSyndicationEndpoint.Source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/>.</returns>
            <remarks>
                This method returns the XHTML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.op_Equality(Argotic.Common.DiscoverableSyndicationEndpoint,Argotic.Common.DiscoverableSyndicationEndpoint)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.op_Inequality(Argotic.Common.DiscoverableSyndicationEndpoint,Argotic.Common.DiscoverableSyndicationEndpoint)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.op_LessThan(Argotic.Common.DiscoverableSyndicationEndpoint,Argotic.Common.DiscoverableSyndicationEndpoint)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.DiscoverableSyndicationEndpoint.op_GreaterThan(Argotic.Common.DiscoverableSyndicationEndpoint,Argotic.Common.DiscoverableSyndicationEndpoint)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="P:Argotic.Common.DiscoverableSyndicationEndpoint.ContentFormat">
            <summary>
            Gets the <see cref="T:Argotic.Common.SyndicationContentFormat"/> of the syndication endpoint.
            </summary>
            <value>
                A <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value that indicates the syndication content format that the auto-discoverable syndicated content conforms to. 
                If a format cannot be determined for the <see cref="P:Argotic.Common.DiscoverableSyndicationEndpoint.ContentType">content type</see>, returns <see cref="F:Argotic.Common.SyndicationContentFormat.None"/>.
            </value>
            <remarks>The syndication content format is determined based upon the <see cref="P:Argotic.Common.DiscoverableSyndicationEndpoint.ContentType"/> of the current instance.</remarks>
        </member>
        <member name="P:Argotic.Common.DiscoverableSyndicationEndpoint.ContentType">
            <summary>
            Gets or sets the MIME content type of the syndication endpoint.
            </summary>
            <value>The registered MIME type of the syndication endpoint.</value>
            <remarks>See <a href="http://www.iana.org/assignments/media-types/">http://www.iana.org/assignments/media-types/</a> for a listing of registered MIME types.</remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
        </member>
        <member name="P:Argotic.Common.DiscoverableSyndicationEndpoint.Source">
            <summary>
            Gets or sets the Uniform Resource Locator (URL) of the syndication endpoint.
            </summary>
            <value>The <see cref="T:System.Uri"/> of the syndication endpoint.</value>
            <remarks>The <see cref="T:System.Uri"/>can be either <b>Relative</b> or <b>Absolute</b>. It is up to the caller to resolve the endpoint source as appropriate.</remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Argotic.Common.DiscoverableSyndicationEndpoint.Title">
            <summary>
            Gets or sets the title of the syndication endpoint.
            </summary>
            <value>The title of the syndication endpoint.</value>
            <remarks>This property will be empty if no title attribute was assigned to the syndication endpoint link.</remarks>
        </member>
        <member name="T:Argotic.Common.ISyndicationResource">
            <summary>
            Allows an object to implement a syndication resource by representing a set of properties, methods, indexers and events common to web content syndication resources.
            </summary>
            <seealso cref="T:Argotic.Common.SyndicationResourceMetadata"/>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the ISyndicationResource interface.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\ISyndicationResourceExample.cs"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.CreateNavigator">
            <summary>
            Initializes a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating through nodes in this <see cref="T:Argotic.Common.ISyndicationResource"/>.
            </summary>
            <returns>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object.</returns>
            <remarks>
                The <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the root element of the <see cref="T:Argotic.Common.ISyndicationResource"/>. 
                If there is no root element, the <see cref="T:System.Xml.XPath.XPathNavigator"/> is positioned on the first element in the XML representation of the <see cref="T:Argotic.Common.ISyndicationResource"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication resource.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="source"/> should be passed to the <see cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)"/> method 
                                with the <item>settings</item> parameter as <b>null</b>.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> and <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">The <b>IXPathNavigable</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Argotic.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/>.</para>
                <para><b>Notes to Implementers:</b> After the load operation has successfully completed, the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> used to load the syndication resource.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.IO.Stream"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="stream"/> should be passed to the <see cref="M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)"/> method 
                                with the <item>settings</item> parameter as <b>null</b>.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="stream"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Load(System.IO.Stream,Argotic.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.IO.Stream"/> and <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="stream">The <b>Stream</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Argotic.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.IO.Stream"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="stream"/> should be used to create a <see cref="T:System.Xml.XPath.XPathNavigator"/> 
                                that is then passed to the <see cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/> method.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="stream"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication resource.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="reader"/> should be passed to the <see cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)"/> method 
                                with the <item>settings</item> parameter as <b>null</b>.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="reader"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader,Argotic.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/> and <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="reader">The <b>XmlReader</b> used to load the syndication resource.</param>
            <param name="settings">The <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Argotic.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the specified <see cref="T:System.Xml.XmlReader"/>.</para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="reader"/> should be used to create a <see cref="T:System.Xml.XPath.XPathNavigator"/> 
                                that is then passed to the <see cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/> method.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="reader"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <remarks>
                <para>
                    Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the supplied <see cref="T:System.Uri"/> 
                    using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
                </para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                When implementing this method, the <paramref name="source"/>, <paramref name="credentials"/>, and <paramref name="proxy"/> parameters should be passed 
                                to the <see cref="M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)"/> method with the <item>settings</item> parameter as <b>null</b>.
                            </description>
                        </item>
                        <item>
                            <description>
                                 If <paramref name="credentials"/> is <b>null</b>, request should be made using the default application credentials.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="proxy"/> is <b>null</b>, request should be made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,Argotic.Common.SyndicationResourceLoadSettings)">
            <summary>
            Loads the syndication resource from the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the web resource used to load the syndication resource.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. This value can be <b>null</b>.
            </param>
            <param name="settings">The <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Argotic.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Load</b> abstract method to load the syndication resource from the supplied <see cref="T:System.Uri"/> 
                    using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
                </para>
                <para>
                    <b>Notes to Implementers:</b>
                    <list type="bullet">
                        <item>
                            <description>
                                 If <paramref name="credentials"/> is <b>null</b>, request should be made using the default application credentials.
                            </description>
                        </item>
                        <item>
                            <description>
                                If <paramref name="proxy"/> is <b>null</b>, request should be made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
                            </description>
                        </item>
                        <item>
                            <description>
                                Implementers should consider using the <see cref="M:Argotic.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,System.Text.Encoding)"/> utility method 
                                to retrieve the syndication resource information in a safe manner.
                            </description>
                        </item>
                        <item>
                            <description>
                                After the load operation has successfully completed, the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event <b>must</b> be raised.
                            </description>
                        </item>
                    </list>
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the resource remains empty.</exception>
            <exception cref="T:System.Xml.XmlException">There is a load or parse error in the XML. In this case, the resource remains empty.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)">
            <summary>
            Loads the syndication resource asynchronously using the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>Place your custom code in the <b>LoadAsync</b> abstract method to load the syndication resource asynchronously from the specified <see cref="T:System.Uri"/>.</para>
                <para>The <see cref="T:Argotic.Common.ISyndicationResource"/> should be loaded using the default <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event. 
                    You can cancel a <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Argotic.Common.ISyndicationResource.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, you must wait for the load operation to complete before 
                    attempting to load the syndication resource using the <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Argotic.Common.ISyndicationResource"/> has a <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)">
            <summary>
            Loads the syndication resource asynchronously using the specified <see cref="T:System.Uri"/> and <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Argotic.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>Place your custom code in the <b>LoadAsync</b> abstract method to load the syndication resource asynchronously from the specified <see cref="T:System.Uri"/> and <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event. 
                    You can cancel a <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Argotic.Common.ISyndicationResource.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, you must wait for the load operation to complete before 
                    attempting to load the syndication resource using the <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Argotic.Common.ISyndicationResource"/> has a <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)">
            <summary>
            Loads the syndication resource asynchronously using the specified <see cref="T:System.Uri"/>, <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/>, and <see cref="T:System.Net.IWebProxy"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the URL of the syndication resource XML data.</param>
            <param name="settings">The <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/> object used to configure the <see cref="T:Argotic.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="userToken">A user-defined object that is passed to the method invoked when the asynchronous operation completes.</param>
            <remarks>
                <para>Place your custom code in the <b>LoadAsync</b> abstract method to load the syndication resource asynchronously from the specified <see cref="T:System.Uri"/>, <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>, <see cref="T:System.Net.ICredentials"/> and <see cref="T:System.Net.IWebProxy"/>.</para>
                <para>
                    To receive notification when the operation has completed or the operation has been canceled, add an event handler to the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event. 
                    You can cancel a <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> operation by calling the <see cref="M:Argotic.Common.ISyndicationResource.LoadAsyncCancel"/> method.
                </para>
                <para>
                    After calling <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/>, 
                    you must wait for the load operation to complete before attempting to load the syndication resource using the <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.FormatException">The <paramref name="source"/> data does not conform to the expected syndication content format. In this case, the feed remains empty.</exception>
            <exception cref="T:System.InvalidOperationException">This <see cref="T:Argotic.Common.ISyndicationResource"/> has a <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,Argotic.Common.SyndicationResourceLoadSettings,System.Net.ICredentials,System.Net.IWebProxy,System.Object)"/> call in progress.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.LoadAsyncCancel">
            <summary>
            Cancels an asynchronous operation to load the syndication resource.
            </summary>
            <remarks>
                Use the LoadAsyncCancel method to cancel a pending <see cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/> operation. 
                If there is a load operation in progress, this method releases resources used to execute the load operation. 
                If there is no load operation pending, this method does nothing.
            </remarks>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> to which you want to save the syndication resource.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Save</b> virtual method to save the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
                </para>
                <para>
                    <b>Notes to Implementers:</b> When implementing this method, the <paramref name="stream"/> should be passed 
                    to the <see cref="M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)"/> method with the <item>settings</item> parameter as <b>null</b>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <b>Stream</b> to which you want to save the syndication resource.</param>
            <param name="settings">The <see cref="T:Argotic.Common.SyndicationResourceSaveSettings"/> object used to configure the persistance of the <see cref="T:Argotic.Common.ISyndicationResource"/> instance. This value can be <b>null</b>.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Save</b> virtual method to save the syndication resource to the specified <see cref="T:System.IO.Stream"/>.
                </para>
                <para>
                    <b>Notes to Implementers:</b> When implementing this method, the <paramref name="stream"/> should be used to create a <see cref="T:System.Xml.XmlWriter"/> 
                    that is then passed to the <see cref="M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)"/> method.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to save the syndication resource.</param>
            <remarks>
                <para>
                    Place your custom code in the <b>Save</b> virtual method to save the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/>.
                </para>
                <para>
                    <b>Notes to Implementers:</b> When implementing this method, a default instance the <see cref="T:Argotic.Common.SyndicationResourceSaveSettings"/> should be created 
                    and then passed to the <see cref="M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)"/> method along with the supplied <paramref name="writer"/>.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="M:Argotic.Common.ISyndicationResource.Save(System.Xml.XmlWriter,Argotic.Common.SyndicationResourceSaveSettings)">
            <summary>
            Saves the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <b>XmlWriter</b> to which you want to save the syndication resource.</param>
            <param name="settings">The <see cref="T:Argotic.Common.SyndicationResourceSaveSettings"/> object used to configure the persistance of the <see cref="T:Argotic.Common.ISyndicationResource"/> instance.</param>
            <remarks>
                Place your custom code in the <b>Save</b> virtual method to save the syndication resource to the specified <see cref="T:System.Xml.XmlWriter"/> using the <see cref="T:Argotic.Common.SyndicationResourceSaveSettings"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="settings"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.Xml.XmlException">The operation would not result in well formed XML for the syndication resource.</exception>
        </member>
        <member name="P:Argotic.Common.ISyndicationResource.Format">
            <summary>
            Gets the <see cref="T:Argotic.Common.SyndicationContentFormat"/> that the resource implements.
            </summary>
            <value>The <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value that indicates the type of syndication format that the resource implements.</value>
        </member>
        <member name="P:Argotic.Common.ISyndicationResource.Version">
            <summary>
            Gets the <see cref="P:Argotic.Common.ISyndicationResource.Version"/> of the <see cref="T:Argotic.Common.SyndicationContentFormat"/> that the resource conforms to.
            </summary>
            <value>The <see cref="P:Argotic.Common.ISyndicationResource.Version"/> of the <see cref="T:Argotic.Common.SyndicationContentFormat"/> that the resource conforms to.</value>
        </member>
        <member name="E:Argotic.Common.ISyndicationResource.Loaded">
            <summary>
            Occurs when the syndication resource state has been changed by a load operation.
            </summary>
            <seealso cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="T:Argotic.Common.SyndicationDateTimeUtility">
            <summary>
            Provides methods for generating and parsing date-time information exposed by syndicated content. This class cannot be inherited.
            </summary>
            <remarks>
                See <a href="http://www.ietf.org/rfc/rfc0822.txt">RFC #822: Standard for ARPA Internet Text Messages (Date and Time Specification)</a> 
                and <a href="http://www.ietf.org/rfc/rfc3339.txt">RFC #3339: Date and Time on the Internet (Timestamps)</a> for further information about 
                the date-time formats implemented in the <see cref="T:Argotic.Common.SyndicationDateTimeUtility"/> class.
            </remarks>
        </member>
        <member name="M:Argotic.Common.SyndicationDateTimeUtility.ParseRfc3339DateTime(System.String)">
            <summary>
            Converts the specified string representation of a RFC-3339 formatted date to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="value">A string containing a RFC-3339 formatted date to convert.</param>
            <returns>A <see cref="T:System.DateTime"/> equivalent to the RFC-3339 formatted date contained in <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
            <exception cref="T:System.FormatException">The <paramref name="value"/> is not a recognized as a RFC-3339 formatted date.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDateTimeUtility.ToRfc3339DateTime(System.DateTime)">
            <summary>
            Converts the value of the supplied <see cref="T:System.DateTime"/> object to its equivalent RFC-3339 date string representation.
            </summary>
            <param name="utcDateTime">The UTC <see cref="T:System.DateTime"/> object to convert.</param>
            <returns>A string that contains the RFC-3339 date string representation of the supplied <see cref="T:System.DateTime"/> object.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationDateTimeUtility.TryParseRfc3339DateTime(System.String,System.DateTime@)">
            <summary>
            Converts the specified string representation of a RFC-3339 formatted date to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="value">A string containing a RFC-3339 formatted date to convert.</param>
            <param name="result">
                When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the date and time contained in <paramref name="value"/>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue">MinValue</see> if the conversion failed. 
                The conversion fails if the <paramref name="value"/> parameter is a <b>null</b> or empty string, or does not contain a valid string representation of a RFC-3339 formatted date. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="value"/> parameter was converted successfully; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationDateTimeUtility.ReplaceRfc822TimeZoneWithOffset(System.String)">
            <summary>
            Replaces the RFC-822 time-zone component with its offset equivalent.
            </summary>
            <param name="value">A string containing a RFC-822 formatted date to convert.</param>
            <returns>A string containing a RFC-822 formatted date, with the <i>zone</i> component converted to its offset equivalent.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
            <seealso cref="M:Argotic.Common.SyndicationDateTimeUtility.TryParseRfc822DateTime(System.String,System.DateTime@)"/>
        </member>
        <member name="M:Argotic.Common.SyndicationDateTimeUtility.ParseRfc822DateTime(System.String)">
            <summary>
            Converts the specified string representation of a RFC-822 formatted date to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="value">A string containing a RFC-822 formatted date to convert.</param>
            <returns>A <see cref="T:System.DateTime"/> equivalent to the RFC-822 formatted date contained in <paramref name="value"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is an empty string.</exception>
            <exception cref="T:System.FormatException">The <paramref name="value"/> is not a recognized as a RFC-822 formatted date.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDateTimeUtility.ToRfc822DateTime(System.DateTime)">
            <summary>
            Converts the value of the supplied <see cref="T:System.DateTime"/> object to its equivalent RFC-822 date string representation.
            </summary>
            <param name="dateTime">The <see cref="T:System.DateTime"/> object to convert.</param>
            <returns>A string that contains the RFC-822 date string representation of the supplied <see cref="T:System.DateTime"/> object.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationDateTimeUtility.TryParseRfc822DateTime(System.String,System.DateTime@)">
            <summary>
            Converts the specified string representation of a RFC-822 formatted date to its <see cref="T:System.DateTime"/> equivalent.
            </summary>
            <param name="value">A string containing a RFC-822 formatted date to convert.</param>
            <param name="result">
                When this method returns, contains the <see cref="T:System.DateTime"/> value equivalent to the date and time contained in <paramref name="value"/>, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue">MinValue</see> if the conversion failed. 
                The conversion fails if the <paramref name="value"/> parameter is a <b>null</b> or empty string, or does not contain a valid string representation of a RFC-822 formatted date. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="value"/> parameter was converted successfully; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Argotic.Common.EnumerationMetadataAttribute">
            <summary>
            Associates enumeration field description information with a target element. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Argotic.Common.EnumerationMetadataAttribute.enumMetadataDisplayName">
            <summary>
             Private member to hold the display name for the attributed field.
            </summary>
        </member>
        <member name="F:Argotic.Common.EnumerationMetadataAttribute.enumMetadataAlternateValue">
            <summary>
            Private member to hold the alterate textual value for the attributed field.
            </summary>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.EnumerationMetadataAttribute"/> class.
            </summary>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.EnumerationMetadataAttribute"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.EnumerationMetadataAttribute"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance.
            </remarks>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.op_Equality(Argotic.Common.EnumerationMetadataAttribute,Argotic.Common.EnumerationMetadataAttribute)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.op_Inequality(Argotic.Common.EnumerationMetadataAttribute,Argotic.Common.EnumerationMetadataAttribute)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.op_LessThan(Argotic.Common.EnumerationMetadataAttribute,Argotic.Common.EnumerationMetadataAttribute)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.EnumerationMetadataAttribute.op_GreaterThan(Argotic.Common.EnumerationMetadataAttribute,Argotic.Common.EnumerationMetadataAttribute)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="P:Argotic.Common.EnumerationMetadataAttribute.AlternateValue">
            <summary>
            Gets or sets the alternate textual value for the attributed field.
            </summary>
            <value>The alternate textual value for the attributed field.</value>
        </member>
        <member name="P:Argotic.Common.EnumerationMetadataAttribute.DisplayName">
            <summary>
            Gets or sets the display name for the attributed field.
            </summary>
            <value>The display name for the attributed field.</value>
        </member>
        <member name="T:Argotic.Common.Guard">
            <summary>
            Provides common validation methods shared across the framework entities. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not a null reference.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <remarks>
                If the <paramref name="value"/> is a <b>null</b> reference, an <see cref="T:System.ArgumentNullException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not a null reference or an empty string.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <remarks>
                If the <paramref name="value"/> is a <b>null</b> reference or an empty string, an <see cref="T:System.ArgumentNullException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotGreaterThan(System.Int32,System.String,System.Int32)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not greater than the specified maximum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="maximum">The maximum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotGreaterThan(System.Int64,System.String,System.Int64)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not greater than the specified maximum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="maximum">The maximum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotGreaterThan(System.Decimal,System.String,System.Decimal)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not greater than the specified maximum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="maximum">The maximum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotLessThan(System.Int32,System.String,System.Int32)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not less than the specified minimum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotLessThan(System.Int64,System.String,System.Int64)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not less than the specified minimum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotLessThan(System.Decimal,System.String,System.Decimal)">
            <summary>
            Validates that the supplied <paramref name="value"/> is not less than the specified minimum.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotOutOfRange(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Validates that the supplied <paramref name="value"/> is within the specified range.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value of the range.</param>
            <param name="maximum">The maximum acceptable value of the range.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/> <u>or</u> <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotOutOfRange(System.Int64,System.String,System.Int32,System.Int64)">
            <summary>
            Validates that the supplied <paramref name="value"/> is within the specified range.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value of the range.</param>
            <param name="maximum">The maximum acceptable value of the range.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/> <u>or</u> <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="M:Argotic.Common.Guard.ArgumentNotOutOfRange(System.Decimal,System.String,System.Int32,System.Decimal)">
            <summary>
            Validates that the supplied <paramref name="value"/> is within the specified range.
            </summary>
            <param name="value">The value of the method argument to validate.</param>
            <param name="name">The name of the method argument.</param>
            <param name="minimum">The minimum acceptable value of the range.</param>
            <param name="maximum">The maximum acceptable value of the range.</param>
            <remarks>
                If the <paramref name="value"/> is <b>less than</b> the specified <paramref name="minimum"/> <u>or</u> <b>greater than</b> the specified <paramref name="maximum"/>, 
                an <see cref="T:System.ArgumentOutOfRangeException"/> is raised using the supplied <paramref name="name"/>.
            </remarks>
        </member>
        <member name="T:Argotic.Common.MimeMediaTypeAttribute">
            <summary>
            Associates IANA MIME media type information with a target element. This class cannot be inherited.
            </summary>
            <remarks>
                See <a href="http://www.iana.org/assignments/media-types">http://www.iana.org/assignments/media-types</a> for a listing of the registered IANA MIME media types and sub-types.
            </remarks>
        </member>
        <member name="F:Argotic.Common.MimeMediaTypeAttribute.mimeMediaTypeName">
            <summary>
            Private member to hold the MIME media type name.
            </summary>
        </member>
        <member name="F:Argotic.Common.MimeMediaTypeAttribute.mimeMediaSubTypeName">
            <summary>
            Private member to hold the MIME media sub-type name.
            </summary>
        </member>
        <member name="F:Argotic.Common.MimeMediaTypeAttribute.mimeMediaDocumentation">
            <summary>
            Private member to hold a URI that points to the documentation the describes the MIME media type.
            </summary>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.MimeMediaTypeAttribute"/> class.
            </summary>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.MimeMediaTypeAttribute"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.MimeMediaTypeAttribute"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance.
            </remarks>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.op_Equality(Argotic.Common.MimeMediaTypeAttribute,Argotic.Common.MimeMediaTypeAttribute)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.op_Inequality(Argotic.Common.MimeMediaTypeAttribute,Argotic.Common.MimeMediaTypeAttribute)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.op_LessThan(Argotic.Common.MimeMediaTypeAttribute,Argotic.Common.MimeMediaTypeAttribute)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.MimeMediaTypeAttribute.op_GreaterThan(Argotic.Common.MimeMediaTypeAttribute,Argotic.Common.MimeMediaTypeAttribute)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="P:Argotic.Common.MimeMediaTypeAttribute.Documentation">
            <summary>
            Gets or sets a URI that points to the documentation the describes the MIME media type for the attributed field.
            </summary>
            <value>A <see cref="T:System.Uri"/> that points to the documentation the describes the MIME media type for the attributed field.</value>
        </member>
        <member name="P:Argotic.Common.MimeMediaTypeAttribute.Name">
            <summary>
            Gets or sets the MIME media type name for the attributed field.
            </summary>
            <value>The MIME media type name for the attributed field.</value>
        </member>
        <member name="P:Argotic.Common.MimeMediaTypeAttribute.SubName">
            <summary>
            Gets or sets the MIME media sub-type name for the attributed field.
            </summary>
            <value>The MIME media sub-type name for the attributed field.</value>
        </member>
        <member name="T:Argotic.Common.SyndicationContentFormat">
            <summary>
            Specifies the web content syndication format that the syndicated content conforms to.
            </summary>
            <seealso cref="T:Argotic.Common.EnumerationMetadataAttribute"/>
            <seealso cref="T:Argotic.Common.MimeMediaTypeAttribute"/>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.None">
            <summary>
            No web content syndication format specified.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.Apml">
            <summary>
            Indicates that the syndication resource conforms to the Attention Profiling Markup Language (APML) 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.Atom">
            <summary>
             Indicates that the syndication resource conforms to the Atom 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.BlogML">
            <summary>
            Indicates that the syndication resource conforms to the Web Log Markup Language (BlogML) 2.0 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.MicroSummaryGenerator">
            <summary>
            Indicates that the syndication resource conforms to the Microsummary Generator 0.1 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.NewsML">
            <summary>
            Indicates that the syndication resource conforms to the News Markup Language (NewsML) G2 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.OpenSearchDescription">
            <summary>
            Indicates that the syndication resource conforms to the OpenSearch Description 1.1 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.Opml">
            <summary>
            Indicates that the syndication resource conforms to the Outline Processor Markup Language (OPML) 2.0 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.Rsd">
            <summary>
            Indicates that the syndication resource conforms to the Really Simple Discovery (RSD) 1.0 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.Rss">
            <summary>
            Indicates that the syndication resource conforms to the Really Simple Syndication (RSS) 2.0 syndication format.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationContentFormat.Rdf">
            <summary>
            Indicates that the syndication resource conforms to the Resource Description Framework (RDF) 1.0 syndication format.
            </summary>
        </member>
        <member name="T:Argotic.Common.SyndicationDiscoveryUtility">
            <summary>
            Provides methods for extracting peer-to-peer auto-discovery and resource information from syndicated content. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationDiscoveryUtility.frameworkUserAgent">
            <summary>
            Private member to hold the default user agent sent by the framework when making HTTP web requests.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.SyndicationContentFormatByName(System.String)">
            <summary>
            Returns the <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value that corresponds to the specified format name.
            </summary>
            <param name="name">The name of the syndication content format.</param>
            <returns>A <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value that corresponds to the specified string, otherwise returns <b>SyndicationContentFormat.None</b>.</returns>
            <remarks>This method disregards case of specified format name.</remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.Uri)">
            <summary>
            Returns the <see cref="T:Argotic.Common.SyndicationContentFormat"/> of the syndicated resource located at the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the syndication resource to determine syndication content format for.</param>
            <returns>
                A <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Argotic.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SyndicationContentFormatGet method.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="SyndicationContentFormatGet(Uri source)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns the <see cref="T:Argotic.Common.SyndicationContentFormat"/> of the syndicated resource located at the specified <see cref="T:System.Uri"/> using the supplied <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> of the syndication resource to determine syndication content format for.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>
                A <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Argotic.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.IO.Stream)">
            <summary>
            Returns the <see cref="T:Argotic.Common.SyndicationContentFormat"/> of the syndicated resource represented by the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that represents the XML data for the syndicated resource.</param>
            <returns>
                A <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Argotic.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.Xml.XmlReader)">
            <summary>
            Returns the <see cref="T:Argotic.Common.SyndicationContentFormat"/> of the syndicated resource represented by the supplied <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">A <see cref="T:System.Xml.XmlReader"/> that represents the XML data for the syndicated resource.</param>
            <returns>
                A <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Argotic.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.SyndicationContentFormatGet(System.Xml.XPath.XPathNavigator)">
            <summary>
            Returns the <see cref="T:Argotic.Common.SyndicationContentFormat"/> of the syndicated resource represented by the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the XML data for the syndicated resource.</param>
            <returns>
                A <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value indicating the format of the syndicated resource. 
                If unable to determine format, returns <see cref="F:Argotic.Common.SyndicationContentFormat.None"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ExtractHtmlAttributes(System.String)">
            <summary>
            Returns a <see cref="T:System.Collections.Hashtable"/> of the HTML attribute name/value pairs for the supplied content.
            </summary>
            <param name="content">The HTML content to parse.</param>
            <returns>A <see cref="T:System.Collections.Hashtable"/> of the HTML attribute name/value pairs extracted the supplied <paramref name="content"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ExtractUrls(System.String)">
            <summary>
            Returns a collection of <see cref="T:System.Uri"/> instances that represent HTML header links and/or anchor tags in the supplied HTML markup.
            </summary>
            <param name="content">The HTML markup to parse.</param>
            <returns>A collection of <see cref="T:System.Uri"/> instances that represent HTML anchor elements and header links in the supplied HTML markup.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.GetAbsoluteBaseUri(System.Web.HttpRequest)">
            <summary>
            Returns a <see cref="T:System.Uri"/> that represents the absolute base URI of the supplied <see cref="T:System.Web.HttpRequest"/>.
            </summary>
            <param name="request">The <see cref="T:System.Web.HttpRequest"/> to generate an absolute base <see cref="T:System.Uri"/> for.</param>
            <returns>
                A <see cref="T:System.Uri"/> that represents the absolute base URI of the supplied <see cref="T:System.Web.HttpRequest"/>. 
                If unable to build an absolute base <see cref="T:System.Uri"/>, returns the absolute URI of the supplied <see cref="T:System.Web.HttpRequest"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="request"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.SourceReferencesTarget(System.Uri,System.Uri)">
            <summary>
            Returns a value indicating if the source <see cref="T:System.Uri"/> references the target <see cref="T:System.Uri"/>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the source web resource that will be searched.</param>
            <param name="target">A <see cref="T:System.Uri"/> that represents the target web resource being searched for.</param>
            <returns><b>true</b> if the <paramref name="source"/> contains at least one link to the <paramref name="target"/>, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the SourceReferencesTarget method.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="SourceReferencesTarget(Uri source, Uri target)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.SourceReferencesTarget(System.Uri,System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a value indicating if the source <see cref="T:System.Uri"/> references the target <see cref="T:System.Uri"/>, using the specifed <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that represents the source web resource that will be searched.</param>
            <param name="target">A <see cref="T:System.Uri"/> that represents the target web resource being searched for.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> contains at least one link to the <paramref name="target"/>, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="target"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.UriExists(System.Uri)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> exists.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <returns><b>true</b> if the <paramref name="uri"/> exists, otherwise <b>false</b>.</returns>
            <remarks>
                This method will return <b>false</b> if the <paramref name="uri"/> is a null reference or the <paramref name="uri"/> is otherwise inaccessible.
            </remarks>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the UriExists method.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="UriExists(Uri uri)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.UriExists(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> exists using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns><b>true</b> if the <paramref name="uri"/> exists, otherwise <b>false</b>.</returns>
            <remarks>
                This method will return <b>false</b> if the <paramref name="uri"/> is a null reference or the <paramref name="uri"/> is otherwise inaccessible.
            </remarks>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ConditionalGet(System.Uri,System.DateTime,System.String)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/> and entity tag.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <returns>A <see cref="T:System.Net.HttpWebResponse"/> for the <paramref name="source"/> if it has been modfied, otherwise <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the ConditionalGet method.">
                    <code source="..\..\Documentation\Microsoft .NET 2.0\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="ConditionalGet(Uri source, DateTime lastModified, string entityTag)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ConditionalGet(System.Uri,System.DateTime,System.String,System.Net.ICredentials)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>A <see cref="T:System.Net.HttpWebResponse"/> for the <paramref name="source"/> if it has been modfied, otherwise <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ConditionalGet(System.Uri,System.DateTime,System.String,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <returns>A <see cref="T:System.Net.HttpWebResponse"/> for the <paramref name="source"/> if it has been modfied, otherwise <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.TryConditionalGet(System.Uri,System.DateTime,System.String,System.Net.HttpWebResponse@)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/> and entity tag.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="response">
                When this method returns, contains the <see cref="T:System.Net.HttpWebResponse"/> for the supplied <paramref name="source"/>, if the web resource has been modified, or <b>null</b> if the web resource has <u>not</u> been modified. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> has been modified, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the TryConditionalGet method.">
                    <code source="..\..\Documentation\Microsoft .NET 2.0\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="TryConditionalGet(Uri source, DateTime lastModified, string entityTag, out WebResponse response)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.TryConditionalGet(System.Uri,System.DateTime,System.String,System.Net.ICredentials,System.Net.HttpWebResponse@)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="response">
                When this method returns, contains the <see cref="T:System.Net.HttpWebResponse"/> for the supplied <paramref name="source"/>, if the web resource has been modified, or <b>null</b> if the web resource has <u>not</u> been modified. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> has been modified, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.TryConditionalGet(System.Uri,System.DateTime,System.String,System.Net.ICredentials,System.Net.IWebProxy,System.Net.HttpWebResponse@)">
            <summary>
            Performs a conditional get operation against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.DateTime"/>, entity tag and <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="source">The <see cref="T:System.Uri"/> to perform a conditional GET operation against.</param>
            <param name="lastModified">A <see cref="T:System.DateTime"/> object that represents the date and time at which the <paramref name="source"/> was last known to be modified.</param>
            <param name="entityTag">The entity tag provided by the <paramref name="source"/> that is used to determine change in content.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> when required. This value can be <b>null</b>.
            </param>
            <param name="response">
                When this method returns, contains the <see cref="T:System.Net.HttpWebResponse"/> for the supplied <paramref name="source"/>, if the web resource has been modified, or <b>null</b> if the web resource has <u>not</u> been modified. 
                This parameter is passed uninitialized.
            </param>
            <returns><b>true</b> if the <paramref name="source"/> has been modified, otherwise <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ExtractDiscoverableSyndicationEndpoints(System.String)">
            <summary>
            Extracts auto-discoverable syndication endpoints from the supplied HTML markup.
            </summary>
            <param name="content">The HTML markup to parse.</param>
            <returns>
                A collection of <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints contained within the <paramref name="content"/>.
            </returns>
            <remarks>
                See <a href="http://www.rssboard.org/rss-autodiscovery">http://www.rssboard.org/rss-autodiscovery</a> for 
                further information about the auto-discovery of syndicated content.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ExtractDiscoverableSyndicationEndpoints(System.IO.Stream)">
            <summary>
            Extracts auto-discoverable syndication endpoints from the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that represents the HTML markup to parse.</param>
            <returns>
                A collection of <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints contained within the <paramref name="stream"/>.
            </returns>
            <remarks>
                See <a href="http://www.rssboard.org/rss-autodiscovery">http://www.rssboard.org/rss-autodiscovery</a> for 
                further information about the auto-discovery of syndicated content.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.LocateDiscoverableSyndicationEndpoints(System.Uri)">
            <summary>
            Returns a collection of <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints for the supplied <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> that represents the URL of the  web resource to parse.</param>
            <returns>
                A collection of <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints for the web resource located at the <paramref name="uri"/>.
            </returns>
            <remarks>
                See <a href="http://www.rssboard.org/rss-autodiscovery">http://www.rssboard.org/rss-autodiscovery</a> for 
                further information about the auto-discovery of syndicated content.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the LocateDiscoverableSyndicationEndpoints method.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="LocateDiscoverableSyndicationEndpoints(Uri uri)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.LocateDiscoverableSyndicationEndpoints(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a collection of <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints for the supplied <see cref="T:System.Uri"/> 
            using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> that represents the URL of the web resource to parse.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>
                A collection of <see cref="T:Argotic.Common.DiscoverableSyndicationEndpoint"/> objects that represent auto-discoverable syndicated content endpoints for the web resource located at the <paramref name="uri"/>.
            </returns>
            <remarks>
                See <a href="http://www.rssboard.org/rss-autodiscovery">http://www.rssboard.org/rss-autodiscovery</a> for 
                further information about the auto-discovery of syndicated content.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ExtractPingbackNotificationServer(System.String)">
            <summary>
            Extracts a <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor"/> that represents a pingback auto-discovery link from the supplied HTML markup.
            </summary>
            <param name="content">The HTML markup to parse.</param>
            <returns>
                A <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor"/> that represents the pingback auto-discovery link extracted from the <paramref name="html"/>. 
                If no pingback auto-discovery link was found, returns <b>null</b>.
            </returns>
            <remarks>
                <para>
                    Pingback enabled resources that utilize the link mechanism will contain a 
                    &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                </para>
                <para>
                    The <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor"/> that is returned will have an <i>Href</i> property that points to the 
                    absolute URI of the pingback XML-RPC server, and a <i>rel</i> attribute of pingback. 
                    The <i>Title</i> property and <i>type</i> attribute will also be extracted if available.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.IsPingbackEnabled(System.Uri)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> is a pingback enabled web resource.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <returns><b>true</b> if the <paramref name="uri"/> is pingback enabled, otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    There are two mechanisms used when determining if a web resource is pingback enabled; 
                    the presence of an HTML/XHTML &lt;link&gt; element with a <i>rel</i> attribute value of <b>pingback</b> 
                    <u>or</u> an HTTP header named <b>X-Pingback</b>. A web resource is considered pingback enabled if it utilizes 
                    either or both of these mechanisms.
                </para>
                <para>
                    To conform to the Pingback 1.0 specification, the following information should apply to a pingback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Pingback enabled resources that utilize the link mechanism will contain a 
                                &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                            </description>
                        </item>
                        <item>
                            <description>
                                Pingback enabled resources that utilize the HTTP header mechanism will contain an 
                                HTTP header named <i>X-Pingback</i> whose value is the absolute URI of the pingback XML-RPC server.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    This method is optimized to determine pingback enablement by examining the HTTP headers 
                    before attempting to parse the response data for an pingback XML-RPC server link.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the IsPingbackEnabled method.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="IsPingbackEnabled(Uri uri)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.IsPingbackEnabled(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> is a pingback enabled web resource using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns><b>true</b> if the <paramref name="uri"/> is pingback enabled, otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    There are two mechanisms used when determining if a web resource is pingback enabled; 
                    the presence of an HTML/XHTML &lt;link&gt; element with a <i>rel</i> attribute value of <b>pingback</b> 
                    <u>or</u> an HTTP header named <b>X-Pingback</b>. A web resource is considered pingback enabled if it utilizes 
                    either or both of these mechanisms.
                </para>
                <para>
                    To conform to the Pingback 1.0 specification, the following information should apply to a pingback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Pingback enabled resources that utilize the link mechanism will contain a 
                                &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                            </description>
                        </item>
                        <item>
                            <description>
                                Pingback enabled resources that utilize the HTTP header mechanism will contain an 
                                HTTP header named <i>X-Pingback</i> whose value is the absolute URI of the pingback XML-RPC server.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    This method is optimized to determine pingback enablement by examining the HTTP headers 
                    before attempting to parse the response data for an pingback XML-RPC server link.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.LocatePingbackNotificationServer(System.Uri)">
            <summary>
            Returns a <see cref="T:System.Uri"/> that represents a pingback XML-RPC server endpoint using the Pingback server auto-discovery mechanisms for the supplied <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of a web resource to perform pingback auto-discovery against.</param>
            <returns>
                A <see cref="T:System.Uri"/> that represents the absolute URI of the pingback XML-RPC server. 
                If pingback server auto-discovery fails to locate a pingback XML-RPC server endpoint, returns <b>null</b>.
            </returns>
            <remarks>
                <para>
                    There are two mechanisms used when determining if a web resource is pingback enabled; 
                    the presence of an HTML/XHTML &lt;link&gt; element with a <i>rel</i> attribute value of <b>pingback</b> 
                    <u>or</u> an HTTP header named <b>X-Pingback</b>. A web resource is considered pingback enabled if it utilizes 
                    either or both of these mechanisms.
                </para>
                <para>
                    To conform to the Pingback 1.0 specification, the following information should apply to a pingback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Pingback enabled resources that utilize the link mechanism will contain a 
                                &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                            </description>
                        </item>
                        <item>
                            <description>
                                Pingback enabled resources that utilize the HTTP header mechanism will contain an 
                                HTTP header named <i>X-Pingback</i> whose value is the absolute URI of the pingback XML-RPC server.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    This method is optimized to locate the pingback XML-RPC server endpoint within the HTTP headers 
                    before attempting to parse the response data for an pingback XML-RPC server link.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the LocatePingbackNotificationServer method.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="LocatePingbackNotificationServer(Uri uri)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.LocatePingbackNotificationServer(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a <see cref="T:System.Uri"/> that represents a pingback XML-RPC server endpoint using the Pingback server auto-discovery mechanisms for the supplied <see cref="T:System.Uri"/>
            using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of a web resource to perform pingback auto-discovery against.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>
                A <see cref="T:System.Uri"/> that represents the absolute URI of the pingback XML-RPC server. 
                If pingback server auto-discovery fails to locate a pingback XML-RPC server endpoint, returns <b>null</b>.
            </returns>
            <remarks>
                <para>
                    There are two mechanisms used when determining if a web resource is pingback enabled; 
                    the presence of an HTML/XHTML &lt;link&gt; element with a <i>rel</i> attribute value of <b>pingback</b> 
                    <u>or</u> an HTTP header named <b>X-Pingback</b>. A web resource is considered pingback enabled if it utilizes 
                    either or both of these mechanisms.
                </para>
                <para>
                    To conform to the Pingback 1.0 specification, the following information should apply to a pingback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Pingback enabled resources that utilize the link mechanism will contain a 
                                &lt;link rel="pingback" href="{Absolute URI of the pingback XML-RPC server}" /&gt; element.
                            </description>
                        </item>
                        <item>
                            <description>
                                Pingback enabled resources that utilize the HTTP header mechanism will contain an 
                                HTTP header named <i>X-Pingback</i> whose value is the absolute URI of the pingback XML-RPC server.
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    This method is optimized to locate the pingback XML-RPC server endpoint within the HTTP headers 
                    before attempting to parse the response data for an pingback XML-RPC server link.
                </para>
                <para>
                    See <a href="http://www.hixie.ch/specs/pingback/pingback">http://www.hixie.ch/specs/pingback/pingback</a> 
                    for more information about the pingback notification mechanism.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ExtractTrackbackNotificationServers(System.String)">
            <summary>
            Extracts embedded RDF Trackback discovery meta-data from the supplied HTML markup.
            </summary>
            <param name="content">The HTML markup to parse.</param>
            <returns>
                A collection of <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> objects that represent embedded Trackback ping URLs contained within the <paramref name="content"/>.
            </returns>
            <remarks>
                See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                further information about the auto-discovery of Trackback ping URLs.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.ExtractTrackbackNotificationServers(System.IO.Stream)">
            <summary>
            Extracts embedded RDF Trackback discovery meta-data from the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that represents the HTML markup to parse.</param>
            <returns>
                A collection of <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> objects that represent embedded Trackback ping URLs contained within the <paramref name="stream"/>.
            </returns>
            <remarks>
                See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                further information about the auto-discovery of Trackback ping URLs.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.IsTrackbackEnabled(System.Uri)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> is a trackback enabled web resource.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <returns><b>true</b> if the <paramref name="uri"/> is trackback enabled, otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    The auto-discovery mechanism for trackback utilizes embedded RDF meta-data elements within the web resource.
                </para>
                <para>
                    To conform to the Trackback 1.2 specification, the following information should apply to a trackback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Trackback enabled resources will contain one or more embedded RDF elements that describe where to send pings for web log entries.
                            </description>
                        </item>
                        <item>
                            <description>
                                A sample embedded RDF element looks like this: 
                                <para>
                                    &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"&gt;
                                        &lt;rdf:Description 
                                            rdf:about="http://www.foo.com/archive.html#foo" 
                                            dc:identifier="http://www.foo.com/archive.html#foo" 
                                            dc:title="Foo Bar" 
                                            trackback:ping="http://www.foo.com/tb.cgi/5" 
                                        /&gt;
                                    &lt;/rdf:RDF&gt;
                                </para>
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                    further information about the auto-discovery of Trackback ping URLs.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the IsTrackbackEnabled method.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="IsTrackbackEnabled(Uri uri)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.IsTrackbackEnabled(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a value indicating if the supplied <see cref="T:System.Uri"/> is a trackback enabled web resource using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> to validate.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns><b>true</b> if the <paramref name="uri"/> is trackback enabled, otherwise <b>false</b>.</returns>
            <remarks>
                <para>
                    The auto-discovery mechanism for trackback utilizes embedded RDF meta-data elements within the web resource.
                </para>
                <para>
                    To conform to the Trackback 1.2 specification, the following information should apply to a trackback enabled resource:
                    <list type="bullet">
                        <item>
                            <description>
                                Trackback enabled resources will contain one or more embedded RDF elements that describe where to send pings for web log entries.
                            </description>
                        </item>
                        <item>
                            <description>
                                A sample embedded RDF element looks like this: 
                                <para>
                                    &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"&gt;
                                        &lt;rdf:Description 
                                            rdf:about="http://www.foo.com/archive.html#foo" 
                                            dc:identifier="http://www.foo.com/archive.html#foo" 
                                            dc:title="Foo Bar" 
                                            trackback:ping="http://www.foo.com/tb.cgi/5" 
                                        /&gt;
                                    &lt;/rdf:RDF&gt;
                                </para>
                            </description>
                        </item>
                    </list>
                </para>
                <para>
                    See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                    further information about the auto-discovery of Trackback ping URLs.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.LocateTrackbackNotificationServers(System.Uri)">
            <summary>
            Returns a collection of <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> objects that represent trackback ping URL endpoints for the supplied <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> that represents the URL of the  web resource to parse.</param>
            <returns>
                A collection of <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> objects that represent embedded Trackback ping URLs for the web resource located at the <paramref name="uri"/>.
            </returns>
            <remarks>
                See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                further information about the auto-discovery of Trackback ping URLs.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
            <example>
                <code lang="cs" title="The following code example demonstrates the usage of the LocateTrackbackNotificationServers method.">
                    <code source="..\..\Documentation\Microsoft .NET 3.5\CodeExamplesLibrary\Common\SyndicationDiscoveryUtilityExample.cs" region="LocateTrackbackNotificationServers(Uri uri)"/>
                </code>
            </example>
        </member>
        <member name="M:Argotic.Common.SyndicationDiscoveryUtility.LocateTrackbackNotificationServers(System.Uri,System.Net.ICredentials)">
            <summary>
            Returns a collection of <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> objects that represent trackback ping URL endpoints for the supplied <see cref="T:System.Uri"/> 
            using the specified <see cref="T:System.Net.ICredentials">credentials</see>.
            </summary>
            <param name="uri">A <see cref="T:System.Uri"/> that represents the URL of the web resource to parse.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the web resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <returns>
                A collection of <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> objects that represent embedded Trackback ping URLs for the web resource located at the <paramref name="uri"/>.
            </returns>
            <remarks>
                See <a href="http://www.sixapart.com/pronet/docs/trackback_spec">http://www.sixapart.com/pronet/docs/trackback_spec</a> for 
                further information about the auto-discovery of Trackback ping URLs.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="uri"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Argotic.Common.SyndicationDiscoveryUtility.FrameworkUserAgent">
            <summary>
            Gets the raw user agent string used by the framework when sending web requests.
            </summary>
            <value>A string that represents information such as the client application name, version, host operating system, and language.</value>
        </member>
        <member name="T:Argotic.Common.SyndicationEncodingUtility">
            <summary>
            Provides methods for encoding and decoding information exposed by syndicated content. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.String)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied XML data.
            </summary>
            <param name="xml">The XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied XML data. 
                The supplied <paramref name="xml"/> data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xml"/> data is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="xml"/> data is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.IO.Stream)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object that contains the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="stream"/>. 
                The supplied <paramref name="stream"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <remarks>
                The character encoding of the supplied <paramref name="stream"/> is automatically determined based on the <i>encoding</i> attribute of the XML document declaration. 
                If the character encoding cannot be determined, a default encoding of <see cref="P:System.Text.Encoding.UTF8"/> is used.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.IO.Stream"/> using the specified <see cref="T:System.Text.Encoding"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> object that contains the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the character encoding to use when reading the supplied <paramref name="stream"/>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="stream"/>. 
                The supplied <paramref name="stream"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="encoding"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.IO.TextReader)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader"/> object that contains the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="reader"/>. 
                The supplied <paramref name="reader"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="reader"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. 
                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
            </param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="source"/>. 
                The supplied <paramref name="source"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.CreateSafeNavigator(System.Uri,System.Net.ICredentials,System.Net.IWebProxy,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:System.Xml.XPath.XPathNavigator"/> against the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the XML data to be navigated by the created <see cref="T:System.Xml.XPath.XPathNavigator"/>.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. 
                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings.
            </param>
            <param name="encoding">A <see cref="T:System.Text.Encoding"/> object that indicates the expected character encoding of the supplied <paramref name="source"/>. This value can be <b>null</b>.</param>
            <returns>
                An <see cref="T:System.Xml.XPath.XPathNavigator"/> that provides a cursor model for navigating the supplied <paramref name="source"/>. 
                The supplied <paramref name="source"/> XML data is parsed to remove invalid XML characters that would normally prevent 
                a navigator from being created.
            </returns>
            <remarks>
                If the <paramref name="encoding"/> is <b>null</b>, the character encoding of the supplied <paramref name="source"/> is determined automatically. 
                Otherwise the specified <paramref name="encoding"/> is used when reading the XML data represented by the supplied <paramref name="source"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.CreateWebRequest(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Returns a <see cref="T:System.Net.WebRequest"/> that makes a request for a resource located at the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the resource to be retrieved.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials if supported by the underlying protocol.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. 
                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings if supported by the underlying protocol.
            </param>
            <returns>
                An <see cref="T:System.Net.WebRequest"/> that makes a request to the <paramref name="source"/>. If unable to create a <see cref="T:System.Net.WebRequest"/> for 
                the specified <paramref name="source"/>, returns a <b>null</b> reference (Nothing in Visual Basic).
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.CreateWebResponse(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Returns the <see cref="T:System.Net.WebResponse"/> to a request for a resource located at the supplied <see cref="T:System.Uri"/> using the specified <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="source">A <see cref="T:System.Uri"/> that points to the location of the resource to be retrieved.</param>
            <param name="credentials">
                A <see cref="T:System.Net.ICredentials"/> that provides the proper set of credentials to the <paramref name="source"/> resource when required. 
                If <paramref name="credentials"/> is <b>null</b>, request is made using the default application credentials if supported by the underlying protocol.
            </param>
            <param name="proxy">
                A <see cref="T:System.Net.IWebProxy"/> that provides proxy access to the <paramref name="source"/> resource when required. 
                If <paramref name="proxy"/> is <b>null</b>, request is made using the <see cref="T:System.Net.WebRequest"/> default proxy settings if supported by the underlying protocol.
            </param>
            <returns>
                An <see cref="T:System.Net.WebResponse"/> that contains the response from the requested resource. If unable to create a <see cref="T:System.Net.WebResponse"/> for 
                the requested <paramref name="source"/>, returns a <b>null</b> reference (Nothing in Visual Basic).
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.DecodeBase64String(System.String)">
            <summary>
            Decodes a base64 encoded string.
            </summary>
            <param name="encodedValue">The base64 encoded string to decode.</param>
            <returns>A <see cref="T:System.IO.Stream"/> the represents the decoded result of the base64 encoded value.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="encodedValue"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="encodedValue"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.DecodeHtmlEscapedString(System.String)">
            <summary>
            Decodes an HTML escaped string.
            </summary>
            <param name="escapedValue">The HTML escaped string to decode.</param>
            <returns>A string the represents the unescaped result of the HTML escaped value.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="escapedValue"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="escapedValue"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.EncodeInvalidXmlHexadecimalCharacters(System.String)">
            <summary>
            Encodes the supplied string so that it can be safely represented in XML.
            </summary>
            <param name="content">A string that represents the XML data to parse for invalid XML hexadecimal characters.</param>
            <returns>A string that has been encoded to be safe for XML.</returns>
            <remarks>
                <para>The encoding process replaces invalid XML hexadecimal characters with their equivalent decimal representation.</para>
                <para>
                    Hexadecimal characters that are valid include: #x9, #xA, #xD, [#x20-#xD7FF], [#xE000-#xFFFD], [#x10000-#x10FFFF], 
                    and any Unicode character; excluding the surrogate blocks FFFE and FFFF.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.GetCharacterEncoding(System.Web.HttpRequest)">
            <summary>
            Extracts the character encoding for the content type of the supplied <see cref="T:System.Web.HttpRequest"/>.
            </summary>
            <param name="request">The HTTP values sent by a client during a Web request.</param>
            <returns>
                A <see cref="T:System.Text.Encoding"/> that represents character encoding of the Content-Type <i>charset</i> attribute. 
                If the <i>charset</i> attribute is unavailable or invalid, returns <b>null</b>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="request"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.GetXmlEncoding(System.Byte[])">
            <summary>
            Returns an <see cref="T:System.Text.Encoding"/> that represents the XML character encoding for the supplied array of bytes.
            </summary>
            <param name="data">An array of bytes that represents an XML data source to determine the character encoding for.</param>
            <returns>
                A <see cref="T:System.Text.Encoding"/> that represents the character encoding specified by the XML data source. 
                If the character encoding is not specified or unable to be determined, returns <see cref="P:System.Text.Encoding.UTF8"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.GetXmlEncoding(System.IO.Stream)">
            <summary>
            Returns an <see cref="T:System.Text.Encoding"/> that represents the XML character encoding for the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream"/> that represents an XML data source to determine the character encoding for.</param>
            <returns>
                A <see cref="T:System.Text.Encoding"/> that represents the character encoding specified by the XML data source. 
                If the character encoding is not specified or unable to be determined, returns <see cref="P:System.Text.Encoding.UTF8"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.GetXmlEncoding(System.String)">
            <summary>
            Returns an <see cref="T:System.Text.Encoding"/> that represents the XML character encoding for the supplied content.
            </summary>
            <param name="content">A string that represents the XML data to determine the character encoding for.</param>
            <returns>
                A <see cref="T:System.Text.Encoding"/> that represents the character encoding specified by the XML data. 
                If the character encoding is not specified or unable to be determined, returns <see cref="P:System.Text.Encoding.UTF8"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.RemoveInvalidXmlHexadecimalCharacters(System.String)">
            <summary>
            Sanitizes the supplied string so that it can be safely represented in XML.
            </summary>
            <param name="content">A string that represents the XML data to parse for invalid XML hexadecimal characters.</param>
            <returns>A string that has been sanitized to be safe for XML.</returns>
            <remarks>
                <para>The sanitation process removes characters that are invalid for XML encoding.</para>
                <para>
                    Hexadecimal characters that are valid include: #x9, #xA, #xD, [#x20-#xD7FF], [#xE000-#xFFFD], [#x10000-#x10FFFF], 
                    and any Unicode character; excluding the surrogate blocks FFFE and FFFF.
                </para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="content"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.EncodeSafeDirectoryName(System.String)">
            <summary>
            Converts a string into a value that can be safely used as a <see cref="T:System.IO.Directory">directory</see> name.
            </summary>
            <param name="name">The directory name to encode.</param>
            <returns>A string that can be safely used as an argument when <see cref="M:System.IO.Directory.CreateDirectory(System.String)">creating a directory</see>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationEncodingUtility.GetStreamBytes(System.IO.Stream)">
            <summary>
            Gets an array of bytes that represent the data of the supplied <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to get an array of bytes for.</param>
            <returns>An array of bytes that represent the data of the supplied <paramref name="stream"/>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:Argotic.Common.SyndicationResourceLoadedEventArgs">
            <summary>
            Provides data for the <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event.
            </summary>
            <remarks>
                A <see cref="E:Argotic.Common.ISyndicationResource.Loaded"/> event occurs whenever the <see cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)"/> 
                or <see cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/> methods are called.
            </remarks>
            <seealso cref="T:Argotic.Common.ISyndicationResource"/>
            <seealso cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable)"/>
            <seealso cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XmlReader)"/>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadedEventArgs.emptyEventArguments">
            <summary>
            Private member to hold instance of event with no event data.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadedEventArgs.eventNavigator">
            <summary>
            Private member to hold read-only XPathNavigator object for navigating the XML data used to load the syndication resource.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadedEventArgs.eventSource">
            <summary>
            Private member to hold the URI that the syndication resource information was retrieved from.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadedEventArgs.eventCredentials">
            <summary>
            Private member to hold the network credentials used for authenticating the request to a web resource.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadedEventArgs.eventProxy">
            <summary>
            Private member to hold the network proxy to used to access a web resource.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadedEventArgs.eventUserToken">
            <summary>
            Private member to hold an object containing state information that was passed to the asynchronous load operation.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.SyndicationResourceLoadedEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.SyndicationResourceLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication resource.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,System.Uri,System.Net.ICredentials,System.Net.IWebProxy)">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.SyndicationResourceLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>, <see cref="T:System.Net.ICredentials">credentials</see> and <see cref="T:System.Net.IWebProxy">proxy</see>.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication resource.</param>
            <param name="source">
                The <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="credentials">
               The <see cref="T:System.Net.ICredentials"/> that were used to authenticate the request to an Internet resource. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="proxy">
                The <see cref="T:System.Net.IWebProxy"/> used to access the Internet resource. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.#ctor(System.Xml.XPath.IXPathNavigable,System.Uri,System.Net.ICredentials,System.Net.IWebProxy,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.SyndicationResourceLoadedEventArgs"/> class using the supplied <see cref="T:System.Xml.XPath.IXPathNavigable"/>, <see cref="T:System.Net.ICredentials">credentials</see>, <see cref="T:System.Net.IWebProxy">proxy</see> and user token.
            </summary>
            <param name="data">A <see cref="T:System.Xml.XPath.IXPathNavigable"/> object that represents the XML data that was used to load the syndication resource.</param>
            <param name="source">
                The <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="credentials">
               The <see cref="T:System.Net.ICredentials"/> that were used to authenticate the request to an Internet resource. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="proxy">
                The <see cref="T:System.Net.IWebProxy"/> used to access the Internet resource. Can be <b>null</b> if syndication resource was not loaded using an Internet resource.
            </param>
            <param name="state">The user-defined object that was passed to the asynchronous operation.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="data"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.SyndicationResourceLoadedEventArgs"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.SyndicationResourceLoadedEventArgs"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance. Hash code values are displayed for applicable properties.
            </remarks>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.op_Equality(Argotic.Common.SyndicationResourceLoadedEventArgs,Argotic.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.op_Inequality(Argotic.Common.SyndicationResourceLoadedEventArgs,Argotic.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.op_LessThan(Argotic.Common.SyndicationResourceLoadedEventArgs,Argotic.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadedEventArgs.op_GreaterThan(Argotic.Common.SyndicationResourceLoadedEventArgs,Argotic.Common.SyndicationResourceLoadedEventArgs)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadedEventArgs.Empty">
            <summary>
            Represents an syndication resource loaded event with no event data.
            </summary>
            <value>An uninitialized instance of the <see cref="T:Argotic.Common.SyndicationResourceLoadedEventArgs"/> class.</value>
            <remarks>The value of Empty is a read-only instance of <see cref="T:Argotic.Common.SyndicationResourceLoadedEventArgs"/> equivalent to the result of calling the <see cref="M:Argotic.Common.SyndicationResourceLoadedEventArgs.#ctor"/> constructor.</remarks>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadedEventArgs.Credentials">
            <summary>
            Gets the network credentials used for authenticating the request to the Internet resource that the syndication resource was loaded from.
            </summary>
            <value>
                The <see cref="T:System.Net.ICredentials"/> that were used to authenticate the request to an Internet resource. 
                If the <see cref="T:Argotic.Common.ISyndicationResource"/> was not loaded by an Internet resource or no credentials were provided, returns <b>null</b>.
            </value>
            <seealso cref="M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)"/>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadedEventArgs.Data">
            <summary>
            Gets a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating the XML data that was used to load the syndication resource.
            </summary>
            <value>
                A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object for navigating the XML data that was used to load the syndication resource.
            </value>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadedEventArgs.Proxy">
            <summary>
            Gets the network proxy used to access the Internet resource that the syndication resource was loaded from.
            </summary>
            <value>
                The <see cref="T:System.Net.IWebProxy"/> used to access the Internet resource. 
                If the <see cref="T:Argotic.Common.ISyndicationResource"/> was not loaded by an Internet resource or no proxy was specified, returns <b>null</b>.
            </value>
            <seealso cref="M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)"/>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadedEventArgs.Source">
            <summary>
            Gets the <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from.
            </summary>
            <value>
                The <see cref="T:System.Uri"/> of the Internet resource that the syndication resource was loaded from. 
                If the <see cref="T:Argotic.Common.ISyndicationResource"/> was not loaded by an Internet resource, returns <b>null</b>.
            </value>
            <seealso cref="M:Argotic.Common.ISyndicationResource.Load(System.Uri,System.Net.ICredentials,System.Net.IWebProxy)"/>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadedEventArgs.State">
            <summary>
            Gets an <see cref="T:System.Object"/> containing state information that was passed to the asynchronous load operation.
            </summary>
            <value>
                A <see cref="T:System.Object"/> containing state information that was passed to the asynchronous load operation. 
                If the <see cref="T:Argotic.Common.ISyndicationResource"/> was not loaded by an Internet resource or no user token provided, returns <b>null</b>.
            </value>
            <seealso cref="M:Argotic.Common.ISyndicationResource.LoadAsync(System.Uri,System.Object)"/>
        </member>
        <member name="T:Argotic.Common.SyndicationResourceLoadSettings">
            <summary>
            Specifies a set of features to support on a <see cref="T:Argotic.Common.ISyndicationResource"/> object loaded by the <see cref="M:Argotic.Common.ISyndicationResource.Load(System.Xml.XPath.IXPathNavigable,Argotic.Common.SyndicationResourceLoadSettings)"/> method.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadSettings.characterEncoding">
            <summary>
            Private member to hold the character encoding to use when reading the syndication resource.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadSettings.maximumEntitiesToRetrieve">
            <summary>
            Private member to hold a value indicating the maximum number of resource entities to retrieve from a syndication resource.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadSettings.requestTimeout">
            <summary>
            Private member to hold a value that specifies the amount of time after which a asynchronous load operation call times out.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadSettings.supportedSyndicationExtensions">
            <summary>
            Private member to hold a collection of types that represent the syndication extensions supported by the load operation.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceLoadSettings.syndicationExtensionAutodetectionEnabled">
            <summary>
            Private member to hold a value indicating if auto-detection of supported syndication extensions is enabled.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/> class.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.SyndicationResourceLoadSettings"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance.
            </remarks>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.op_Equality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.op_Inequality(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.op_LessThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceLoadSettings.op_GreaterThan(Argotic.Common.SyndicationResourceLoadSettings,Argotic.Common.SyndicationResourceLoadSettings)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions">
            <summary>
            Gets or sets a value indicating if auto-detection of supported syndication extensions is enabled.
            </summary>
            <value>
                <b>true</b> if the syndication extensions supported by the load operation are automatically determined based on the XML namespaces declared on a syndication resource; otherwise <b>false</b>. 
                The default value is <b>true</b>.
            </value>
            <remarks>
                Automatic detection of supported syndication extensions will <b>not</b> remove any syndication extensions already added 
                to the <see cref="P:Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions"/> collection prior to the load operation execution.
            </remarks>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadSettings.CharacterEncoding">
            <summary>
            Gets or sets the character encoding to use when parsing a syndication resource.
            </summary>
            <value>A <see cref="T:System.Text.Encoding"/> object that indicates the character encoding to use when parsing a syndication resource. The default value is <see cref="P:System.Text.Encoding.UTF8"/>.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadSettings.RetrievalLimit">
            <summary>
            Gets or sets the maximum number of resource entities to retrieve from a syndication resource.
            </summary>
            <value>The maximum number of entities to retrieve from a syndication resource. The default value is 0, which indicates there is <b>no limit</b>.</value>
            <remarks>
                This setting is typically used to optimize processing by reducing the number of resource entities that must be parsed. 
                Some syndication resources may not utilize this setting if they do not represent a list of retrievable entities.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="value"/> is less than zero.</exception>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadSettings.SupportedExtensions">
            <summary>
            Gets the syndication extensions to attempt to load from a syndication resource.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects that represent syndication extension instances to attempt to instantiate during the load operation. 
                The default value is an <i>empty</i> collection.
            </value>
            <remarks>
                If <see cref="P:Argotic.Common.SyndicationResourceLoadSettings.AutoDetectExtensions"/> is <b>true</b>, this collection will be automatically filled during the load operation based on the XML namespaces declared on the syndication resource. 
                Automatic detection will <b>not</b> remove any syndication extensions already added to this collection prior to the load operation execution.
            </remarks>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceLoadSettings.Timeout">
            <summary>
            Gets or sets a value that specifies the amount of time after which asynchronous load operations will time out.
            </summary>
            <value>An <see cref="T:System.TimeSpan"/> that specifies the time-out period. The default value is 15 seconds.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The time-out period is less than zero.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The time-out period is greater than a year.</exception>
        </member>
        <member name="T:Argotic.Common.SyndicationResourceMetadata">
            <summary>
            Represents metadata associated with a <see cref="T:Argotic.Common.ISyndicationResource">syndication resource</see>.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceMetadata.resourceFormat">
            <summary>
            Private member to hold the syndication content format that the syndication resource conforms to.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceMetadata.resourceNamespaces">
            <summary>
            Private member to hold the XML namespaces declared in the syndication resource's root element.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceMetadata.resourceVersion">
            <summary>
            Private member to hold the version of the syndication specification that the resource conforms to.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceMetadata.resourceRootNode">
            <summary>
            Private member to hold a XPath navigator that can be used to navigate the root element of the syndication resource.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.#ctor(System.Xml.XPath.XPathNavigator)">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.SyndicationResourceMetadata"/> class using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the syndication resource meta-data from.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.GetVersionFromAttribute(System.Xml.XPath.XPathNavigator,System.String)">
            <summary>
            Returns a <see cref="P:Argotic.Common.SyndicationResourceMetadata.Version"/> object for the value of the XML attribute in <paramref name="navigator"/> with a local name specified by <paramref name="name"/>.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the XML attribute value from.</param>
            <param name="name">The name of the attribute to parse in the <paramref name="navigator"/>.</param>
            <returns>The <see cref="P:Argotic.Common.SyndicationResourceMetadata.Version"/> represented by the value of the specified XML attribute. If unable to determine version, returns <b>null</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is a null reference (Nothing in Visual Basic).</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="name"/> is an empty string.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseApmlResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Attention Profiling Markup Language (APML) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Attention Profiling Markup Language (APML) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseAtomResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Atom formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Atom formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseBlogMLResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a  Web Log Markup Language (BlogML) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a  Web Log Markup Language (BlogML) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseMicroSummaryGeneratorResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Microsummary Generator formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Microsummary Generator formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseNewsMLResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a News Markup Language (NewsML) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a News Markup Language (NewsML) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseOpenSearchDescriptionResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a OpenSearch Description formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a OpenSearch Description formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseOpmlResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a  Outline Processor Markup Language (OPML) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a  Outline Processor Markup Language (OPML) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseRsdResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Really Simple Discovery (RSD) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Really Simple Discovery (RSD) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.TryParseRssResource(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator@,System.Version@)">
            <summary>
            Determines if the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> represents a Really Simple Syndication (RSS) formatted syndication resource.
            </summary>
            <param name="resource">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that represents the syndication resource to attempt to parse.</param>
            <param name="navigator">A <see cref="T:System.Xml.XPath.XPathNavigator"/> that can be used to navigate the root element of the syndication resource. This parameter is passed uninitialized.</param>
            <param name="version">The version of the syndication specification that the resource conforms to. This parameter is passed uninitialized.</param>
            <returns><b>true</b> if <paramref name="resource"/> represents a Really Simple Syndication (RSS) formatted syndication resource; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Extracts the content format, version, and XML namespaces for a syndication resource from the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="resource">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the syndication resource meta-data from.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="resource"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.SyndicationResourceMetadata"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.SyndicationResourceMetadata"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance. Hash code values are displayed for applicable properties.
            </remarks>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.op_Equality(Argotic.Common.SyndicationResourceMetadata,Argotic.Common.SyndicationResourceMetadata)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.op_Inequality(Argotic.Common.SyndicationResourceMetadata,Argotic.Common.SyndicationResourceMetadata)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.op_LessThan(Argotic.Common.SyndicationResourceMetadata,Argotic.Common.SyndicationResourceMetadata)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceMetadata.op_GreaterThan(Argotic.Common.SyndicationResourceMetadata,Argotic.Common.SyndicationResourceMetadata)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceMetadata.Format">
            <summary>
            Gets the <see cref="T:Argotic.Common.SyndicationContentFormat"/> that the syndication resource conforms to.
            </summary>
            <value>
                A <see cref="T:Argotic.Common.SyndicationContentFormat"/> enumeration value that indicates the syndication specification the resource conforms to. 
                If the syndication content format is unable to be determined, returns <see cref="F:Argotic.Common.SyndicationContentFormat.None"/>.
            </value>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceMetadata.Namespaces">
            <summary>
            Gets a dictionary of the XML namespaces declared in the syndication resource.
            </summary>
            <value>A dictionary of the resource's XML namespaces, keyed off of the namespace prefix. If no XML namespaces are declared on the root element of the resource, returns an empty dictionary.</value>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceMetadata.Resource">
            <summary>
            Gets a read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object that can be used to navigate the root element of the syndication resource.
            </summary>
            <value>A read-only <see cref="T:System.Xml.XPath.XPathNavigator"/> object that can be used to navigate the root element of the syndication resource.</value>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceMetadata.Version">
            <summary>
            Gets the <see cref="P:Argotic.Common.SyndicationResourceMetadata.Version"/> of the syndication specification that the resource conforms to.
            </summary>
            <value>The version number of the syndication specification that the resource conforms to. If format version is unable to be determined, returns <b>null</b>.</value>
        </member>
        <member name="T:Argotic.Common.SyndicationResourceSaveSettings">
            <summary>
            Specifies a set of features to support on a <see cref="T:Argotic.Common.ISyndicationResource"/> object persisted by the <see cref="M:Argotic.Common.ISyndicationResource.Save(System.IO.Stream,Argotic.Common.SyndicationResourceSaveSettings)"/> method.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceSaveSettings.characterEncoding">
            <summary>
            Private member to hold the character encoding to use when reading the syndication resource.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceSaveSettings.minimizeOutputSize">
            <summary>
            Private member to hold a value indicating if write/save operations should attempt to minimize the size of the resulting output.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceSaveSettings.supportedSyndicationExtensions">
            <summary>
            Private member to hold a collection of types that represent the syndication extensions supported by the save operation.
            </summary>
        </member>
        <member name="F:Argotic.Common.SyndicationResourceSaveSettings.syndicationExtensionAutodetectionEnabled">
            <summary>
            Private member to hold a value indicating if auto-detection of supported syndication extensions is enabled.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.SyndicationResourceSaveSettings"/> class.
            </summary>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.SyndicationResourceSaveSettings"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.SyndicationResourceSaveSettings"/>.</returns>
            <remarks>
                This method returns a human-readable string for the current instance.
            </remarks>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.op_Equality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.op_Inequality(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.op_LessThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.SyndicationResourceSaveSettings.op_GreaterThan(Argotic.Common.SyndicationResourceSaveSettings,Argotic.Common.SyndicationResourceSaveSettings)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceSaveSettings.AutoDetectExtensions">
            <summary>
            Gets or sets a value indicating if auto-detection of supported syndication extensions is enabled.
            </summary>
            <value>
                <b>true</b> if the syndication extensions supported by the save operation are automatically determined based on the syndication extensions added to the syndication resource and its child entities; otherwise <b>false</b>. 
                The default value is <b>true</b>.
            </value>
            <remarks>
                Automatic detection of supported syndication extensions will <b>not</b> remove any syndication extensions already added 
                to the <see cref="P:Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions"/> collection prior to the save operation execution.
            </remarks>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceSaveSettings.CharacterEncoding">
            <summary>
            Gets or sets the character encoding to use when persisting a syndication resource.
            </summary>
            <value>A <see cref="T:System.Text.Encoding"/> object that indicates the character encoding to use when persisting a syndication resource. The default value is <see cref="P:System.Text.Encoding.UTF8"/>.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceSaveSettings.MinimizeOutputSize">
            <summary>
            Gets or sets a value indicating if syndication resource persist operations should attempt to minimize the physical size of the resulting output.
            </summary>
            <value><b>true</b> if output size should be as small as possible; otherwise <b>false</b>. The default value is <b>false</b>.</value>
        </member>
        <member name="P:Argotic.Common.SyndicationResourceSaveSettings.SupportedExtensions">
            <summary>
            Gets the syndication extensions that extend the syndication resource.
            </summary>
            <value>
                A <see cref="T:System.Collections.ObjectModel.Collection`1"/> collection of <see cref="T:System.Type"/> objects that represent syndication extension instances used during the save operation. 
                The default value is an <i>empty</i> collection.
            </value>
            <remarks>
                During a save operation, each of these syndication extension types is instantiated and used to write the prefixed XML namespace declarations on the root syndication resource entity.
            </remarks>
        </member>
        <member name="T:Argotic.Common.TrackbackDiscoveryMetadata">
            <summary>
            Represents metadata about a web log entry that allows clients to auto-discover the TrackBack ping URL for that entry.
            </summary>
        </member>
        <member name="F:Argotic.Common.TrackbackDiscoveryMetadata.RDF_NAMESPACE">
            <summary>
            Private member to hold the XML namespace for Resource Description Framework (RDF) entities.
            </summary>
        </member>
        <member name="F:Argotic.Common.TrackbackDiscoveryMetadata.DUBLIN_CORE_NAMESPACE">
            <summary>
            Private member to hold the XML namespace for Dublin Core entities.
            </summary>
        </member>
        <member name="F:Argotic.Common.TrackbackDiscoveryMetadata.TRACKBACK_NAMESPACE">
            <summary>
            Private member to hold the XML namespace for Trackback entities.
            </summary>
        </member>
        <member name="F:Argotic.Common.TrackbackDiscoveryMetadata.trackbackDiscoveryTitle">
            <summary>
            Private member to hold the title of the discoverable web log entry.
            </summary>
        </member>
        <member name="F:Argotic.Common.TrackbackDiscoveryMetadata.trackbackDiscoveryAbout">
            <summary>
            Private member to hold Resource Description Framework entity reference.
            </summary>
        </member>
        <member name="F:Argotic.Common.TrackbackDiscoveryMetadata.trackbackDiscoveryIdentifier">
            <summary>
            Private member to hold the unique identifier of the discoverable web log entry.
            </summary>
        </member>
        <member name="F:Argotic.Common.TrackbackDiscoveryMetadata.trackbackDiscoveryPingEndpoint">
            <summary>
            Private member to hold Trackback ping endpoint of the discoverable web log entry.
            </summary>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> class.
            </summary>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.#ctor(System.Xml.XPath.XPathNavigator)">
            <summary>
            Initializes a new instance of the <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> class using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the Trackback auto-discovery meta-data from.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.Load(System.Xml.XPath.XPathNavigator)">
            <summary>
            Loads this <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> using the supplied <see cref="T:System.Xml.XPath.XPathNavigator"/>.
            </summary>
            <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator"/> to extract the Trackback auto-discovery meta-data from.</param>
            <returns><b>true</b> if Trackback auto-discovery meta-data was extracted from the <paramref name="navigator"/>, otherwise <b>false</b>.</returns>
            <remarks>
                Will return <b>false</b> if the <i>trackback:ping</i> attribute is not found on the <b>rdf:Description</b> element.
            </remarks>
            <exception cref="T:System.ArgumentNullException">The <paramref name="navigator"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/> to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> to which you want to save.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="writer"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/>.
            </summary>
            <returns>A <see cref="T:System.String"/> that represents the current <see cref="T:Argotic.Common.TrackbackDiscoveryMetadata"/>.</returns>
            <remarks>
                This method returns the XML representation for the current instance.
            </remarks>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the objects being compared.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="obj"/> is not the expected <see cref="T:System.Type"/>.</exception>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current instance.</param>
            <returns><b>true</b> if the specified <see cref="T:System.Object"/> is equal to the current instance; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.GetHashCode">
            <summary>
            Returns a hash code for the current instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.op_Equality(Argotic.Common.TrackbackDiscoveryMetadata,Argotic.Common.TrackbackDiscoveryMetadata)">
            <summary>
            Determines if operands are equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the values of its operands are equal, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.op_Inequality(Argotic.Common.TrackbackDiscoveryMetadata,Argotic.Common.TrackbackDiscoveryMetadata)">
            <summary>
            Determines if operands are not equal.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>false</b> if its operands are equal, otherwise; <b>true</b>.</returns>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.op_LessThan(Argotic.Common.TrackbackDiscoveryMetadata,Argotic.Common.TrackbackDiscoveryMetadata)">
            <summary>
            Determines if first operand is less than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is less than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="M:Argotic.Common.TrackbackDiscoveryMetadata.op_GreaterThan(Argotic.Common.TrackbackDiscoveryMetadata,Argotic.Common.TrackbackDiscoveryMetadata)">
            <summary>
            Determines if first operand is greater than second operand.
            </summary>
            <param name="first">Operand to be compared.</param>
            <param name="second">Operand to compare to.</param>
            <returns><b>true</b> if the first operand is greater than the second, otherwise; <b>false</b>.</returns>
        </member>
        <member name="P:Argotic.Common.TrackbackDiscoveryMetadata.About">
            <summary>
            Gets or sets the Resource Description Framework (RDF) entity reference.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents the Resource Description Framework (RDF) entity reference.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Argotic.Common.TrackbackDiscoveryMetadata.Identifier">
            <summary>
            Gets or sets the unique identifier for the discoverable web log entry.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents the unique identifier for the discoverable web log entry.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Argotic.Common.TrackbackDiscoveryMetadata.PingUrl">
            <summary>
            Gets or sets the Trackback ping notification endpoint for the discoverable web log entry.
            </summary>
            <value>A <see cref="T:System.Uri"/> that represents the Trackback ping URL for the discoverable web log entry.</value>
            <exception cref="T:System.ArgumentNullException">The <paramref name="value"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="P:Argotic.Common.TrackbackDiscoveryMetadata.Title">
            <summary>
            Gets or sets the title of the discoverable web log entry.
            </summary>
            <value>The title of the discoverable web log entry.</value>
        </member>
    </members>
</doc>
