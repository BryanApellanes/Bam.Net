// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Generated_Protobuf/Bam.Net.CoreServices.Data.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bam.Net.CoreServices.Data.Protobuf {

  /// <summary>Holder for reflection information generated from Generated_Protobuf/Bam.Net.CoreServices.Data.proto</summary>
  public static partial class BamNetCoreServicesDataReflection {

    #region Descriptor
    /// <summary>File descriptor for Generated_Protobuf/Bam.Net.CoreServices.Data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BamNetCoreServicesDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJHZW5lcmF0ZWRfUHJvdG9idWYvQmFtLk5ldC5Db3JlU2VydmljZXMuRGF0",
            "YS5wcm90bxIiQmFtLk5ldC5Db3JlU2VydmljZXMuRGF0YS5Qcm90b2J1ZiLm",
            "AQoDTmljEhEKCU1hY2hpbmVJZBgBIAEoAxIPCgdNYWNoaW5lGAIgASgMEhUK",
            "DUFkZHJlc3NGYW1pbHkYAyABKAkSDQoFVmFsdWUYBCABKAkSEgoKTWFjQWRk",
            "cmVzcxgFIAEoCRIKCgJJZBgGIAEoAxIMCgRVdWlkGAcgASgJEgwKBEN1aWQY",
            "CCABKAkSEQoJQ3JlYXRlZEJ5GAkgASgJEg8KB0NyZWF0ZWQYCiABKAwSEgoK",
            "TW9kaWZpZWRCeRgLIAEoCRIQCghNb2RpZmllZBgMIAEoDBIPCgdEZWxldGVk",
            "GA0gASgMItYBCg1Db25maWd1cmF0aW9uEhAKCE1hY2hpbmVzGAEgAygMEhQK",
            "DEFwcGxpY2F0aW9ucxgCIAMoDBILCgNLZXkYAyABKAkSDQoFVmFsdWUYBCAB",
            "KAkSCgoCSWQYBSABKAMSDAoEVXVpZBgGIAEoCRIMCgRDdWlkGAcgASgJEhEK",
            "CUNyZWF0ZWRCeRgIIAEoCRIPCgdDcmVhdGVkGAkgASgMEhIKCk1vZGlmaWVk",
            "QnkYCiABKAkSEAoITW9kaWZpZWQYCyABKAwSDwoHRGVsZXRlZBgMIAEoDCK/",
            "AgoNQ2xpZW50TWFjaGluZRIUCgxBcHBsaWNhdGlvbnMYASADKAwSFgoOQ29u",
            "ZmlndXJhdGlvbnMYAiADKAwSDAoETmFtZRgDIAEoCRISCgpTZXJ2ZXJIb3N0",
            "GAQgASgJEgwKBFBvcnQYBSABKAUSDgoGU2VjcmV0GAYgASgJEhEKCVByb2Nl",
            "c3NlcxgHIAMoDBIZChFOZXR3b3JrSW50ZXJmYWNlcxgIIAMoDBIPCgdDdXJy",
            "ZW50GAkgASgMEgoKAklkGAogASgDEgwKBFV1aWQYCyABKAkSDAoEQ3VpZBgM",
            "IAEoCRIRCglDcmVhdGVkQnkYDSABKAkSDwoHQ3JlYXRlZBgOIAEoDBISCgpN",
            "b2RpZmllZEJ5GA8gASgJEhAKCE1vZGlmaWVkGBAgASgMEg8KB0RlbGV0ZWQY",
            "ESABKAwimQIKC0FwcGxpY2F0aW9uEhYKDk9yZ2FuaXphdGlvbklkGAEgASgD",
            "EhQKDE9yZ2FuaXphdGlvbhgCIAEoDBIMCgROYW1lGAMgASgJEhAKCE1hY2hp",
            "bmVzGAQgAygMEg8KB0FwaUtleXMYBSADKAwSEQoJSW5zdGFuY2VzGAYgAygM",
            "EhUKDUNvbmZpZ3VyYXRpb24YByADKAwSCgoCSWQYCCABKAMSDAoEVXVpZBgJ",
            "IAEoCRIMCgRDdWlkGAogASgJEhEKCUNyZWF0ZWRCeRgLIAEoCRIPCgdDcmVh",
            "dGVkGAwgASgMEhIKCk1vZGlmaWVkQnkYDSABKAkSEAoITW9kaWZpZWQYDiAB",
            "KAwSDwoHRGVsZXRlZBgPIAEoDCLoAwoRUHJvY2Vzc0Rlc2NyaXB0b3ISFQoN",
            "QXBwbGljYXRpb25JZBgBIAEoAxITCgtBcHBsaWNhdGlvbhgCIAEoDBIaChJJ",
            "bnN0YW5jZUlkZW50aWZpZXIYAyABKAkSEQoJTWFjaGluZUlkGAQgASgDEg8K",
            "B01hY2hpbmUYBSABKAwSFQoNU2VydmVyTWFjaGluZRgGIAEoDBIVCg1IYXNo",
            "QWxnb3JpdGhtGAcgASgJEgwKBEhhc2gYCCABKAkSEwoLTWFjaGluZU5hbWUY",
            "CSABKAkSEQoJUHJvY2Vzc0lkGAogASgFEhEKCVN0YXJ0VGltZRgLIAEoDBIR",
            "CglIYXNFeGl0ZWQYDCABKAgSEAoIRXhpdFRpbWUYDSABKAwSEAoIRXhpdENv",
            "ZGUYDiABKAUSEAoIRmlsZVBhdGgYDyABKAkSEwoLQ29tbWFuZExpbmUYECAB",
            "KAkSDwoHQ3VycmVudBgRIAEoDBIKCgJJZBgSIAEoAxIMCgRVdWlkGBMgASgJ",
            "EgwKBEN1aWQYFCABKAkSEQoJQ3JlYXRlZEJ5GBUgASgJEg8KB0NyZWF0ZWQY",
            "FiABKAwSEgoKTW9kaWZpZWRCeRgXIAEoCRIQCghNb2RpZmllZBgYIAEoDBIP",
            "CgdEZWxldGVkGBkgASgMIpgCCgZBcGlLZXkSFQoNQXBwbGljYXRpb25JZBgB",
            "IAEoAxITCgtBcHBsaWNhdGlvbhgCIAEoDBIQCghDbGllbnRJZBgDIAEoCRIU",
            "CgxTaGFyZWRTZWNyZXQYBCABKAkSEQoJQ3JlYXRlZEJ5GAUgASgJEhEKCUNv",
            "bmZpcm1lZBgGIAEoDBIQCghEaXNhYmxlZBgHIAEoCBISCgpEaXNhYmxlZEJ5",
            "GAggASgJEgoKAklkGAkgASgDEgwKBFV1aWQYCiABKAkSDAoEQ3VpZBgLIAEo",
            "CRIPCgdDcmVhdGVkGAwgASgMEhIKCk1vZGlmaWVkQnkYDSABKAkSEAoITW9k",
            "aWZpZWQYDiABKAwSDwoHRGVsZXRlZBgPIAEoDCLfAQoWQ2xpZW50U2VydmVy",
            "Q29ubmVjdGlvbhIQCghDbGllbnRJZBgBIAEoAxIOCgZDbGllbnQYAiABKAwS",
            "EAoIU2VydmVySWQYAyABKAMSDgoGU2VydmVyGAQgASgMEgoKAklkGAUgASgD",
            "EgwKBFV1aWQYBiABKAkSDAoEQ3VpZBgHIAEoCRIRCglDcmVhdGVkQnkYCCAB",
            "KAkSDwoHQ3JlYXRlZBgJIAEoDBISCgpNb2RpZmllZEJ5GAogASgJEhAKCE1v",
            "ZGlmaWVkGAsgASgMEg8KB0RlbGV0ZWQYDCABKAwi6AEKI0V4dGVybmFsRXZl",
            "bnRTdWJzY3JpcHRpb25EZXNjcmlwdG9yEhIKCkNsaWVudE5hbWUYASABKAkS",
            "EQoJRXZlbnROYW1lGAIgASgJEhcKD1dlYkhvb2tFbmRwb2ludBgDIAEoCRIK",
            "CgJJZBgEIAEoAxIMCgRVdWlkGAUgASgJEgwKBEN1aWQYBiABKAkSEQoJQ3Jl",
            "YXRlZEJ5GAcgASgJEg8KB0NyZWF0ZWQYCCABKAwSEgoKTW9kaWZpZWRCeRgJ",
            "IAEoCRIQCghNb2RpZmllZBgKIAEoDBIPCgdEZWxldGVkGAsgASgMIsQBCgxP",
            "cmdhbml6YXRpb24SDAoETmFtZRgBIAEoCRIUCgxBcHBsaWNhdGlvbnMYAiAD",
            "KAwSDQoFVXNlcnMYAyADKAwSCgoCSWQYBCABKAMSDAoEVXVpZBgFIAEoCRIM",
            "CgRDdWlkGAYgASgJEhEKCUNyZWF0ZWRCeRgHIAEoCRIPCgdDcmVhdGVkGAgg",
            "ASgMEhIKCk1vZGlmaWVkQnkYCSABKAkSEAoITW9kaWZpZWQYCiABKAwSDwoH",
            "RGVsZXRlZBgLIAEoDCLYAQoEVXNlchIVCg1Pcmdhbml6YXRpb25zGAEgAygM",
            "Eg0KBUVtYWlsGAIgASgJEhAKCFVzZXJOYW1lGAMgASgJEhUKDVN1YnNjcmlw",
            "dGlvbnMYBCADKAwSCgoCSWQYBSABKAMSDAoEVXVpZBgGIAEoCRIMCgRDdWlk",
            "GAcgASgJEhEKCUNyZWF0ZWRCeRgIIAEoCRIPCgdDcmVhdGVkGAkgASgMEhIK",
            "Ck1vZGlmaWVkQnkYCiABKAkSEAoITW9kaWZpZWQYCyABKAwSDwoHRGVsZXRl",
            "ZBgMIAEoDCKVAgoMU3Vic2NyaXB0aW9uEg4KBlVzZXJJZBgBIAEoAxIMCgRV",
            "c2VyGAIgASgMEhkKEVN1YnNjcmlwdGlvbkxldmVsGAMgASgJEhgKEE1heE9y",
            "Z2FuaXphdGlvbnMYBCABKAUSFwoPTWF4QXBwbGljYXRpb25zGAUgASgFEhYK",
            "DkV4cGlyYXRpb25EYXRlGAYgASgMEgoKAklkGAcgASgDEgwKBFV1aWQYCCAB",
            "KAkSDAoEQ3VpZBgJIAEoCRIRCglDcmVhdGVkQnkYCiABKAkSDwoHQ3JlYXRl",
            "ZBgLIAEoDBISCgpNb2RpZmllZEJ5GAwgASgJEhAKCE1vZGlmaWVkGA0gASgM",
            "Eg8KB0RlbGV0ZWQYDiABKAxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.Nic), global::Bam.Net.CoreServices.Data.Protobuf.Nic.Parser, new[]{ "MachineId", "Machine", "AddressFamily", "Value", "MacAddress", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.Configuration), global::Bam.Net.CoreServices.Data.Protobuf.Configuration.Parser, new[]{ "Machines", "Applications", "Key", "Value", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.ClientMachine), global::Bam.Net.CoreServices.Data.Protobuf.ClientMachine.Parser, new[]{ "Applications", "Configurations", "Name", "ServerHost", "Port", "Secret", "Processes", "NetworkInterfaces", "Current", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.Application), global::Bam.Net.CoreServices.Data.Protobuf.Application.Parser, new[]{ "OrganizationId", "Organization", "Name", "Machines", "ApiKeys", "Instances", "Configuration", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.ProcessDescriptor), global::Bam.Net.CoreServices.Data.Protobuf.ProcessDescriptor.Parser, new[]{ "ApplicationId", "Application", "InstanceIdentifier", "MachineId", "Machine", "ServerMachine", "HashAlgorithm", "Hash", "MachineName", "ProcessId", "StartTime", "HasExited", "ExitTime", "ExitCode", "FilePath", "CommandLine", "Current", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.ApiKey), global::Bam.Net.CoreServices.Data.Protobuf.ApiKey.Parser, new[]{ "ApplicationId", "Application", "ClientId", "SharedSecret", "CreatedBy", "Confirmed", "Disabled", "DisabledBy", "Id", "Uuid", "Cuid", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.ClientServerConnection), global::Bam.Net.CoreServices.Data.Protobuf.ClientServerConnection.Parser, new[]{ "ClientId", "Client", "ServerId", "Server", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.ExternalEventSubscriptionDescriptor), global::Bam.Net.CoreServices.Data.Protobuf.ExternalEventSubscriptionDescriptor.Parser, new[]{ "ClientName", "EventName", "WebHookEndpoint", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.Organization), global::Bam.Net.CoreServices.Data.Protobuf.Organization.Parser, new[]{ "Name", "Applications", "Users", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.User), global::Bam.Net.CoreServices.Data.Protobuf.User.Parser, new[]{ "Organizations", "Email", "UserName", "Subscriptions", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bam.Net.CoreServices.Data.Protobuf.Subscription), global::Bam.Net.CoreServices.Data.Protobuf.Subscription.Parser, new[]{ "UserId", "User", "SubscriptionLevel", "MaxOrganizations", "MaxApplications", "ExpirationDate", "Id", "Uuid", "Cuid", "CreatedBy", "Created", "ModifiedBy", "Modified", "Deleted" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Nic : pb::IMessage<Nic> {
    private static readonly pb::MessageParser<Nic> _parser = new pb::MessageParser<Nic>(() => new Nic());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Nic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Nic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Nic(Nic other) : this() {
      machineId_ = other.machineId_;
      machine_ = other.machine_;
      addressFamily_ = other.addressFamily_;
      value_ = other.value_;
      macAddress_ = other.macAddress_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Nic Clone() {
      return new Nic(this);
    }

    /// <summary>Field number for the "MachineId" field.</summary>
    public const int MachineIdFieldNumber = 1;
    private long machineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MachineId {
      get { return machineId_; }
      set {
        machineId_ = value;
      }
    }

    /// <summary>Field number for the "Machine" field.</summary>
    public const int MachineFieldNumber = 2;
    private pb::ByteString machine_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Machine {
      get { return machine_; }
      set {
        machine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AddressFamily" field.</summary>
    public const int AddressFamilyFieldNumber = 3;
    private string addressFamily_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AddressFamily {
      get { return addressFamily_; }
      set {
        addressFamily_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 4;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MacAddress" field.</summary>
    public const int MacAddressFieldNumber = 5;
    private string macAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MacAddress {
      get { return macAddress_; }
      set {
        macAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 6;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 7;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 8;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 9;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 10;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 11;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 12;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 13;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Nic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Nic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MachineId != other.MachineId) return false;
      if (Machine != other.Machine) return false;
      if (AddressFamily != other.AddressFamily) return false;
      if (Value != other.Value) return false;
      if (MacAddress != other.MacAddress) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MachineId != 0L) hash ^= MachineId.GetHashCode();
      if (Machine.Length != 0) hash ^= Machine.GetHashCode();
      if (AddressFamily.Length != 0) hash ^= AddressFamily.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (MacAddress.Length != 0) hash ^= MacAddress.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MachineId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MachineId);
      }
      if (Machine.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Machine);
      }
      if (AddressFamily.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AddressFamily);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Value);
      }
      if (MacAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(MacAddress);
      }
      if (Id != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(106);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MachineId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MachineId);
      }
      if (Machine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Machine);
      }
      if (AddressFamily.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AddressFamily);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (MacAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MacAddress);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Nic other) {
      if (other == null) {
        return;
      }
      if (other.MachineId != 0L) {
        MachineId = other.MachineId;
      }
      if (other.Machine.Length != 0) {
        Machine = other.Machine;
      }
      if (other.AddressFamily.Length != 0) {
        AddressFamily = other.AddressFamily;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.MacAddress.Length != 0) {
        MacAddress = other.MacAddress;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MachineId = input.ReadInt64();
            break;
          }
          case 18: {
            Machine = input.ReadBytes();
            break;
          }
          case 26: {
            AddressFamily = input.ReadString();
            break;
          }
          case 34: {
            Value = input.ReadString();
            break;
          }
          case 42: {
            MacAddress = input.ReadString();
            break;
          }
          case 48: {
            Id = input.ReadInt64();
            break;
          }
          case 58: {
            Uuid = input.ReadString();
            break;
          }
          case 66: {
            Cuid = input.ReadString();
            break;
          }
          case 74: {
            CreatedBy = input.ReadString();
            break;
          }
          case 82: {
            Created = input.ReadBytes();
            break;
          }
          case 90: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 98: {
            Modified = input.ReadBytes();
            break;
          }
          case 106: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Configuration : pb::IMessage<Configuration> {
    private static readonly pb::MessageParser<Configuration> _parser = new pb::MessageParser<Configuration>(() => new Configuration());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Configuration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration(Configuration other) : this() {
      machines_ = other.machines_.Clone();
      applications_ = other.applications_.Clone();
      key_ = other.key_;
      value_ = other.value_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Configuration Clone() {
      return new Configuration(this);
    }

    /// <summary>Field number for the "Machines" field.</summary>
    public const int MachinesFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_machines_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> machines_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Machines {
      get { return machines_; }
    }

    /// <summary>Field number for the "Applications" field.</summary>
    public const int ApplicationsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_applications_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> applications_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Applications {
      get { return applications_; }
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 3;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 4;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 5;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 6;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 7;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 9;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 10;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 11;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 12;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Configuration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Configuration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!machines_.Equals(other.machines_)) return false;
      if(!applications_.Equals(other.applications_)) return false;
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= machines_.GetHashCode();
      hash ^= applications_.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      machines_.WriteTo(output, _repeated_machines_codec);
      applications_.WriteTo(output, _repeated_applications_codec);
      if (Key.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Value);
      }
      if (Id != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += machines_.CalculateSize(_repeated_machines_codec);
      size += applications_.CalculateSize(_repeated_applications_codec);
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Configuration other) {
      if (other == null) {
        return;
      }
      machines_.Add(other.machines_);
      applications_.Add(other.applications_);
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            machines_.AddEntriesFrom(input, _repeated_machines_codec);
            break;
          }
          case 18: {
            applications_.AddEntriesFrom(input, _repeated_applications_codec);
            break;
          }
          case 26: {
            Key = input.ReadString();
            break;
          }
          case 34: {
            Value = input.ReadString();
            break;
          }
          case 40: {
            Id = input.ReadInt64();
            break;
          }
          case 50: {
            Uuid = input.ReadString();
            break;
          }
          case 58: {
            Cuid = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            Created = input.ReadBytes();
            break;
          }
          case 82: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 90: {
            Modified = input.ReadBytes();
            break;
          }
          case 98: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientMachine : pb::IMessage<ClientMachine> {
    private static readonly pb::MessageParser<ClientMachine> _parser = new pb::MessageParser<ClientMachine>(() => new ClientMachine());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientMachine> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMachine() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMachine(ClientMachine other) : this() {
      applications_ = other.applications_.Clone();
      configurations_ = other.configurations_.Clone();
      name_ = other.name_;
      serverHost_ = other.serverHost_;
      port_ = other.port_;
      secret_ = other.secret_;
      processes_ = other.processes_.Clone();
      networkInterfaces_ = other.networkInterfaces_.Clone();
      current_ = other.current_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientMachine Clone() {
      return new ClientMachine(this);
    }

    /// <summary>Field number for the "Applications" field.</summary>
    public const int ApplicationsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_applications_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> applications_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Applications {
      get { return applications_; }
    }

    /// <summary>Field number for the "Configurations" field.</summary>
    public const int ConfigurationsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_configurations_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> configurations_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Configurations {
      get { return configurations_; }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServerHost" field.</summary>
    public const int ServerHostFieldNumber = 4;
    private string serverHost_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerHost {
      get { return serverHost_; }
      set {
        serverHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Port" field.</summary>
    public const int PortFieldNumber = 5;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "Secret" field.</summary>
    public const int SecretFieldNumber = 6;
    private string secret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Processes" field.</summary>
    public const int ProcessesFieldNumber = 7;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_processes_codec
        = pb::FieldCodec.ForBytes(58);
    private readonly pbc::RepeatedField<pb::ByteString> processes_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Processes {
      get { return processes_; }
    }

    /// <summary>Field number for the "NetworkInterfaces" field.</summary>
    public const int NetworkInterfacesFieldNumber = 8;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_networkInterfaces_codec
        = pb::FieldCodec.ForBytes(66);
    private readonly pbc::RepeatedField<pb::ByteString> networkInterfaces_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> NetworkInterfaces {
      get { return networkInterfaces_; }
    }

    /// <summary>Field number for the "Current" field.</summary>
    public const int CurrentFieldNumber = 9;
    private pb::ByteString current_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Current {
      get { return current_; }
      set {
        current_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 10;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 11;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 12;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 13;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 14;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 15;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 16;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 17;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientMachine);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientMachine other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!applications_.Equals(other.applications_)) return false;
      if(!configurations_.Equals(other.configurations_)) return false;
      if (Name != other.Name) return false;
      if (ServerHost != other.ServerHost) return false;
      if (Port != other.Port) return false;
      if (Secret != other.Secret) return false;
      if(!processes_.Equals(other.processes_)) return false;
      if(!networkInterfaces_.Equals(other.networkInterfaces_)) return false;
      if (Current != other.Current) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= applications_.GetHashCode();
      hash ^= configurations_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ServerHost.Length != 0) hash ^= ServerHost.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      hash ^= processes_.GetHashCode();
      hash ^= networkInterfaces_.GetHashCode();
      if (Current.Length != 0) hash ^= Current.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      applications_.WriteTo(output, _repeated_applications_codec);
      configurations_.WriteTo(output, _repeated_configurations_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (ServerHost.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServerHost);
      }
      if (Port != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Secret);
      }
      processes_.WriteTo(output, _repeated_processes_codec);
      networkInterfaces_.WriteTo(output, _repeated_networkInterfaces_codec);
      if (Current.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Current);
      }
      if (Id != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += applications_.CalculateSize(_repeated_applications_codec);
      size += configurations_.CalculateSize(_repeated_configurations_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ServerHost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerHost);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      size += processes_.CalculateSize(_repeated_processes_codec);
      size += networkInterfaces_.CalculateSize(_repeated_networkInterfaces_codec);
      if (Current.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Current);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientMachine other) {
      if (other == null) {
        return;
      }
      applications_.Add(other.applications_);
      configurations_.Add(other.configurations_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ServerHost.Length != 0) {
        ServerHost = other.ServerHost;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      processes_.Add(other.processes_);
      networkInterfaces_.Add(other.networkInterfaces_);
      if (other.Current.Length != 0) {
        Current = other.Current;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            applications_.AddEntriesFrom(input, _repeated_applications_codec);
            break;
          }
          case 18: {
            configurations_.AddEntriesFrom(input, _repeated_configurations_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            ServerHost = input.ReadString();
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
          case 50: {
            Secret = input.ReadString();
            break;
          }
          case 58: {
            processes_.AddEntriesFrom(input, _repeated_processes_codec);
            break;
          }
          case 66: {
            networkInterfaces_.AddEntriesFrom(input, _repeated_networkInterfaces_codec);
            break;
          }
          case 74: {
            Current = input.ReadBytes();
            break;
          }
          case 80: {
            Id = input.ReadInt64();
            break;
          }
          case 90: {
            Uuid = input.ReadString();
            break;
          }
          case 98: {
            Cuid = input.ReadString();
            break;
          }
          case 106: {
            CreatedBy = input.ReadString();
            break;
          }
          case 114: {
            Created = input.ReadBytes();
            break;
          }
          case 122: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 130: {
            Modified = input.ReadBytes();
            break;
          }
          case 138: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Application : pb::IMessage<Application> {
    private static readonly pb::MessageParser<Application> _parser = new pb::MessageParser<Application>(() => new Application());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Application> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application(Application other) : this() {
      organizationId_ = other.organizationId_;
      organization_ = other.organization_;
      name_ = other.name_;
      machines_ = other.machines_.Clone();
      apiKeys_ = other.apiKeys_.Clone();
      instances_ = other.instances_.Clone();
      configuration_ = other.configuration_.Clone();
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Application Clone() {
      return new Application(this);
    }

    /// <summary>Field number for the "OrganizationId" field.</summary>
    public const int OrganizationIdFieldNumber = 1;
    private long organizationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrganizationId {
      get { return organizationId_; }
      set {
        organizationId_ = value;
      }
    }

    /// <summary>Field number for the "Organization" field.</summary>
    public const int OrganizationFieldNumber = 2;
    private pb::ByteString organization_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Organization {
      get { return organization_; }
      set {
        organization_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Machines" field.</summary>
    public const int MachinesFieldNumber = 4;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_machines_codec
        = pb::FieldCodec.ForBytes(34);
    private readonly pbc::RepeatedField<pb::ByteString> machines_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Machines {
      get { return machines_; }
    }

    /// <summary>Field number for the "ApiKeys" field.</summary>
    public const int ApiKeysFieldNumber = 5;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_apiKeys_codec
        = pb::FieldCodec.ForBytes(42);
    private readonly pbc::RepeatedField<pb::ByteString> apiKeys_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ApiKeys {
      get { return apiKeys_; }
    }

    /// <summary>Field number for the "Instances" field.</summary>
    public const int InstancesFieldNumber = 6;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_instances_codec
        = pb::FieldCodec.ForBytes(50);
    private readonly pbc::RepeatedField<pb::ByteString> instances_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Instances {
      get { return instances_; }
    }

    /// <summary>Field number for the "Configuration" field.</summary>
    public const int ConfigurationFieldNumber = 7;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_configuration_codec
        = pb::FieldCodec.ForBytes(58);
    private readonly pbc::RepeatedField<pb::ByteString> configuration_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Configuration {
      get { return configuration_; }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 8;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 9;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 10;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 11;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 12;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 13;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 14;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 15;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Application);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Application other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrganizationId != other.OrganizationId) return false;
      if (Organization != other.Organization) return false;
      if (Name != other.Name) return false;
      if(!machines_.Equals(other.machines_)) return false;
      if(!apiKeys_.Equals(other.apiKeys_)) return false;
      if(!instances_.Equals(other.instances_)) return false;
      if(!configuration_.Equals(other.configuration_)) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrganizationId != 0L) hash ^= OrganizationId.GetHashCode();
      if (Organization.Length != 0) hash ^= Organization.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= machines_.GetHashCode();
      hash ^= apiKeys_.GetHashCode();
      hash ^= instances_.GetHashCode();
      hash ^= configuration_.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrganizationId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OrganizationId);
      }
      if (Organization.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Organization);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      machines_.WriteTo(output, _repeated_machines_codec);
      apiKeys_.WriteTo(output, _repeated_apiKeys_codec);
      instances_.WriteTo(output, _repeated_instances_codec);
      configuration_.WriteTo(output, _repeated_configuration_codec);
      if (Id != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrganizationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrganizationId);
      }
      if (Organization.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Organization);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += machines_.CalculateSize(_repeated_machines_codec);
      size += apiKeys_.CalculateSize(_repeated_apiKeys_codec);
      size += instances_.CalculateSize(_repeated_instances_codec);
      size += configuration_.CalculateSize(_repeated_configuration_codec);
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Application other) {
      if (other == null) {
        return;
      }
      if (other.OrganizationId != 0L) {
        OrganizationId = other.OrganizationId;
      }
      if (other.Organization.Length != 0) {
        Organization = other.Organization;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      machines_.Add(other.machines_);
      apiKeys_.Add(other.apiKeys_);
      instances_.Add(other.instances_);
      configuration_.Add(other.configuration_);
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OrganizationId = input.ReadInt64();
            break;
          }
          case 18: {
            Organization = input.ReadBytes();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            machines_.AddEntriesFrom(input, _repeated_machines_codec);
            break;
          }
          case 42: {
            apiKeys_.AddEntriesFrom(input, _repeated_apiKeys_codec);
            break;
          }
          case 50: {
            instances_.AddEntriesFrom(input, _repeated_instances_codec);
            break;
          }
          case 58: {
            configuration_.AddEntriesFrom(input, _repeated_configuration_codec);
            break;
          }
          case 64: {
            Id = input.ReadInt64();
            break;
          }
          case 74: {
            Uuid = input.ReadString();
            break;
          }
          case 82: {
            Cuid = input.ReadString();
            break;
          }
          case 90: {
            CreatedBy = input.ReadString();
            break;
          }
          case 98: {
            Created = input.ReadBytes();
            break;
          }
          case 106: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 114: {
            Modified = input.ReadBytes();
            break;
          }
          case 122: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProcessDescriptor : pb::IMessage<ProcessDescriptor> {
    private static readonly pb::MessageParser<ProcessDescriptor> _parser = new pb::MessageParser<ProcessDescriptor>(() => new ProcessDescriptor());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProcessDescriptor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDescriptor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDescriptor(ProcessDescriptor other) : this() {
      applicationId_ = other.applicationId_;
      application_ = other.application_;
      instanceIdentifier_ = other.instanceIdentifier_;
      machineId_ = other.machineId_;
      machine_ = other.machine_;
      serverMachine_ = other.serverMachine_;
      hashAlgorithm_ = other.hashAlgorithm_;
      hash_ = other.hash_;
      machineName_ = other.machineName_;
      processId_ = other.processId_;
      startTime_ = other.startTime_;
      hasExited_ = other.hasExited_;
      exitTime_ = other.exitTime_;
      exitCode_ = other.exitCode_;
      filePath_ = other.filePath_;
      commandLine_ = other.commandLine_;
      current_ = other.current_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProcessDescriptor Clone() {
      return new ProcessDescriptor(this);
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private long applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "Application" field.</summary>
    public const int ApplicationFieldNumber = 2;
    private pb::ByteString application_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Application {
      get { return application_; }
      set {
        application_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InstanceIdentifier" field.</summary>
    public const int InstanceIdentifierFieldNumber = 3;
    private string instanceIdentifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceIdentifier {
      get { return instanceIdentifier_; }
      set {
        instanceIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MachineId" field.</summary>
    public const int MachineIdFieldNumber = 4;
    private long machineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MachineId {
      get { return machineId_; }
      set {
        machineId_ = value;
      }
    }

    /// <summary>Field number for the "Machine" field.</summary>
    public const int MachineFieldNumber = 5;
    private pb::ByteString machine_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Machine {
      get { return machine_; }
      set {
        machine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServerMachine" field.</summary>
    public const int ServerMachineFieldNumber = 6;
    private pb::ByteString serverMachine_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ServerMachine {
      get { return serverMachine_; }
      set {
        serverMachine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HashAlgorithm" field.</summary>
    public const int HashAlgorithmFieldNumber = 7;
    private string hashAlgorithm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashAlgorithm {
      get { return hashAlgorithm_; }
      set {
        hashAlgorithm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Hash" field.</summary>
    public const int HashFieldNumber = 8;
    private string hash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MachineName" field.</summary>
    public const int MachineNameFieldNumber = 9;
    private string machineName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MachineName {
      get { return machineName_; }
      set {
        machineName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProcessId" field.</summary>
    public const int ProcessIdFieldNumber = 10;
    private int processId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProcessId {
      get { return processId_; }
      set {
        processId_ = value;
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 11;
    private pb::ByteString startTime_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HasExited" field.</summary>
    public const int HasExitedFieldNumber = 12;
    private bool hasExited_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExited {
      get { return hasExited_; }
      set {
        hasExited_ = value;
      }
    }

    /// <summary>Field number for the "ExitTime" field.</summary>
    public const int ExitTimeFieldNumber = 13;
    private pb::ByteString exitTime_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ExitTime {
      get { return exitTime_; }
      set {
        exitTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExitCode" field.</summary>
    public const int ExitCodeFieldNumber = 14;
    private int exitCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExitCode {
      get { return exitCode_; }
      set {
        exitCode_ = value;
      }
    }

    /// <summary>Field number for the "FilePath" field.</summary>
    public const int FilePathFieldNumber = 15;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CommandLine" field.</summary>
    public const int CommandLineFieldNumber = 16;
    private string commandLine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommandLine {
      get { return commandLine_; }
      set {
        commandLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Current" field.</summary>
    public const int CurrentFieldNumber = 17;
    private pb::ByteString current_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Current {
      get { return current_; }
      set {
        current_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 18;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 19;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 20;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 21;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 22;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 23;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 24;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 25;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProcessDescriptor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProcessDescriptor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (Application != other.Application) return false;
      if (InstanceIdentifier != other.InstanceIdentifier) return false;
      if (MachineId != other.MachineId) return false;
      if (Machine != other.Machine) return false;
      if (ServerMachine != other.ServerMachine) return false;
      if (HashAlgorithm != other.HashAlgorithm) return false;
      if (Hash != other.Hash) return false;
      if (MachineName != other.MachineName) return false;
      if (ProcessId != other.ProcessId) return false;
      if (StartTime != other.StartTime) return false;
      if (HasExited != other.HasExited) return false;
      if (ExitTime != other.ExitTime) return false;
      if (ExitCode != other.ExitCode) return false;
      if (FilePath != other.FilePath) return false;
      if (CommandLine != other.CommandLine) return false;
      if (Current != other.Current) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0L) hash ^= ApplicationId.GetHashCode();
      if (Application.Length != 0) hash ^= Application.GetHashCode();
      if (InstanceIdentifier.Length != 0) hash ^= InstanceIdentifier.GetHashCode();
      if (MachineId != 0L) hash ^= MachineId.GetHashCode();
      if (Machine.Length != 0) hash ^= Machine.GetHashCode();
      if (ServerMachine.Length != 0) hash ^= ServerMachine.GetHashCode();
      if (HashAlgorithm.Length != 0) hash ^= HashAlgorithm.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (MachineName.Length != 0) hash ^= MachineName.GetHashCode();
      if (ProcessId != 0) hash ^= ProcessId.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (HasExited != false) hash ^= HasExited.GetHashCode();
      if (ExitTime.Length != 0) hash ^= ExitTime.GetHashCode();
      if (ExitCode != 0) hash ^= ExitCode.GetHashCode();
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (CommandLine.Length != 0) hash ^= CommandLine.GetHashCode();
      if (Current.Length != 0) hash ^= Current.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ApplicationId);
      }
      if (Application.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Application);
      }
      if (InstanceIdentifier.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstanceIdentifier);
      }
      if (MachineId != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MachineId);
      }
      if (Machine.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Machine);
      }
      if (ServerMachine.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(ServerMachine);
      }
      if (HashAlgorithm.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(HashAlgorithm);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Hash);
      }
      if (MachineName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MachineName);
      }
      if (ProcessId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ProcessId);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(StartTime);
      }
      if (HasExited != false) {
        output.WriteRawTag(96);
        output.WriteBool(HasExited);
      }
      if (ExitTime.Length != 0) {
        output.WriteRawTag(106);
        output.WriteBytes(ExitTime);
      }
      if (ExitCode != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ExitCode);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(FilePath);
      }
      if (CommandLine.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CommandLine);
      }
      if (Current.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteBytes(Current);
      }
      if (Id != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ApplicationId);
      }
      if (Application.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Application);
      }
      if (InstanceIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceIdentifier);
      }
      if (MachineId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MachineId);
      }
      if (Machine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Machine);
      }
      if (ServerMachine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerMachine);
      }
      if (HashAlgorithm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashAlgorithm);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (MachineName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineName);
      }
      if (ProcessId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessId);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StartTime);
      }
      if (HasExited != false) {
        size += 1 + 1;
      }
      if (ExitTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExitTime);
      }
      if (ExitCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExitCode);
      }
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (CommandLine.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CommandLine);
      }
      if (Current.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Current);
      }
      if (Id != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProcessDescriptor other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0L) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Application.Length != 0) {
        Application = other.Application;
      }
      if (other.InstanceIdentifier.Length != 0) {
        InstanceIdentifier = other.InstanceIdentifier;
      }
      if (other.MachineId != 0L) {
        MachineId = other.MachineId;
      }
      if (other.Machine.Length != 0) {
        Machine = other.Machine;
      }
      if (other.ServerMachine.Length != 0) {
        ServerMachine = other.ServerMachine;
      }
      if (other.HashAlgorithm.Length != 0) {
        HashAlgorithm = other.HashAlgorithm;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.MachineName.Length != 0) {
        MachineName = other.MachineName;
      }
      if (other.ProcessId != 0) {
        ProcessId = other.ProcessId;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.HasExited != false) {
        HasExited = other.HasExited;
      }
      if (other.ExitTime.Length != 0) {
        ExitTime = other.ExitTime;
      }
      if (other.ExitCode != 0) {
        ExitCode = other.ExitCode;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.CommandLine.Length != 0) {
        CommandLine = other.CommandLine;
      }
      if (other.Current.Length != 0) {
        Current = other.Current;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ApplicationId = input.ReadInt64();
            break;
          }
          case 18: {
            Application = input.ReadBytes();
            break;
          }
          case 26: {
            InstanceIdentifier = input.ReadString();
            break;
          }
          case 32: {
            MachineId = input.ReadInt64();
            break;
          }
          case 42: {
            Machine = input.ReadBytes();
            break;
          }
          case 50: {
            ServerMachine = input.ReadBytes();
            break;
          }
          case 58: {
            HashAlgorithm = input.ReadString();
            break;
          }
          case 66: {
            Hash = input.ReadString();
            break;
          }
          case 74: {
            MachineName = input.ReadString();
            break;
          }
          case 80: {
            ProcessId = input.ReadInt32();
            break;
          }
          case 90: {
            StartTime = input.ReadBytes();
            break;
          }
          case 96: {
            HasExited = input.ReadBool();
            break;
          }
          case 106: {
            ExitTime = input.ReadBytes();
            break;
          }
          case 112: {
            ExitCode = input.ReadInt32();
            break;
          }
          case 122: {
            FilePath = input.ReadString();
            break;
          }
          case 130: {
            CommandLine = input.ReadString();
            break;
          }
          case 138: {
            Current = input.ReadBytes();
            break;
          }
          case 144: {
            Id = input.ReadInt64();
            break;
          }
          case 154: {
            Uuid = input.ReadString();
            break;
          }
          case 162: {
            Cuid = input.ReadString();
            break;
          }
          case 170: {
            CreatedBy = input.ReadString();
            break;
          }
          case 178: {
            Created = input.ReadBytes();
            break;
          }
          case 186: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 194: {
            Modified = input.ReadBytes();
            break;
          }
          case 202: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ApiKey : pb::IMessage<ApiKey> {
    private static readonly pb::MessageParser<ApiKey> _parser = new pb::MessageParser<ApiKey>(() => new ApiKey());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApiKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiKey(ApiKey other) : this() {
      applicationId_ = other.applicationId_;
      application_ = other.application_;
      clientId_ = other.clientId_;
      sharedSecret_ = other.sharedSecret_;
      createdBy_ = other.createdBy_;
      confirmed_ = other.confirmed_;
      disabled_ = other.disabled_;
      disabledBy_ = other.disabledBy_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApiKey Clone() {
      return new ApiKey(this);
    }

    /// <summary>Field number for the "ApplicationId" field.</summary>
    public const int ApplicationIdFieldNumber = 1;
    private long applicationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ApplicationId {
      get { return applicationId_; }
      set {
        applicationId_ = value;
      }
    }

    /// <summary>Field number for the "Application" field.</summary>
    public const int ApplicationFieldNumber = 2;
    private pb::ByteString application_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Application {
      get { return application_; }
      set {
        application_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ClientId" field.</summary>
    public const int ClientIdFieldNumber = 3;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SharedSecret" field.</summary>
    public const int SharedSecretFieldNumber = 4;
    private string sharedSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SharedSecret {
      get { return sharedSecret_; }
      set {
        sharedSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 5;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Confirmed" field.</summary>
    public const int ConfirmedFieldNumber = 6;
    private pb::ByteString confirmed_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Confirmed {
      get { return confirmed_; }
      set {
        confirmed_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Disabled" field.</summary>
    public const int DisabledFieldNumber = 7;
    private bool disabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    /// <summary>Field number for the "DisabledBy" field.</summary>
    public const int DisabledByFieldNumber = 8;
    private string disabledBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisabledBy {
      get { return disabledBy_; }
      set {
        disabledBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 9;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 10;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 11;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 12;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 13;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 14;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 15;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApiKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApiKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ApplicationId != other.ApplicationId) return false;
      if (Application != other.Application) return false;
      if (ClientId != other.ClientId) return false;
      if (SharedSecret != other.SharedSecret) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Confirmed != other.Confirmed) return false;
      if (Disabled != other.Disabled) return false;
      if (DisabledBy != other.DisabledBy) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ApplicationId != 0L) hash ^= ApplicationId.GetHashCode();
      if (Application.Length != 0) hash ^= Application.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (SharedSecret.Length != 0) hash ^= SharedSecret.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Confirmed.Length != 0) hash ^= Confirmed.GetHashCode();
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (DisabledBy.Length != 0) hash ^= DisabledBy.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ApplicationId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ApplicationId);
      }
      if (Application.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Application);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientId);
      }
      if (SharedSecret.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SharedSecret);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CreatedBy);
      }
      if (Confirmed.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Confirmed);
      }
      if (Disabled != false) {
        output.WriteRawTag(56);
        output.WriteBool(Disabled);
      }
      if (DisabledBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DisabledBy);
      }
      if (Id != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Cuid);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ApplicationId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ApplicationId);
      }
      if (Application.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Application);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (SharedSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SharedSecret);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Confirmed.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Confirmed);
      }
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (DisabledBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisabledBy);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApiKey other) {
      if (other == null) {
        return;
      }
      if (other.ApplicationId != 0L) {
        ApplicationId = other.ApplicationId;
      }
      if (other.Application.Length != 0) {
        Application = other.Application;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.SharedSecret.Length != 0) {
        SharedSecret = other.SharedSecret;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Confirmed.Length != 0) {
        Confirmed = other.Confirmed;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      if (other.DisabledBy.Length != 0) {
        DisabledBy = other.DisabledBy;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ApplicationId = input.ReadInt64();
            break;
          }
          case 18: {
            Application = input.ReadBytes();
            break;
          }
          case 26: {
            ClientId = input.ReadString();
            break;
          }
          case 34: {
            SharedSecret = input.ReadString();
            break;
          }
          case 42: {
            CreatedBy = input.ReadString();
            break;
          }
          case 50: {
            Confirmed = input.ReadBytes();
            break;
          }
          case 56: {
            Disabled = input.ReadBool();
            break;
          }
          case 66: {
            DisabledBy = input.ReadString();
            break;
          }
          case 72: {
            Id = input.ReadInt64();
            break;
          }
          case 82: {
            Uuid = input.ReadString();
            break;
          }
          case 90: {
            Cuid = input.ReadString();
            break;
          }
          case 98: {
            Created = input.ReadBytes();
            break;
          }
          case 106: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 114: {
            Modified = input.ReadBytes();
            break;
          }
          case 122: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientServerConnection : pb::IMessage<ClientServerConnection> {
    private static readonly pb::MessageParser<ClientServerConnection> _parser = new pb::MessageParser<ClientServerConnection>(() => new ClientServerConnection());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientServerConnection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientServerConnection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientServerConnection(ClientServerConnection other) : this() {
      clientId_ = other.clientId_;
      client_ = other.client_;
      serverId_ = other.serverId_;
      server_ = other.server_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientServerConnection Clone() {
      return new ClientServerConnection(this);
    }

    /// <summary>Field number for the "ClientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private long clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "Client" field.</summary>
    public const int ClientFieldNumber = 2;
    private pb::ByteString client_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Client {
      get { return client_; }
      set {
        client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServerId" field.</summary>
    public const int ServerIdFieldNumber = 3;
    private long serverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ServerId {
      get { return serverId_; }
      set {
        serverId_ = value;
      }
    }

    /// <summary>Field number for the "Server" field.</summary>
    public const int ServerFieldNumber = 4;
    private pb::ByteString server_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Server {
      get { return server_; }
      set {
        server_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 5;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 6;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 7;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 9;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 10;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 11;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 12;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientServerConnection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientServerConnection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Client != other.Client) return false;
      if (ServerId != other.ServerId) return false;
      if (Server != other.Server) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0L) hash ^= ClientId.GetHashCode();
      if (Client.Length != 0) hash ^= Client.GetHashCode();
      if (ServerId != 0L) hash ^= ServerId.GetHashCode();
      if (Server.Length != 0) hash ^= Server.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ClientId);
      }
      if (Client.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Client);
      }
      if (ServerId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ServerId);
      }
      if (Server.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Server);
      }
      if (Id != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientId);
      }
      if (Client.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Client);
      }
      if (ServerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerId);
      }
      if (Server.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Server);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientServerConnection other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0L) {
        ClientId = other.ClientId;
      }
      if (other.Client.Length != 0) {
        Client = other.Client;
      }
      if (other.ServerId != 0L) {
        ServerId = other.ServerId;
      }
      if (other.Server.Length != 0) {
        Server = other.Server;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ClientId = input.ReadInt64();
            break;
          }
          case 18: {
            Client = input.ReadBytes();
            break;
          }
          case 24: {
            ServerId = input.ReadInt64();
            break;
          }
          case 34: {
            Server = input.ReadBytes();
            break;
          }
          case 40: {
            Id = input.ReadInt64();
            break;
          }
          case 50: {
            Uuid = input.ReadString();
            break;
          }
          case 58: {
            Cuid = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            Created = input.ReadBytes();
            break;
          }
          case 82: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 90: {
            Modified = input.ReadBytes();
            break;
          }
          case 98: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExternalEventSubscriptionDescriptor : pb::IMessage<ExternalEventSubscriptionDescriptor> {
    private static readonly pb::MessageParser<ExternalEventSubscriptionDescriptor> _parser = new pb::MessageParser<ExternalEventSubscriptionDescriptor>(() => new ExternalEventSubscriptionDescriptor());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExternalEventSubscriptionDescriptor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalEventSubscriptionDescriptor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalEventSubscriptionDescriptor(ExternalEventSubscriptionDescriptor other) : this() {
      clientName_ = other.clientName_;
      eventName_ = other.eventName_;
      webHookEndpoint_ = other.webHookEndpoint_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalEventSubscriptionDescriptor Clone() {
      return new ExternalEventSubscriptionDescriptor(this);
    }

    /// <summary>Field number for the "ClientName" field.</summary>
    public const int ClientNameFieldNumber = 1;
    private string clientName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientName {
      get { return clientName_; }
      set {
        clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EventName" field.</summary>
    public const int EventNameFieldNumber = 2;
    private string eventName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventName {
      get { return eventName_; }
      set {
        eventName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WebHookEndpoint" field.</summary>
    public const int WebHookEndpointFieldNumber = 3;
    private string webHookEndpoint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WebHookEndpoint {
      get { return webHookEndpoint_; }
      set {
        webHookEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 4;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 5;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 6;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 7;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 8;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 9;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 10;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 11;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExternalEventSubscriptionDescriptor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExternalEventSubscriptionDescriptor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientName != other.ClientName) return false;
      if (EventName != other.EventName) return false;
      if (WebHookEndpoint != other.WebHookEndpoint) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
      if (EventName.Length != 0) hash ^= EventName.GetHashCode();
      if (WebHookEndpoint.Length != 0) hash ^= WebHookEndpoint.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientName);
      }
      if (EventName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EventName);
      }
      if (WebHookEndpoint.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WebHookEndpoint);
      }
      if (Id != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
      }
      if (EventName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventName);
      }
      if (WebHookEndpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WebHookEndpoint);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExternalEventSubscriptionDescriptor other) {
      if (other == null) {
        return;
      }
      if (other.ClientName.Length != 0) {
        ClientName = other.ClientName;
      }
      if (other.EventName.Length != 0) {
        EventName = other.EventName;
      }
      if (other.WebHookEndpoint.Length != 0) {
        WebHookEndpoint = other.WebHookEndpoint;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ClientName = input.ReadString();
            break;
          }
          case 18: {
            EventName = input.ReadString();
            break;
          }
          case 26: {
            WebHookEndpoint = input.ReadString();
            break;
          }
          case 32: {
            Id = input.ReadInt64();
            break;
          }
          case 42: {
            Uuid = input.ReadString();
            break;
          }
          case 50: {
            Cuid = input.ReadString();
            break;
          }
          case 58: {
            CreatedBy = input.ReadString();
            break;
          }
          case 66: {
            Created = input.ReadBytes();
            break;
          }
          case 74: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 82: {
            Modified = input.ReadBytes();
            break;
          }
          case 90: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Organization : pb::IMessage<Organization> {
    private static readonly pb::MessageParser<Organization> _parser = new pb::MessageParser<Organization>(() => new Organization());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Organization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Organization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Organization(Organization other) : this() {
      name_ = other.name_;
      applications_ = other.applications_.Clone();
      users_ = other.users_.Clone();
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Organization Clone() {
      return new Organization(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Applications" field.</summary>
    public const int ApplicationsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_applications_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> applications_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Applications {
      get { return applications_; }
    }

    /// <summary>Field number for the "Users" field.</summary>
    public const int UsersFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_users_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> users_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Users {
      get { return users_; }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 4;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 5;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 6;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 7;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 8;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 9;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 10;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 11;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Organization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Organization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!applications_.Equals(other.applications_)) return false;
      if(!users_.Equals(other.users_)) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= applications_.GetHashCode();
      hash ^= users_.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      applications_.WriteTo(output, _repeated_applications_codec);
      users_.WriteTo(output, _repeated_users_codec);
      if (Id != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += applications_.CalculateSize(_repeated_applications_codec);
      size += users_.CalculateSize(_repeated_users_codec);
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Organization other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      applications_.Add(other.applications_);
      users_.Add(other.users_);
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            applications_.AddEntriesFrom(input, _repeated_applications_codec);
            break;
          }
          case 26: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
          case 32: {
            Id = input.ReadInt64();
            break;
          }
          case 42: {
            Uuid = input.ReadString();
            break;
          }
          case 50: {
            Cuid = input.ReadString();
            break;
          }
          case 58: {
            CreatedBy = input.ReadString();
            break;
          }
          case 66: {
            Created = input.ReadBytes();
            break;
          }
          case 74: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 82: {
            Modified = input.ReadBytes();
            break;
          }
          case 90: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      organizations_ = other.organizations_.Clone();
      email_ = other.email_;
      userName_ = other.userName_;
      subscriptions_ = other.subscriptions_.Clone();
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "Organizations" field.</summary>
    public const int OrganizationsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_organizations_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> organizations_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Organizations {
      get { return organizations_; }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Subscriptions" field.</summary>
    public const int SubscriptionsFieldNumber = 4;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_subscriptions_codec
        = pb::FieldCodec.ForBytes(34);
    private readonly pbc::RepeatedField<pb::ByteString> subscriptions_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Subscriptions {
      get { return subscriptions_; }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 5;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 6;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 7;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 8;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 9;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 10;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 11;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 12;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!organizations_.Equals(other.organizations_)) return false;
      if (Email != other.Email) return false;
      if (UserName != other.UserName) return false;
      if(!subscriptions_.Equals(other.subscriptions_)) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= organizations_.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      hash ^= subscriptions_.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      organizations_.WriteTo(output, _repeated_organizations_codec);
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      subscriptions_.WriteTo(output, _repeated_subscriptions_codec);
      if (Id != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += organizations_.CalculateSize(_repeated_organizations_codec);
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      size += subscriptions_.CalculateSize(_repeated_subscriptions_codec);
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      organizations_.Add(other.organizations_);
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      subscriptions_.Add(other.subscriptions_);
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            organizations_.AddEntriesFrom(input, _repeated_organizations_codec);
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            subscriptions_.AddEntriesFrom(input, _repeated_subscriptions_codec);
            break;
          }
          case 40: {
            Id = input.ReadInt64();
            break;
          }
          case 50: {
            Uuid = input.ReadString();
            break;
          }
          case 58: {
            Cuid = input.ReadString();
            break;
          }
          case 66: {
            CreatedBy = input.ReadString();
            break;
          }
          case 74: {
            Created = input.ReadBytes();
            break;
          }
          case 82: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 90: {
            Modified = input.ReadBytes();
            break;
          }
          case 98: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Subscription : pb::IMessage<Subscription> {
    private static readonly pb::MessageParser<Subscription> _parser = new pb::MessageParser<Subscription>(() => new Subscription());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bam.Net.CoreServices.Data.Protobuf.BamNetCoreServicesDataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription(Subscription other) : this() {
      userId_ = other.userId_;
      user_ = other.user_;
      subscriptionLevel_ = other.subscriptionLevel_;
      maxOrganizations_ = other.maxOrganizations_;
      maxApplications_ = other.maxApplications_;
      expirationDate_ = other.expirationDate_;
      id_ = other.id_;
      uuid_ = other.uuid_;
      cuid_ = other.cuid_;
      createdBy_ = other.createdBy_;
      created_ = other.created_;
      modifiedBy_ = other.modifiedBy_;
      modified_ = other.modified_;
      deleted_ = other.deleted_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subscription Clone() {
      return new Subscription(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 2;
    private pb::ByteString user_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubscriptionLevel" field.</summary>
    public const int SubscriptionLevelFieldNumber = 3;
    private string subscriptionLevel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubscriptionLevel {
      get { return subscriptionLevel_; }
      set {
        subscriptionLevel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MaxOrganizations" field.</summary>
    public const int MaxOrganizationsFieldNumber = 4;
    private int maxOrganizations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxOrganizations {
      get { return maxOrganizations_; }
      set {
        maxOrganizations_ = value;
      }
    }

    /// <summary>Field number for the "MaxApplications" field.</summary>
    public const int MaxApplicationsFieldNumber = 5;
    private int maxApplications_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxApplications {
      get { return maxApplications_; }
      set {
        maxApplications_ = value;
      }
    }

    /// <summary>Field number for the "ExpirationDate" field.</summary>
    public const int ExpirationDateFieldNumber = 6;
    private pb::ByteString expirationDate_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ExpirationDate {
      get { return expirationDate_; }
      set {
        expirationDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 7;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Uuid" field.</summary>
    public const int UuidFieldNumber = 8;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cuid" field.</summary>
    public const int CuidFieldNumber = 9;
    private string cuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cuid {
      get { return cuid_; }
      set {
        cuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreatedBy" field.</summary>
    public const int CreatedByFieldNumber = 10;
    private string createdBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Created" field.</summary>
    public const int CreatedFieldNumber = 11;
    private pb::ByteString created_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Created {
      get { return created_; }
      set {
        created_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ModifiedBy" field.</summary>
    public const int ModifiedByFieldNumber = 12;
    private string modifiedBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModifiedBy {
      get { return modifiedBy_; }
      set {
        modifiedBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modified" field.</summary>
    public const int ModifiedFieldNumber = 13;
    private pb::ByteString modified_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Modified {
      get { return modified_; }
      set {
        modified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 14;
    private pb::ByteString deleted_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Deleted {
      get { return deleted_; }
      set {
        deleted_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (User != other.User) return false;
      if (SubscriptionLevel != other.SubscriptionLevel) return false;
      if (MaxOrganizations != other.MaxOrganizations) return false;
      if (MaxApplications != other.MaxApplications) return false;
      if (ExpirationDate != other.ExpirationDate) return false;
      if (Id != other.Id) return false;
      if (Uuid != other.Uuid) return false;
      if (Cuid != other.Cuid) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (Created != other.Created) return false;
      if (ModifiedBy != other.ModifiedBy) return false;
      if (Modified != other.Modified) return false;
      if (Deleted != other.Deleted) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (SubscriptionLevel.Length != 0) hash ^= SubscriptionLevel.GetHashCode();
      if (MaxOrganizations != 0) hash ^= MaxOrganizations.GetHashCode();
      if (MaxApplications != 0) hash ^= MaxApplications.GetHashCode();
      if (ExpirationDate.Length != 0) hash ^= ExpirationDate.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Cuid.Length != 0) hash ^= Cuid.GetHashCode();
      if (CreatedBy.Length != 0) hash ^= CreatedBy.GetHashCode();
      if (Created.Length != 0) hash ^= Created.GetHashCode();
      if (ModifiedBy.Length != 0) hash ^= ModifiedBy.GetHashCode();
      if (Modified.Length != 0) hash ^= Modified.GetHashCode();
      if (Deleted.Length != 0) hash ^= Deleted.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (User.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(User);
      }
      if (SubscriptionLevel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SubscriptionLevel);
      }
      if (MaxOrganizations != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MaxOrganizations);
      }
      if (MaxApplications != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxApplications);
      }
      if (ExpirationDate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(ExpirationDate);
      }
      if (Id != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Id);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Uuid);
      }
      if (Cuid.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Cuid);
      }
      if (CreatedBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(CreatedBy);
      }
      if (Created.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Created);
      }
      if (ModifiedBy.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ModifiedBy);
      }
      if (Modified.Length != 0) {
        output.WriteRawTag(106);
        output.WriteBytes(Modified);
      }
      if (Deleted.Length != 0) {
        output.WriteRawTag(114);
        output.WriteBytes(Deleted);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(User);
      }
      if (SubscriptionLevel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriptionLevel);
      }
      if (MaxOrganizations != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxOrganizations);
      }
      if (MaxApplications != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxApplications);
      }
      if (ExpirationDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ExpirationDate);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Cuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cuid);
      }
      if (CreatedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedBy);
      }
      if (Created.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Created);
      }
      if (ModifiedBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModifiedBy);
      }
      if (Modified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Modified);
      }
      if (Deleted.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Deleted);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subscription other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.SubscriptionLevel.Length != 0) {
        SubscriptionLevel = other.SubscriptionLevel;
      }
      if (other.MaxOrganizations != 0) {
        MaxOrganizations = other.MaxOrganizations;
      }
      if (other.MaxApplications != 0) {
        MaxApplications = other.MaxApplications;
      }
      if (other.ExpirationDate.Length != 0) {
        ExpirationDate = other.ExpirationDate;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Cuid.Length != 0) {
        Cuid = other.Cuid;
      }
      if (other.CreatedBy.Length != 0) {
        CreatedBy = other.CreatedBy;
      }
      if (other.Created.Length != 0) {
        Created = other.Created;
      }
      if (other.ModifiedBy.Length != 0) {
        ModifiedBy = other.ModifiedBy;
      }
      if (other.Modified.Length != 0) {
        Modified = other.Modified;
      }
      if (other.Deleted.Length != 0) {
        Deleted = other.Deleted;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 18: {
            User = input.ReadBytes();
            break;
          }
          case 26: {
            SubscriptionLevel = input.ReadString();
            break;
          }
          case 32: {
            MaxOrganizations = input.ReadInt32();
            break;
          }
          case 40: {
            MaxApplications = input.ReadInt32();
            break;
          }
          case 50: {
            ExpirationDate = input.ReadBytes();
            break;
          }
          case 56: {
            Id = input.ReadInt64();
            break;
          }
          case 66: {
            Uuid = input.ReadString();
            break;
          }
          case 74: {
            Cuid = input.ReadString();
            break;
          }
          case 82: {
            CreatedBy = input.ReadString();
            break;
          }
          case 90: {
            Created = input.ReadBytes();
            break;
          }
          case 98: {
            ModifiedBy = input.ReadString();
            break;
          }
          case 106: {
            Modified = input.ReadBytes();
            break;
          }
          case 114: {
            Deleted = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
