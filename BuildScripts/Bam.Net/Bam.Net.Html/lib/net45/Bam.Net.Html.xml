<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bam.Net.Html</name>
    </assembly>
    <members>
        <member name="T:Bam.Net.Html.DropDown">
            <summary>
            Designates that this property when rendered by the FileExtParamsBuilder
            should be a drowpdown (select) element.  Must call 
            DropDown.SetOptions([nameToUseForDefaultValue], dictionaryOfDefaultValues)
            for this to function properly.
            </summary>
        </member>
        <member name="P:Bam.Net.Html.DropDown.OptionLookup">
            <summary>
            A static set of application level default values.  Used by instances
            of DropDown to find their default values.
            </summary>
        </member>
        <member name="P:Bam.Net.Html.LabelAttribute.PostBreak">
            <summary>
            Gets or sets a value indicating whether a br element should be added after the element
            </summary>
        </member>
        <member name="P:Bam.Net.Html.LabelAttribute.PreBreak">
            <summary>
            Gets or sets a value indicating whether a br element should be added before the element
            </summary>
        </member>
        <member name="T:Bam.Net.Html.Legend">
            <summary>
            Used to specify the legend to use
            when building InputForms or MethodForms
            </summary>
        </member>
        <member name="T:Bam.Net.Html.StringInput">
            <summary>
            The base class used for rendering inputs for string object 
            properties.
            </summary>
        </member>
        <member name="M:Bam.Net.Html.Css.Inc(System.String)">
            <summary>
            Get a link tag (stylesheet reference) with the specified href
            </summary>
            <param name="href"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Css.Link(System.String)">
            <summary>
            Get a link tag (stylesheet reference) with the specified href
            </summary>
            <param name="href"></param>
            <returns></returns>
        </member>
        <member name="P:Bam.Net.Html.DeferredView.MillisecondsToRender">
            <summary>
            The amount of time to allow Render to run
            on the server
            </summary>
        </member>
        <member name="T:Bam.Net.Html.DeferredViewState">
            <summary>
            Exposes the State property of a given DeferredView.  Passed to content providers
            of deferred views to allow progress reporting.
            </summary>
        </member>
        <member name="P:Bam.Net.Html.DeferredViewState.Value">
            <summary>
            The value of the current state
            </summary>
        </member>
        <member name="P:Bam.Net.Html.DeferredViewState.View">
            <summary>
            The DeferredView this state is associated with
            </summary>
        </member>
        <member name="M:Bam.Net.Html.DeferredViewState.GetModel``1">
            <summary>
            Casts the Model to the specified generic type
            and returns the result
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.DeferredViewState.SetState(System.Web.Mvc.MvcHtmlString)">
            <summary>
            Sets the Value of the current instance to the MvcHtmlString specified.  Same
            as setting Value directly
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.MethodCall(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object[],System.Collections.Generic.Dictionary{System.String,System.Object},System.Object)">
            <summary>
            Creates a form representing the parameters for the specified 
            method of the specified type.
            </summary>
            <param name="helper"></param>
            <param name="className"></param>
            <param name="methodName"></param>
            <param name="buttonAttributes"></param>
            <param name="extraButtons"></param>
            <param name="defaults"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.MethodCall(System.Web.Mvc.HtmlHelper,System.Type,System.String,System.Object,System.Object[],System.Collections.Generic.Dictionary{System.String,System.Object},System.Object,System.String)">
            <summary>
            Creates a form representing the parameters for the specified 
            method of the specified type.
            </summary>
            <param name="helper"></param>
            <param name="type"></param>
            <param name="methodName"></param>
            <param name="buttonAttributes"></param>
            <param name="extraButtons"></param>
            <param name="defaults"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.ParamsFor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Build an input fieldset element for the specified method of the specified
            class.
            </summary>
            <param name="helper">The FileExtHelper</param>
            <param name="className">The name of the class that whose method will be called</param>
            <param name="methodName">The name of the method that will be called</param>
            <param name="defaults">A dictionary of default values to fill into the resulting
            form keyed by the names of the method parameters</param>
            <returns>MvchtmlString</returns>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.ParamsFor(System.Web.Mvc.HtmlHelper,System.Type,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Object)">
            <summary>
            Build a fieldset element for the specified method of the specified
            class.
            </summary>
            <param name="helper">The FileExtHelper</param>
            <param name="type">The Type whose method will be called</param>
            <param name="methodName">The name of the method that will be called</param>
            <param name="defaults">A dictionary of default values to fill into the resulting
            form keyed by the names of the method parameters</param>
            <returns>MvchtmlString</returns>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.AddDefault(System.Collections.Generic.Dictionary{System.String,System.Object},System.Reflection.MethodInfo,System.Object)">
            <summary>
            Specifies default values to use when creating ServiceProxy Method forms for the 
            specified method.
            </summary>
            <param name="target"></param>
            <param name="method"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.AddDefault(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Object)">
            <summary>
            Add the specified value to represent the default values for the
            specified parameterName.
            </summary>
            <param name="target"></param>
            <param name="parameterName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.ToDictionary``1(``0)">
            <summary>
            Creates a dictionary of the specified object's properties. 
            </summary>
            <typeparam name="T">The type of the object</typeparam>
            <param name="defaults">The value</param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.MethodButton(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            Write a span to the page with attribute role=button that will
            cause the execution of the specified method on the specified 
            class when clicked.  Requires DataSet.js 
            </summary>
            <param name="helper"></param>
            <param name="className"></param>
            <param name="method"></param>
            <param name="parametersId"></param>
            <param name="text"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.HtmlHelperExtensions.Script(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Write a javascript element block to the page containing
            the specified script.
            </summary>
            <param name="helper"></param>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="T:Bam.Net.Html.JsTag">
            <summary>
            The intended functionality of this class has 
            been superceded by the Webgrease bundling facility.
            
            The intent with this class is to eventually create
            a mechanism that can optionally minify and combine all scripts
            for a page where this tag is used.  Currently this
            class just represents a script html tag/element.
            </summary>    
        </member>
        <member name="T:Bam.Net.Html.Js.DataSet">
            <summary>
            Marker for loading resource script
            </summary>
        </member>
        <member name="T:Bam.Net.Html.InputFormBuilder">
            <summary>
            Used to build input forms for specified 
            types, methods and their parameters
            </summary>
        </member>
        <member name="M:Bam.Net.Html.InputFormBuilder.RegisterAttributeBuilder``1(Bam.Net.Html.CustomInputBuilder)">
            <summary>
            Used to register the specified InputBuilder for the specified attribute T.
            If a property is addorned with the specified Attribute T the registered 
            InputBuilder will be used to build the input html for that property.
            </summary> 
            <typeparam name="T"></typeparam>
            <param name="builder"></param>
        </member>
        <member name="P:Bam.Net.Html.InputFormBuilder.LabelFormat">
            <summary>
            The format used for the labels rendered by the current ParametersBuilder.
            The default is "{0}".
            </summary>
        </member>
        <member name="M:Bam.Net.Html.InputFormBuilder.MethodForm(System.Type,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Int32@)">
            <summary>
            Build a form to be used as parameters for the specified method
            </summary>
            <param name="wrapperTagName"></param>
            <param name="methodName"></param>
            <param name="defaults"></param>
            <param name="paramCount"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.InputFormBuilder.FieldsetFor(System.Object,System.String)">
            <summary>
            Get a form to input the properties of the specified instance
            </summary>
            <param name="param"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Bam.Net.Html.InputFormBuilder.PropertyInclusionPredicate">
            <summary>
            Used to determine whether to include specific properties of
            object instances.
            </summary>
        </member>
        <member name="P:Bam.Net.Html.InputFormBuilder.RecursionLimit">
            <summary>
            Limit the depth to which Types will be analyzed
            </summary>
        </member>
        <member name="M:Bam.Net.Html.RadioList.EnumRadios(System.Web.Mvc.TagBuilder,System.Type,System.Object,System.String)">
            <summary>
            Builds a ul element with radio buttons inside of li elements
            </summary>
            <param name="enumType">The typeof(enum)</param>
            <param name="selected">The enum.value to select</param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.StringBuilderExtensions.A(System.Text.StringBuilder,System.String)">
            <summary>
            Short for Append, returns current StringBuilder to 
            allow for "fluent" syntax.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.StringBuilderExtensions.Af(System.Text.StringBuilder,System.String,System.String[])">
            <summary>
            Short for AppendFormat
            </summary>
            <param name="builder"></param>
            <param name="format"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.StringBuilderExtensions.Al(System.Text.StringBuilder,System.String)">
            <summary>
            Short for AppendLine returns current StringBuilder to allow
            for "fluent" syntax.
            </summary>
            <param name="builder"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Each``1(``0[],System.Func{``0,System.Web.Mvc.MvcHtmlString})">
            <summary>
            Sets the html result of the specified Func to the html of the
            current tag
            </summary>
            <typeparam name="T"></typeparam>
            <param name="vals"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Child(System.String,System.String)">
            <summary>
            Same as SubTag.  Adds a subtag to the current Tag
            </summary>
            <param name="tagName"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.SubTag(System.String,System.String)">
            <summary>
            Same as Child.  Adds a subtag to the current
            Tag
            </summary>
            <param name="tagName"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Abort(System.String)">
            <summary>
            Adds an onabort attribute with the specified value
            </summary>
            <param name="abort">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.B(System.String)">
            <summary>
            Short for Blur
            </summary>
            <param name="blur"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Blur(System.String)">
            <summary>
            Adds an onblur attribute with the specified value
            </summary>
            <param name="blur">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Ch(System.String)">
            <summary>
            Short for Change
            </summary>
            <param name="change"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Change(System.String)">
            <summary>
            Adds an onchange attribute with the specified value
            </summary>
            <param name="change">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Cl(System.String)">
            <summary>
            Short for Click
            </summary>
            <param name="click"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Click(System.String)">
            <summary>
            Adds an onclick attribute with the specified value
            </summary>
            <param name="click">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Dc(System.String)">
            <summary>
            Short for DblClick
            </summary>
            <param name="dblclick"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.DblClick(System.String)">
            <summary>
            Adds an ondblclick attribute with the specified value
            </summary>
            <param name="dblclick">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Error(System.String)">
            <summary>
            Adds an onerror attribute with the specified value
            </summary>
            <param name="error">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.F(System.String)">
            <summary>
            Short for Focus
            </summary>
            <param name="focus"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Focus(System.String)">
            <summary>
            Adds an onfocus attribute with the specified value
            </summary>
            <param name="focus">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Kd(System.String)">
            <summary>
            Short for Keydown
            </summary>
            <param name="keydown"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Keydown(System.String)">
            <summary>
            Adds an onkeydown attribute with the specified value
            </summary>
            <param name="keydown">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Keypress(System.String)">
            <summary>
            Adds an onkeypress attribute with the specified value
            </summary>
            <param name="keypress">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Ku(System.String)">
            <summary>
            Short for keyup
            </summary>
            <param name="keyup"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Keyup(System.String)">
            <summary>
            Adds an onkeyup attribute with the specified value
            </summary>
            <param name="keyup">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.L(System.String)">
            <summary>
            Short for Load
            </summary>
            <param name="load"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Load(System.String)">
            <summary>
            Adds an onload attribute with the specified value
            </summary>
            <param name="load">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Mousedown(System.String)">
            <summary>
            Adds an onmousedown attribute with the specified value
            </summary>
            <param name="mousedown">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Mousemove(System.String)">
            <summary>
            Adds an onmousemove attribute with the specified value
            </summary>
            <param name="mousemove">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Mout(System.String)">
            <summary>
            Short for Mouseout
            </summary>
            <param name="mouseout"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Mouseout(System.String)">
            <summary>
            Adds an onmouseout attribute with the specified value
            </summary>
            <param name="mouseout">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Mo(System.String)">
            <summary>
            Short for Mouseover
            </summary>
            <param name="mouseover"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Mouseover(System.String)">
            <summary>
            Adds an onmouseover attribute with the specified value
            </summary>
            <param name="mouseover">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Mu(System.String)">
            <summary>
            Short for mouseup
            </summary>
            <param name="mouseUp"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Mouseup(System.String)">
            <summary>
            Adds an onmouseup attribute with the specified value
            </summary>
            <param name="mouseup">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Reset(System.String)">
            <summary>
            Adds an onreset attribute with the specified value
            </summary>
            <param name="reset">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Resize(System.String)">
            <summary>
            Adds an onresize attribute with the specified value
            </summary>
            <param name="resize">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.U(System.String)">
            <summary>
            Short for Unload
            </summary>
            <param name="unload"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Unload(System.String)">
            <summary>
            Adds an onunload attribute with the specified value
            </summary>
            <param name="unload">The value</param>
            <returns>The Tag</returns>
        </member>
        <member name="M:Bam.Net.Html.Tag.Wrap(System.String)">
            <summary>
            Wraps the current tag in a tag of the specified type and returns
            the wrapper tag
            </summary>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Style(System.Web.Mvc.TagBuilder,System.String,System.String)">
            <summary>
            Adds a style entry
            </summary>
            <param name="tagBuilder"></param>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Css(System.Web.Mvc.TagBuilder,System.String,System.String)">
            <summary>
            Adds the specified class name to the tagbuilder if no value is specified.
            Adds a style entry if a value is specified.
            </summary>
            <param name="tagBuilder"></param>
            <param name="styleOrClassName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.FirstChild(System.Web.Mvc.TagBuilder,System.Web.Mvc.TagBuilder)">
            <summary>
            Adds the specified child as the first element in the current TagBuilder
            </summary>
            <param name="tagBuilder"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.FirstChildIf(System.Web.Mvc.TagBuilder,System.Boolean,System.String)">
            <summary>
            Adds the specified child html as the first element in the current TagBuilder if 
            the specified condition is true
            </summary>
            <param name="tagBuilder"></param>
            <param name="condition"></param>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.FirstChildIf(System.Web.Mvc.TagBuilder,System.Boolean,System.Web.Mvc.TagBuilder)">
            <summary>
            Adds the specified child as the first element in the current TagBuilder if
            the specified condition is true
            </summary>
            <param name="tagBuilder"></param>
            <param name="condition"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Child(System.Web.Mvc.TagBuilder,System.String)">
            <summary>
            Adds the specified html to the end of the current TagBuilder html
            </summary>
            <param name="tagBuilder"></param>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Parent(System.Web.Mvc.TagBuilder,System.String)">
            <summary>
            Wraps the current TagBuilder in the specified tagName and returns
            the parent.
            </summary>
            <param name="tagBuilder"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Child(System.Web.Mvc.TagBuilder,System.Web.Mvc.TagBuilder,System.Web.Mvc.TagRenderMode)">
            <summary>
            Appends the specified child to the current TagBuilder
            </summary>
            <param name="tagBuilder"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.SelectIf(System.Web.Mvc.TagBuilder,System.Boolean)">
            <summary>
            Adds selected="selected" if the condition is true
            </summary>
            <param name="tagBuilder"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Radio(System.Web.Mvc.TagBuilder)">
            <summary>
            Adds attribute type="radio"
            </summary>
            <param name="tagBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Label(System.Web.Mvc.TagBuilder,System.String,System.String)">
            <summary>
            Adds a label element as a child using the specified forName and text.
            </summary>
            <param name="tagBuilder"></param>
            <param name="forName"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.DropDown(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.Object)">
            <summary>
            Creates a TagBuilder representing a select element using the
            keys and values of the Dictionary being extended.
            </summary>
            <param name="options"></param>
            <param name="selected"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Br(System.Web.Mvc.TagBuilder)">
            <summary>
            Add a br element
            </summary>
            <param name="tagBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.BrIf(System.Web.Mvc.TagBuilder,System.Boolean)">
            <summary>
            Add a br element if the condition is true
            </summary>
            <param name="tagBuilder"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.Attrs(System.Web.Mvc.TagBuilder,System.Object)">
            <summary>
            Applies all the attributes of the specified object
            </summary>
            <param name="tagBuilder"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.AttrsIf(System.Web.Mvc.TagBuilder,System.Boolean,System.Object)">
            <summary>
            Adds the specified htmlAttributes if the condition is true
            </summary>
            <param name="tagBuilder"></param>
            <param name="condition"></param>
            <param name="htmlAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.ToMvcHtml(System.Web.Mvc.TagBuilder,System.Web.Mvc.TagRenderMode)">
            <summary>
            Returns the current TagBuilder as an MvcHtmlString
            </summary>
            <param name="tagBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.TagBuilderExtensions.ToHtml(System.Web.Mvc.TagBuilder)">
            <summary>
            Shortcut for ToMvcHtml
            </summary>
            <param name="tagBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:Bam.Net.Html.UrlHelperExtensions.ServiceProxyDataSet(System.Web.Mvc.UrlHelper)">
            <summary>
            Add a reference to the DataSet.js resource script.
            </summary>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="T:Bam.Net.Js.DataSetTagBuilderExtensions">
            <summary>
            </summary>
        </member>
    </members>
</doc>
